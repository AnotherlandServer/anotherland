// Copyright (C) 2025 AnotherlandServer
// 
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as
// published by the Free Software Foundation, either version 3 of the
// License, or (at your option) any later version.
// 
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Affero General Public License for more details.
// 
// You should have received a copy of the GNU Affero General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

// #################################################
// # This file is generated. Do not edit manually. #
// #################################################

#![allow(unused_imports)]
use std::str::FromStr;
use std::collections::HashMap;
use std::collections::HashSet;
use once_cell::sync::Lazy;
use phf::phf_map;
use toolkit::types::AvatarId;
use toolkit::types::Uuid;
use toolkit::types::UUID_NIL;
use glam::Vec3;
use serde_json::Value as JsonValue;
use crate::Attribute;
use crate::AttributeInfo;
use crate::Class;
use crate::ContentRefList;
use crate::ParamType;
use crate::ParamFlag;
use crate::ParamError;
use crate::Value;
#[derive(PartialEq, Eq, Hash, Clone, Copy)]
pub enum NpcOtherland {
    Action0,
    Action0Duration,
    Action0Option,
    AlwaysVisibleToPlayers,
    AutoReviveDelay,
    AutoReviveTime,
    AwareRange,
    BeaconRadius,
    CollisionExtent,
    ContentClass,
    CycleQuestBase,
    DefaultWeapon,
    DespawnDelay,
    Dialogs,
    DisplayName,
    EnableInGame,
    FreedomProperties,
    Freq,
    GenerateInterestList,
    HiddenFromClients,
    HiddenFromPlayers,
    HideAfterInteraction,
    Icon,
    InstanceTags,
    InstanceZoneKey,
    InteractionDuration,
    InteractionRadius,
    InteractionResetTimer,
    IsNonSpawnedAvatar,
    IsSelfRevivable,
    LastInteractionTime,
    LuaScript,
    Lvl,
    MaterialOverride,
    Nodelink,
    OriginalNodeName,
    OriginalZoneName,
    PartyGuid,
    PathfindSafeSpawn,
    Pos,
    Power,
    Priority,
    QuestFlags,
    ReadableName,
    RespawnDelay,
    RespawnRegionName,
    RespawnRegionNameOverride,
    Rot,
    SelfRadius,
    SpawnMethod,
    SpawnPosition,
    SpawnRotation,
    Tags,
    TeamId,
    Ue3ClassId,
    Ue3EdVisual,
    VisibleOnQuestAvailable,
    VisibleOnQuestComplete,
    VisibleOnQuestFinished,
    VisibleOnQuestInProgress,
    WorldZoneObjectIndex,
    Zone,
    ZoneGuid,
    BitsMultiplier,
    Defb,
    DropLevelVariance,
    EvadeRadius,
    ExperienceMultiplier,
    FragmentsMultiplier,
    InstanceGroup,
    InstanceGuid,
    InteractRadius,
    IsUnAttackable,
    MoveDest,
    MoveSpeed,
    NickName,
    NpcStateInfo,
    NpcType,
    Orientation,
    RunSpeed,
    ShuffleSpeed,
    SomaMultiplier,
    SpawnLeashRadius,
    SpeakResponse,
    WalkSpeed,
    Abilities,
    ActivateCustomization,
    Aggression,
    AiState,
    AiTemplate,
    Alive,
    AliveTime,
    AttackedBy,
    AttackerGroup,
    AttributeEnergy,
    AttributeEnergyRegen,
    AttributeHastePhys,
    AttributeHasteSpell,
    AttributeHealthRegen,
    AttributeMovement,
    AutoGeneratedLootTable,
    AvatarStatus,
    BagVolume0,
    BaseDodgeChance,
    BaseEvadeChance,
    BaseParryChance,
    BehaviorConfig,
    BlockedAbilityEffectTypes,
    BonusDmg,
    BonusHp,
    CanBeHitByAoEThroughObstacles,
    CanBeLooted,
    CanBeNotifiedThroughObstacles,
    CanRotateOnClient,
    CapturedBy,
    CarryBack,
    CarryFront,
    Chest,
    ClientLoadingPriority,
    CombatDefb,
    CombatNotifyRadius,
    CombatStatus,
    CombatStyle,
    ConfigCategories,
    CurrentAiNotifyType,
    CurrentEmotion,
    CurrentForm,
    CurrentSkin,
    CustomizationGender,
    CustomizationHeight,
    DeathDurationMyLand,
    DefaultIdle,
    DefaultItems,
    DefaultItemsContentGuid,
    DieWithoutOwner,
    DirectorTags,
    DivertHp,
    DonatorName,
    EffectImmunityMainGroups,
    EffectImmunitySubGroups,
    EnableCustomization,
    EncounterFormation,
    EncounterId,
    EncounterRole,
    EnforceAliveTime,
    EvadeRange,
    ExtraV3Data,
    FaceTargetWhenClose,
    Faction,
    FragmentsRequiredOverride,
    FragmentTypeOverride,
    GeneralDifficulty,
    GroupDifficulty,
    GroupDifficultyNew,
    HasAttributes,
    Head,
    HpCur,
    HpMax,
    HpMin,
    HpMod,
    IgnoreTags,
    InMiniGame,
    InSleepState,
    Intelligence,
    InteractRange,
    InterestPos,
    IsInCombat,
    IsInFormation,
    IsLooted,
    IsOnGround,
    IsSellingCashItems,
    IsShardObject,
    IsVisible,
    LastAttackPosition,
    Lifetime,
    LootAlways,
    LootChances,
    LootExacts,
    LootItems,
    LootPartition1,
    LootPartition2,
    LootPartition3,
    LootPartition4,
    LootPartition5,
    LootPartition6,
    LootTable,
    LuaAssignedString,
    LuaScriptCombat,
    ModifyVisionRangeByLevel,
    Mover,
    OffsetData,
    PosDebug,
    PostSpawnStateDuration,
    Quest1,
    Quest2,
    QuestOwner,
    Quests,
    RangedAttackStrategy,
    ReactionPlan,
    RecipieDrop,
    RelativePosToCarrier,
    SayData,
    SayIndex,
    ScriptClass,
    ScriptConfig,
    SeekHelpBelowHp,
    SeekHelpExecutionRadius,
    SeekHelpFromNpcTypes,
    SeekHelpWithinRadius,
    SellCategories,
    SellExacts,
    SellItems,
    SellSkuItems,
    Size,
    SoundTag,
    SpawnerAvatarGuid,
    SpawnerAvatarId,
    SpawningOscillation,
    SpawningTime,
    SpawnLeashAnchor,
    StatAnyDmgReduction,
    StatAoEMaxSubTargets,
    StatAoESubTargetsDamageMod,
    StatArmorReduction,
    StatAttackPower,
    StatBaseDps,
    StatBendChance,
    StatBlockChance,
    StatBlockedDamageMod,
    StatCritChance,
    StatCriticalChanceReduction,
    StatCriticalDamageMod,
    StatDegenerateLevel,
    State,
    StatEnergyCurrent,
    StatEnergyCurrentH1,
    StatEnergyCurrentH2,
    StatEnergyCurrentH3,
    StatEnergyCurrentS1,
    StatEnergyCurrentS2,
    StatEnergyCurrentS3,
    StatEnergyMax,
    StatFinalDamageMod,
    StatFinalHealingMod,
    StatHasteClassSkills,
    StatHastePhysNormal,
    StatHealingReceivedMod,
    StatHealth,
    StatHeavyEnergyPerHit,
    StatHitChance,
    StatReflectChance,
    StatSpecialEnergyPerHit,
    StatStamina,
    StatStealthLevel,
    StatWeaponDps,
    Target,
    Teamwork,
    TeleportPos,
    TrophyMax,
    UniversalAwarenessRange,
    UseUnifiedVision,
    VisibleItemInfo,
    VisionAngle,
    VisionRange,
    Weapon,
    WeaponDrawnByDefault,
    WillSearchForEnemy,
}
pub(crate) static NPC_OTHERLAND_ATTRIBUTES: phf::Map<&'static str, NpcOtherland> = phf_map! {
    "action0" => NpcOtherland::Action0, "action0Duration" =>
    NpcOtherland::Action0Duration, "action0Option" => NpcOtherland::Action0Option,
    "alwaysVisibleToPlayers" => NpcOtherland::AlwaysVisibleToPlayers, "autoReviveDelay"
    => NpcOtherland::AutoReviveDelay, "autoReviveTime" => NpcOtherland::AutoReviveTime,
    "AwareRange" => NpcOtherland::AwareRange, "BeaconRadius" =>
    NpcOtherland::BeaconRadius, "collisionExtent" => NpcOtherland::CollisionExtent,
    "ContentClass" => NpcOtherland::ContentClass, "CycleQuestBase" =>
    NpcOtherland::CycleQuestBase, "defaultWeapon" => NpcOtherland::DefaultWeapon,
    "despawnDelay" => NpcOtherland::DespawnDelay, "Dialogs" => NpcOtherland::Dialogs,
    "DisplayName" => NpcOtherland::DisplayName, "EnableInGame" =>
    NpcOtherland::EnableInGame, "FreedomProperties" => NpcOtherland::FreedomProperties,
    "Freq" => NpcOtherland::Freq, "generateInterestList" =>
    NpcOtherland::GenerateInterestList, "hiddenFromClients" =>
    NpcOtherland::HiddenFromClients, "hiddenFromPlayers" =>
    NpcOtherland::HiddenFromPlayers, "HideAfterInteraction" =>
    NpcOtherland::HideAfterInteraction, "Icon" => NpcOtherland::Icon, "instanceTags" =>
    NpcOtherland::InstanceTags, "instanceZoneKey" => NpcOtherland::InstanceZoneKey,
    "InteractionDuration" => NpcOtherland::InteractionDuration, "InteractionRadius" =>
    NpcOtherland::InteractionRadius, "InteractionResetTimer" =>
    NpcOtherland::InteractionResetTimer, "isNonSpawnedAvatar" =>
    NpcOtherland::IsNonSpawnedAvatar, "isSelfRevivable" => NpcOtherland::IsSelfRevivable,
    "LastInteractionTime" => NpcOtherland::LastInteractionTime, "LuaScript" =>
    NpcOtherland::LuaScript, "lvl" => NpcOtherland::Lvl, "MaterialOverride" =>
    NpcOtherland::MaterialOverride, "nodelink" => NpcOtherland::Nodelink,
    "originalNodeName" => NpcOtherland::OriginalNodeName, "originalZoneName" =>
    NpcOtherland::OriginalZoneName, "partyGUID" => NpcOtherland::PartyGuid,
    "pathfindSafeSpawn" => NpcOtherland::PathfindSafeSpawn, "pos" => NpcOtherland::Pos,
    "Power" => NpcOtherland::Power, "priority" => NpcOtherland::Priority, "QuestFlags" =>
    NpcOtherland::QuestFlags, "ReadableName" => NpcOtherland::ReadableName,
    "respawnDelay" => NpcOtherland::RespawnDelay, "RespawnRegionName" =>
    NpcOtherland::RespawnRegionName, "RespawnRegionNameOverride" =>
    NpcOtherland::RespawnRegionNameOverride, "rot" => NpcOtherland::Rot, "selfRadius" =>
    NpcOtherland::SelfRadius, "spawnMethod" => NpcOtherland::SpawnMethod, "spawnPosition"
    => NpcOtherland::SpawnPosition, "spawnRotation" => NpcOtherland::SpawnRotation,
    "tags" => NpcOtherland::Tags, "teamID" => NpcOtherland::TeamId, "UE3ClassID" =>
    NpcOtherland::Ue3ClassId, "UE3EdVisual" => NpcOtherland::Ue3EdVisual,
    "VisibleOnQuestAvailable" => NpcOtherland::VisibleOnQuestAvailable,
    "VisibleOnQuestComplete" => NpcOtherland::VisibleOnQuestComplete,
    "VisibleOnQuestFinished" => NpcOtherland::VisibleOnQuestFinished,
    "VisibleOnQuestInProgress" => NpcOtherland::VisibleOnQuestInProgress,
    "WorldZoneObjectIndex" => NpcOtherland::WorldZoneObjectIndex, "zone" =>
    NpcOtherland::Zone, "ZoneGuid" => NpcOtherland::ZoneGuid, "BitsMultiplier" =>
    NpcOtherland::BitsMultiplier, "defb" => NpcOtherland::Defb, "dropLevelVariance" =>
    NpcOtherland::DropLevelVariance, "evadeRadius" => NpcOtherland::EvadeRadius,
    "ExperienceMultiplier" => NpcOtherland::ExperienceMultiplier, "FragmentsMultiplier"
    => NpcOtherland::FragmentsMultiplier, "instanceGroup" => NpcOtherland::InstanceGroup,
    "instanceGUID" => NpcOtherland::InstanceGuid, "interactRadius" =>
    NpcOtherland::InteractRadius, "isUnAttackable" => NpcOtherland::IsUnAttackable,
    "moveDest" => NpcOtherland::MoveDest, "moveSpeed" => NpcOtherland::MoveSpeed,
    "nickName" => NpcOtherland::NickName, "npcStateInfo" => NpcOtherland::NpcStateInfo,
    "npcType" => NpcOtherland::NpcType, "orientation" => NpcOtherland::Orientation,
    "runSpeed" => NpcOtherland::RunSpeed, "shuffleSpeed" => NpcOtherland::ShuffleSpeed,
    "SOMAMultiplier" => NpcOtherland::SomaMultiplier, "spawnLeashRadius" =>
    NpcOtherland::SpawnLeashRadius, "speakResponse" => NpcOtherland::SpeakResponse,
    "walkSpeed" => NpcOtherland::WalkSpeed, "abilities" => NpcOtherland::Abilities,
    "activateCustomization" => NpcOtherland::ActivateCustomization, "Aggression" =>
    NpcOtherland::Aggression, "aiState" => NpcOtherland::AiState, "AITemplate" =>
    NpcOtherland::AiTemplate, "alive" => NpcOtherland::Alive, "aliveTime" =>
    NpcOtherland::AliveTime, "attackedBy" => NpcOtherland::AttackedBy, "attackerGroup" =>
    NpcOtherland::AttackerGroup, "attributeEnergy" => NpcOtherland::AttributeEnergy,
    "attributeEnergyRegen" => NpcOtherland::AttributeEnergyRegen, "attributeHastePhys" =>
    NpcOtherland::AttributeHastePhys, "attributeHasteSpell" =>
    NpcOtherland::AttributeHasteSpell, "attributeHealthRegen" =>
    NpcOtherland::AttributeHealthRegen, "attributeMovement" =>
    NpcOtherland::AttributeMovement, "autoGeneratedLootTable" =>
    NpcOtherland::AutoGeneratedLootTable, "avatarStatus" => NpcOtherland::AvatarStatus,
    "bagVolume0" => NpcOtherland::BagVolume0, "baseDodgeChance" =>
    NpcOtherland::BaseDodgeChance, "baseEvadeChance" => NpcOtherland::BaseEvadeChance,
    "baseParryChance" => NpcOtherland::BaseParryChance, "behaviorConfig" =>
    NpcOtherland::BehaviorConfig, "blockedAbilityEffectTypes" =>
    NpcOtherland::BlockedAbilityEffectTypes, "BonusDmg" => NpcOtherland::BonusDmg,
    "BonusHP" => NpcOtherland::BonusHp, "canBeHitByAoEThroughObstacles" =>
    NpcOtherland::CanBeHitByAoEThroughObstacles, "canBeLooted" =>
    NpcOtherland::CanBeLooted, "canBeNotifiedThroughObstacles" =>
    NpcOtherland::CanBeNotifiedThroughObstacles, "canRotateOnClient" =>
    NpcOtherland::CanRotateOnClient, "capturedBy" => NpcOtherland::CapturedBy,
    "carryBack" => NpcOtherland::CarryBack, "carryFront" => NpcOtherland::CarryFront,
    "chest" => NpcOtherland::Chest, "clientLoadingPriority" =>
    NpcOtherland::ClientLoadingPriority, "combatDefb" => NpcOtherland::CombatDefb,
    "combatNotifyRadius" => NpcOtherland::CombatNotifyRadius, "combatStatus" =>
    NpcOtherland::CombatStatus, "combatStyle" => NpcOtherland::CombatStyle,
    "ConfigCategories" => NpcOtherland::ConfigCategories, "currentAINotifyType" =>
    NpcOtherland::CurrentAiNotifyType, "currentEmotion" => NpcOtherland::CurrentEmotion,
    "currentForm" => NpcOtherland::CurrentForm, "currentSkin" =>
    NpcOtherland::CurrentSkin, "customizationGender" =>
    NpcOtherland::CustomizationGender, "customizationHeight" =>
    NpcOtherland::CustomizationHeight, "deathDurationMyLand" =>
    NpcOtherland::DeathDurationMyLand, "defaultIdle" => NpcOtherland::DefaultIdle,
    "defaultItems" => NpcOtherland::DefaultItems, "defaultItemsContentGuid" =>
    NpcOtherland::DefaultItemsContentGuid, "dieWithoutOwner" =>
    NpcOtherland::DieWithoutOwner, "directorTags" => NpcOtherland::DirectorTags,
    "DivertHp" => NpcOtherland::DivertHp, "donatorName" => NpcOtherland::DonatorName,
    "EffectImmunityMainGroups" => NpcOtherland::EffectImmunityMainGroups,
    "EffectImmunitySubGroups" => NpcOtherland::EffectImmunitySubGroups,
    "enableCustomization" => NpcOtherland::EnableCustomization, "encounterFormation" =>
    NpcOtherland::EncounterFormation, "encounterID" => NpcOtherland::EncounterId,
    "encounterRole" => NpcOtherland::EncounterRole, "enforceAliveTime" =>
    NpcOtherland::EnforceAliveTime, "evadeRange" => NpcOtherland::EvadeRange,
    "extraV3Data" => NpcOtherland::ExtraV3Data, "faceTargetWhenClose" =>
    NpcOtherland::FaceTargetWhenClose, "Faction" => NpcOtherland::Faction,
    "fragmentsRequiredOverride" => NpcOtherland::FragmentsRequiredOverride,
    "fragmentTypeOverride" => NpcOtherland::FragmentTypeOverride, "generalDifficulty" =>
    NpcOtherland::GeneralDifficulty, "groupDifficulty" => NpcOtherland::GroupDifficulty,
    "groupDifficultyNew" => NpcOtherland::GroupDifficultyNew, "hasAttributes" =>
    NpcOtherland::HasAttributes, "head" => NpcOtherland::Head, "hpCur" =>
    NpcOtherland::HpCur, "hpMax" => NpcOtherland::HpMax, "hpMin" => NpcOtherland::HpMin,
    "HpMod" => NpcOtherland::HpMod, "IgnoreTags" => NpcOtherland::IgnoreTags,
    "inMiniGame" => NpcOtherland::InMiniGame, "inSleepState" =>
    NpcOtherland::InSleepState, "Intelligence" => NpcOtherland::Intelligence,
    "interactRange" => NpcOtherland::InteractRange, "interestPos" =>
    NpcOtherland::InterestPos, "isInCombat" => NpcOtherland::IsInCombat, "isInFormation"
    => NpcOtherland::IsInFormation, "isLooted" => NpcOtherland::IsLooted, "isOnGround" =>
    NpcOtherland::IsOnGround, "isSellingCashItems" => NpcOtherland::IsSellingCashItems,
    "isShardObject" => NpcOtherland::IsShardObject, "isVisible" =>
    NpcOtherland::IsVisible, "lastAttackPosition" => NpcOtherland::LastAttackPosition,
    "lifetime" => NpcOtherland::Lifetime, "lootAlways" => NpcOtherland::LootAlways,
    "lootChances" => NpcOtherland::LootChances, "lootExacts" => NpcOtherland::LootExacts,
    "lootItems" => NpcOtherland::LootItems, "LootPartition1" =>
    NpcOtherland::LootPartition1, "LootPartition2" => NpcOtherland::LootPartition2,
    "LootPartition3" => NpcOtherland::LootPartition3, "LootPartition4" =>
    NpcOtherland::LootPartition4, "LootPartition5" => NpcOtherland::LootPartition5,
    "LootPartition6" => NpcOtherland::LootPartition6, "lootTable" =>
    NpcOtherland::LootTable, "LuaAssignedString" => NpcOtherland::LuaAssignedString,
    "LuaScriptCombat" => NpcOtherland::LuaScriptCombat, "modifyVisionRangeByLevel" =>
    NpcOtherland::ModifyVisionRangeByLevel, "mover" => NpcOtherland::Mover, "offsetData"
    => NpcOtherland::OffsetData, "posDebug" => NpcOtherland::PosDebug,
    "postSpawnStateDuration" => NpcOtherland::PostSpawnStateDuration, "quest1" =>
    NpcOtherland::Quest1, "quest2" => NpcOtherland::Quest2, "questOwner" =>
    NpcOtherland::QuestOwner, "quests" => NpcOtherland::Quests, "RangedAttackStrategy" =>
    NpcOtherland::RangedAttackStrategy, "reactionPlan" => NpcOtherland::ReactionPlan,
    "RecipieDrop" => NpcOtherland::RecipieDrop, "relativePosToCarrier" =>
    NpcOtherland::RelativePosToCarrier, "sayData" => NpcOtherland::SayData, "sayIndex" =>
    NpcOtherland::SayIndex, "scriptClass" => NpcOtherland::ScriptClass, "scriptConfig" =>
    NpcOtherland::ScriptConfig, "SeekHelpBelowHP" => NpcOtherland::SeekHelpBelowHp,
    "SeekHelpExecutionRadius" => NpcOtherland::SeekHelpExecutionRadius,
    "SeekHelpFromNPCTypes" => NpcOtherland::SeekHelpFromNpcTypes, "SeekHelpWithinRadius"
    => NpcOtherland::SeekHelpWithinRadius, "sellCategories" =>
    NpcOtherland::SellCategories, "sellExacts" => NpcOtherland::SellExacts, "sellItems"
    => NpcOtherland::SellItems, "sellSKUItems" => NpcOtherland::SellSkuItems, "Size" =>
    NpcOtherland::Size, "soundTag" => NpcOtherland::SoundTag, "spawnerAvatarGuid" =>
    NpcOtherland::SpawnerAvatarGuid, "spawnerAvatarID" => NpcOtherland::SpawnerAvatarId,
    "spawningOscillation" => NpcOtherland::SpawningOscillation, "spawningTime" =>
    NpcOtherland::SpawningTime, "spawnLeashAnchor" => NpcOtherland::SpawnLeashAnchor,
    "statAnyDmgReduction" => NpcOtherland::StatAnyDmgReduction, "statAoE_MaxSubTargets"
    => NpcOtherland::StatAoEMaxSubTargets, "statAoE_SubTargetsDamageMod" =>
    NpcOtherland::StatAoESubTargetsDamageMod, "statArmorReduction" =>
    NpcOtherland::StatArmorReduction, "statAttackPower" => NpcOtherland::StatAttackPower,
    "statBaseDPS" => NpcOtherland::StatBaseDps, "statBendChance" =>
    NpcOtherland::StatBendChance, "statBlockChance" => NpcOtherland::StatBlockChance,
    "statBlockedDamageMod" => NpcOtherland::StatBlockedDamageMod, "statCritChance" =>
    NpcOtherland::StatCritChance, "statCriticalChanceReduction" =>
    NpcOtherland::StatCriticalChanceReduction, "statCriticalDamageMod" =>
    NpcOtherland::StatCriticalDamageMod, "statDegenerate_Level" =>
    NpcOtherland::StatDegenerateLevel, "State" => NpcOtherland::State,
    "statEnergyCurrent" => NpcOtherland::StatEnergyCurrent, "statEnergyCurrentH1" =>
    NpcOtherland::StatEnergyCurrentH1, "statEnergyCurrentH2" =>
    NpcOtherland::StatEnergyCurrentH2, "statEnergyCurrentH3" =>
    NpcOtherland::StatEnergyCurrentH3, "statEnergyCurrentS1" =>
    NpcOtherland::StatEnergyCurrentS1, "statEnergyCurrentS2" =>
    NpcOtherland::StatEnergyCurrentS2, "statEnergyCurrentS3" =>
    NpcOtherland::StatEnergyCurrentS3, "statEnergyMax" => NpcOtherland::StatEnergyMax,
    "statFinalDamageMod" => NpcOtherland::StatFinalDamageMod, "statFinalHealingMod" =>
    NpcOtherland::StatFinalHealingMod, "statHasteClassSkills" =>
    NpcOtherland::StatHasteClassSkills, "statHastePhysNormal" =>
    NpcOtherland::StatHastePhysNormal, "statHealingReceivedMod" =>
    NpcOtherland::StatHealingReceivedMod, "statHealth" => NpcOtherland::StatHealth,
    "statHeavyEnergyPerHit" => NpcOtherland::StatHeavyEnergyPerHit, "statHitChance" =>
    NpcOtherland::StatHitChance, "statReflectChance" => NpcOtherland::StatReflectChance,
    "statSpecialEnergyPerHit" => NpcOtherland::StatSpecialEnergyPerHit, "statStamina" =>
    NpcOtherland::StatStamina, "statStealth_Level" => NpcOtherland::StatStealthLevel,
    "statWeaponDPS" => NpcOtherland::StatWeaponDps, "target" => NpcOtherland::Target,
    "Teamwork" => NpcOtherland::Teamwork, "teleportPos" => NpcOtherland::TeleportPos,
    "trophyMax" => NpcOtherland::TrophyMax, "universalAwarenessRange" =>
    NpcOtherland::UniversalAwarenessRange, "useUnifiedVision" =>
    NpcOtherland::UseUnifiedVision, "visibleItemInfo" => NpcOtherland::VisibleItemInfo,
    "visionAngle" => NpcOtherland::VisionAngle, "visionRange" =>
    NpcOtherland::VisionRange, "weapon" => NpcOtherland::Weapon, "weaponDrawnByDefault"
    => NpcOtherland::WeaponDrawnByDefault, "willSearchForEnemy" =>
    NpcOtherland::WillSearchForEnemy,
};
pub(crate) static NPC_OTHERLAND_ATTRIBUTES_ID: phf::Map<u16, NpcOtherland> = phf_map! {
    1179u16 => NpcOtherland::Action0, 1180u16 => NpcOtherland::Action0Duration, 1154u16
    => NpcOtherland::Action0Option, 3493u16 => NpcOtherland::AlwaysVisibleToPlayers,
    10525u16 => NpcOtherland::AutoReviveDelay, 10465u16 => NpcOtherland::AutoReviveTime,
    8244u16 => NpcOtherland::AwareRange, 10936u16 => NpcOtherland::BeaconRadius, 1181u16
    => NpcOtherland::CollisionExtent, 1178u16 => NpcOtherland::ContentClass, 11071u16 =>
    NpcOtherland::CycleQuestBase, 7211u16 => NpcOtherland::DefaultWeapon, 9635u16 =>
    NpcOtherland::DespawnDelay, 8831u16 => NpcOtherland::Dialogs, 6597u16 =>
    NpcOtherland::DisplayName, 6823u16 => NpcOtherland::EnableInGame, 11195u16 =>
    NpcOtherland::FreedomProperties, 1193u16 => NpcOtherland::Freq, 1182u16 =>
    NpcOtherland::GenerateInterestList, 1183u16 => NpcOtherland::HiddenFromClients,
    1144u16 => NpcOtherland::HiddenFromPlayers, 9051u16 =>
    NpcOtherland::HideAfterInteraction, 4351u16 => NpcOtherland::Icon, 1155u16 =>
    NpcOtherland::InstanceTags, 5560u16 => NpcOtherland::InstanceZoneKey, 11141u16 =>
    NpcOtherland::InteractionDuration, 7472u16 => NpcOtherland::InteractionRadius,
    9053u16 => NpcOtherland::InteractionResetTimer, 1077u16 =>
    NpcOtherland::IsNonSpawnedAvatar, 7156u16 => NpcOtherland::IsSelfRevivable, 9052u16
    => NpcOtherland::LastInteractionTime, 7779u16 => NpcOtherland::LuaScript, 6180u16 =>
    NpcOtherland::Lvl, 4730u16 => NpcOtherland::MaterialOverride, 1149u16 =>
    NpcOtherland::Nodelink, 1079u16 => NpcOtherland::OriginalNodeName, 1080u16 =>
    NpcOtherland::OriginalZoneName, 1184u16 => NpcOtherland::PartyGuid, 1136u16 =>
    NpcOtherland::PathfindSafeSpawn, 1185u16 => NpcOtherland::Pos, 1192u16 =>
    NpcOtherland::Power, 1186u16 => NpcOtherland::Priority, 9933u16 =>
    NpcOtherland::QuestFlags, 3677u16 => NpcOtherland::ReadableName, 1076u16 =>
    NpcOtherland::RespawnDelay, 10783u16 => NpcOtherland::RespawnRegionName, 10842u16 =>
    NpcOtherland::RespawnRegionNameOverride, 1165u16 => NpcOtherland::Rot, 1187u16 =>
    NpcOtherland::SelfRadius, 6098u16 => NpcOtherland::SpawnMethod, 7834u16 =>
    NpcOtherland::SpawnPosition, 8187u16 => NpcOtherland::SpawnRotation, 1188u16 =>
    NpcOtherland::Tags, 1189u16 => NpcOtherland::TeamId, 1168u16 =>
    NpcOtherland::Ue3ClassId, 9809u16 => NpcOtherland::Ue3EdVisual, 8590u16 =>
    NpcOtherland::VisibleOnQuestAvailable, 8587u16 =>
    NpcOtherland::VisibleOnQuestComplete, 8588u16 =>
    NpcOtherland::VisibleOnQuestFinished, 8589u16 =>
    NpcOtherland::VisibleOnQuestInProgress, 1078u16 =>
    NpcOtherland::WorldZoneObjectIndex, 1191u16 => NpcOtherland::Zone, 1102u16 =>
    NpcOtherland::ZoneGuid, 11302u16 => NpcOtherland::BitsMultiplier, 1161u16 =>
    NpcOtherland::Defb, 9712u16 => NpcOtherland::DropLevelVariance, 6877u16 =>
    NpcOtherland::EvadeRadius, 11304u16 => NpcOtherland::ExperienceMultiplier, 11301u16
    => NpcOtherland::FragmentsMultiplier, 8042u16 => NpcOtherland::InstanceGroup, 1171u16
    => NpcOtherland::InstanceGuid, 4180u16 => NpcOtherland::InteractRadius, 4934u16 =>
    NpcOtherland::IsUnAttackable, 1172u16 => NpcOtherland::MoveDest, 1173u16 =>
    NpcOtherland::MoveSpeed, 1174u16 => NpcOtherland::NickName, 7923u16 =>
    NpcOtherland::NpcStateInfo, 1175u16 => NpcOtherland::NpcType, 1176u16 =>
    NpcOtherland::Orientation, 1153u16 => NpcOtherland::RunSpeed, 1145u16 =>
    NpcOtherland::ShuffleSpeed, 11303u16 => NpcOtherland::SomaMultiplier, 5302u16 =>
    NpcOtherland::SpawnLeashRadius, 1177u16 => NpcOtherland::SpeakResponse, 1146u16 =>
    NpcOtherland::WalkSpeed, 8913u16 => NpcOtherland::Abilities, 8059u16 =>
    NpcOtherland::ActivateCustomization, 5421u16 => NpcOtherland::Aggression, 10173u16 =>
    NpcOtherland::AiState, 8818u16 => NpcOtherland::AiTemplate, 1150u16 =>
    NpcOtherland::Alive, 1132u16 => NpcOtherland::AliveTime, 1159u16 =>
    NpcOtherland::AttackedBy, 4195u16 => NpcOtherland::AttackerGroup, 6296u16 =>
    NpcOtherland::AttributeEnergy, 6295u16 => NpcOtherland::AttributeEnergyRegen, 6284u16
    => NpcOtherland::AttributeHastePhys, 6283u16 => NpcOtherland::AttributeHasteSpell,
    6297u16 => NpcOtherland::AttributeHealthRegen, 5411u16 =>
    NpcOtherland::AttributeMovement, 9362u16 => NpcOtherland::AutoGeneratedLootTable,
    1158u16 => NpcOtherland::AvatarStatus, 1131u16 => NpcOtherland::BagVolume0, 6884u16
    => NpcOtherland::BaseDodgeChance, 6888u16 => NpcOtherland::BaseEvadeChance, 6889u16
    => NpcOtherland::BaseParryChance, 1135u16 => NpcOtherland::BehaviorConfig, 1101u16 =>
    NpcOtherland::BlockedAbilityEffectTypes, 11568u16 => NpcOtherland::BonusDmg, 11567u16
    => NpcOtherland::BonusHp, 10378u16 => NpcOtherland::CanBeHitByAoEThroughObstacles,
    5856u16 => NpcOtherland::CanBeLooted, 10374u16 =>
    NpcOtherland::CanBeNotifiedThroughObstacles, 10167u16 =>
    NpcOtherland::CanRotateOnClient, 4834u16 => NpcOtherland::CapturedBy, 1130u16 =>
    NpcOtherland::CarryBack, 1129u16 => NpcOtherland::CarryFront, 1128u16 =>
    NpcOtherland::Chest, 11288u16 => NpcOtherland::ClientLoadingPriority, 9919u16 =>
    NpcOtherland::CombatDefb, 9211u16 => NpcOtherland::CombatNotifyRadius, 1160u16 =>
    NpcOtherland::CombatStatus, 1095u16 => NpcOtherland::CombatStyle, 12296u16 =>
    NpcOtherland::ConfigCategories, 4305u16 => NpcOtherland::CurrentAiNotifyType, 1110u16
    => NpcOtherland::CurrentEmotion, 1151u16 => NpcOtherland::CurrentForm, 1152u16 =>
    NpcOtherland::CurrentSkin, 7756u16 => NpcOtherland::CustomizationGender, 7755u16 =>
    NpcOtherland::CustomizationHeight, 6543u16 => NpcOtherland::DeathDurationMyLand,
    1117u16 => NpcOtherland::DefaultIdle, 8102u16 => NpcOtherland::DefaultItems, 8051u16
    => NpcOtherland::DefaultItemsContentGuid, 10924u16 => NpcOtherland::DieWithoutOwner,
    8065u16 => NpcOtherland::DirectorTags, 5493u16 => NpcOtherland::DivertHp, 10913u16 =>
    NpcOtherland::DonatorName, 11088u16 => NpcOtherland::EffectImmunityMainGroups,
    11087u16 => NpcOtherland::EffectImmunitySubGroups, 8055u16 =>
    NpcOtherland::EnableCustomization, 4838u16 => NpcOtherland::EncounterFormation,
    4816u16 => NpcOtherland::EncounterId, 4827u16 => NpcOtherland::EncounterRole,
    10920u16 => NpcOtherland::EnforceAliveTime, 1113u16 => NpcOtherland::EvadeRange,
    1121u16 => NpcOtherland::ExtraV3Data, 10163u16 => NpcOtherland::FaceTargetWhenClose,
    9205u16 => NpcOtherland::Faction, 5999u16 => NpcOtherland::FragmentsRequiredOverride,
    6000u16 => NpcOtherland::FragmentTypeOverride, 9505u16 =>
    NpcOtherland::GeneralDifficulty, 9497u16 => NpcOtherland::GroupDifficulty, 11569u16
    => NpcOtherland::GroupDifficultyNew, 6298u16 => NpcOtherland::HasAttributes, 1127u16
    => NpcOtherland::Head, 1164u16 => NpcOtherland::HpCur, 1147u16 =>
    NpcOtherland::HpMax, 1112u16 => NpcOtherland::HpMin, 12142u16 => NpcOtherland::HpMod,
    4211u16 => NpcOtherland::IgnoreTags, 4199u16 => NpcOtherland::InMiniGame, 6092u16 =>
    NpcOtherland::InSleepState, 5420u16 => NpcOtherland::Intelligence, 1115u16 =>
    NpcOtherland::InteractRange, 1157u16 => NpcOtherland::InterestPos, 1086u16 =>
    NpcOtherland::IsInCombat, 5944u16 => NpcOtherland::IsInFormation, 4655u16 =>
    NpcOtherland::IsLooted, 8811u16 => NpcOtherland::IsOnGround, 11221u16 =>
    NpcOtherland::IsSellingCashItems, 5917u16 => NpcOtherland::IsShardObject, 8791u16 =>
    NpcOtherland::IsVisible, 1109u16 => NpcOtherland::LastAttackPosition, 1140u16 =>
    NpcOtherland::Lifetime, 1107u16 => NpcOtherland::LootAlways, 1104u16 =>
    NpcOtherland::LootChances, 1106u16 => NpcOtherland::LootExacts, 1105u16 =>
    NpcOtherland::LootItems, 4301u16 => NpcOtherland::LootPartition1, 4311u16 =>
    NpcOtherland::LootPartition2, 4397u16 => NpcOtherland::LootPartition3, 4396u16 =>
    NpcOtherland::LootPartition4, 4395u16 => NpcOtherland::LootPartition5, 4394u16 =>
    NpcOtherland::LootPartition6, 1108u16 => NpcOtherland::LootTable, 11020u16 =>
    NpcOtherland::LuaAssignedString, 9861u16 => NpcOtherland::LuaScriptCombat, 11294u16
    => NpcOtherland::ModifyVisionRangeByLevel, 3199u16 => NpcOtherland::Mover, 1096u16 =>
    NpcOtherland::OffsetData, 5504u16 => NpcOtherland::PosDebug, 10115u16 =>
    NpcOtherland::PostSpawnStateDuration, 1123u16 => NpcOtherland::Quest1, 1120u16 =>
    NpcOtherland::Quest2, 1111u16 => NpcOtherland::QuestOwner, 1097u16 =>
    NpcOtherland::Quests, 11337u16 => NpcOtherland::RangedAttackStrategy, 1124u16 =>
    NpcOtherland::ReactionPlan, 11783u16 => NpcOtherland::RecipieDrop, 3198u16 =>
    NpcOtherland::RelativePosToCarrier, 1133u16 => NpcOtherland::SayData, 1134u16 =>
    NpcOtherland::SayIndex, 4820u16 => NpcOtherland::ScriptClass, 5828u16 =>
    NpcOtherland::ScriptConfig, 6769u16 => NpcOtherland::SeekHelpBelowHp, 8806u16 =>
    NpcOtherland::SeekHelpExecutionRadius, 6797u16 => NpcOtherland::SeekHelpFromNpcTypes,
    6768u16 => NpcOtherland::SeekHelpWithinRadius, 11341u16 =>
    NpcOtherland::SellCategories, 1125u16 => NpcOtherland::SellExacts, 1126u16 =>
    NpcOtherland::SellItems, 10178u16 => NpcOtherland::SellSkuItems, 1100u16 =>
    NpcOtherland::Size, 4913u16 => NpcOtherland::SoundTag, 5921u16 =>
    NpcOtherland::SpawnerAvatarGuid, 1139u16 => NpcOtherland::SpawnerAvatarId, 1137u16 =>
    NpcOtherland::SpawningOscillation, 1138u16 => NpcOtherland::SpawningTime, 6024u16 =>
    NpcOtherland::SpawnLeashAnchor, 10063u16 => NpcOtherland::StatAnyDmgReduction,
    10026u16 => NpcOtherland::StatAoEMaxSubTargets, 10025u16 =>
    NpcOtherland::StatAoESubTargetsDamageMod, 9590u16 =>
    NpcOtherland::StatArmorReduction, 9565u16 => NpcOtherland::StatAttackPower, 9514u16
    => NpcOtherland::StatBaseDps, 9510u16 => NpcOtherland::StatBendChance, 6898u16 =>
    NpcOtherland::StatBlockChance, 9594u16 => NpcOtherland::StatBlockedDamageMod, 9569u16
    => NpcOtherland::StatCritChance, 9573u16 =>
    NpcOtherland::StatCriticalChanceReduction, 9595u16 =>
    NpcOtherland::StatCriticalDamageMod, 10043u16 => NpcOtherland::StatDegenerateLevel,
    9865u16 => NpcOtherland::State, 9576u16 => NpcOtherland::StatEnergyCurrent, 6778u16
    => NpcOtherland::StatEnergyCurrentH1, 11022u16 => NpcOtherland::StatEnergyCurrentH2,
    11240u16 => NpcOtherland::StatEnergyCurrentH3, 6777u16 =>
    NpcOtherland::StatEnergyCurrentS1, 11023u16 => NpcOtherland::StatEnergyCurrentS2,
    11239u16 => NpcOtherland::StatEnergyCurrentS3, 9575u16 =>
    NpcOtherland::StatEnergyMax, 11211u16 => NpcOtherland::StatFinalDamageMod, 11212u16
    => NpcOtherland::StatFinalHealingMod, 11246u16 => NpcOtherland::StatHasteClassSkills,
    9574u16 => NpcOtherland::StatHastePhysNormal, 11391u16 =>
    NpcOtherland::StatHealingReceivedMod, 9533u16 => NpcOtherland::StatHealth, 7043u16 =>
    NpcOtherland::StatHeavyEnergyPerHit, 9512u16 => NpcOtherland::StatHitChance, 9509u16
    => NpcOtherland::StatReflectChance, 7042u16 => NpcOtherland::StatSpecialEnergyPerHit,
    9605u16 => NpcOtherland::StatStamina, 7132u16 => NpcOtherland::StatStealthLevel,
    9513u16 => NpcOtherland::StatWeaponDps, 1167u16 => NpcOtherland::Target, 5419u16 =>
    NpcOtherland::Teamwork, 1103u16 => NpcOtherland::TeleportPos, 3135u16 =>
    NpcOtherland::TrophyMax, 6792u16 => NpcOtherland::UniversalAwarenessRange, 11293u16
    => NpcOtherland::UseUnifiedVision, 1075u16 => NpcOtherland::VisibleItemInfo, 6788u16
    => NpcOtherland::VisionAngle, 1114u16 => NpcOtherland::VisionRange, 1169u16 =>
    NpcOtherland::Weapon, 9346u16 => NpcOtherland::WeaponDrawnByDefault, 9923u16 =>
    NpcOtherland::WillSearchForEnemy,
};
impl Attribute for NpcOtherland {
    fn class() -> Class {
        Class::NpcOtherland
    }
    fn static_info(&self) -> &'static dyn AttributeInfo {
        match self {
            Self::Action0 => &Self::Action0,
            Self::Action0Duration => &Self::Action0Duration,
            Self::Action0Option => &Self::Action0Option,
            Self::AlwaysVisibleToPlayers => &Self::AlwaysVisibleToPlayers,
            Self::AutoReviveDelay => &Self::AutoReviveDelay,
            Self::AutoReviveTime => &Self::AutoReviveTime,
            Self::AwareRange => &Self::AwareRange,
            Self::BeaconRadius => &Self::BeaconRadius,
            Self::CollisionExtent => &Self::CollisionExtent,
            Self::ContentClass => &Self::ContentClass,
            Self::CycleQuestBase => &Self::CycleQuestBase,
            Self::DefaultWeapon => &Self::DefaultWeapon,
            Self::DespawnDelay => &Self::DespawnDelay,
            Self::Dialogs => &Self::Dialogs,
            Self::DisplayName => &Self::DisplayName,
            Self::EnableInGame => &Self::EnableInGame,
            Self::FreedomProperties => &Self::FreedomProperties,
            Self::Freq => &Self::Freq,
            Self::GenerateInterestList => &Self::GenerateInterestList,
            Self::HiddenFromClients => &Self::HiddenFromClients,
            Self::HiddenFromPlayers => &Self::HiddenFromPlayers,
            Self::HideAfterInteraction => &Self::HideAfterInteraction,
            Self::Icon => &Self::Icon,
            Self::InstanceTags => &Self::InstanceTags,
            Self::InstanceZoneKey => &Self::InstanceZoneKey,
            Self::InteractionDuration => &Self::InteractionDuration,
            Self::InteractionRadius => &Self::InteractionRadius,
            Self::InteractionResetTimer => &Self::InteractionResetTimer,
            Self::IsNonSpawnedAvatar => &Self::IsNonSpawnedAvatar,
            Self::IsSelfRevivable => &Self::IsSelfRevivable,
            Self::LastInteractionTime => &Self::LastInteractionTime,
            Self::LuaScript => &Self::LuaScript,
            Self::Lvl => &Self::Lvl,
            Self::MaterialOverride => &Self::MaterialOverride,
            Self::Nodelink => &Self::Nodelink,
            Self::OriginalNodeName => &Self::OriginalNodeName,
            Self::OriginalZoneName => &Self::OriginalZoneName,
            Self::PartyGuid => &Self::PartyGuid,
            Self::PathfindSafeSpawn => &Self::PathfindSafeSpawn,
            Self::Pos => &Self::Pos,
            Self::Power => &Self::Power,
            Self::Priority => &Self::Priority,
            Self::QuestFlags => &Self::QuestFlags,
            Self::ReadableName => &Self::ReadableName,
            Self::RespawnDelay => &Self::RespawnDelay,
            Self::RespawnRegionName => &Self::RespawnRegionName,
            Self::RespawnRegionNameOverride => &Self::RespawnRegionNameOverride,
            Self::Rot => &Self::Rot,
            Self::SelfRadius => &Self::SelfRadius,
            Self::SpawnMethod => &Self::SpawnMethod,
            Self::SpawnPosition => &Self::SpawnPosition,
            Self::SpawnRotation => &Self::SpawnRotation,
            Self::Tags => &Self::Tags,
            Self::TeamId => &Self::TeamId,
            Self::Ue3ClassId => &Self::Ue3ClassId,
            Self::Ue3EdVisual => &Self::Ue3EdVisual,
            Self::VisibleOnQuestAvailable => &Self::VisibleOnQuestAvailable,
            Self::VisibleOnQuestComplete => &Self::VisibleOnQuestComplete,
            Self::VisibleOnQuestFinished => &Self::VisibleOnQuestFinished,
            Self::VisibleOnQuestInProgress => &Self::VisibleOnQuestInProgress,
            Self::WorldZoneObjectIndex => &Self::WorldZoneObjectIndex,
            Self::Zone => &Self::Zone,
            Self::ZoneGuid => &Self::ZoneGuid,
            Self::BitsMultiplier => &Self::BitsMultiplier,
            Self::Defb => &Self::Defb,
            Self::DropLevelVariance => &Self::DropLevelVariance,
            Self::EvadeRadius => &Self::EvadeRadius,
            Self::ExperienceMultiplier => &Self::ExperienceMultiplier,
            Self::FragmentsMultiplier => &Self::FragmentsMultiplier,
            Self::InstanceGroup => &Self::InstanceGroup,
            Self::InstanceGuid => &Self::InstanceGuid,
            Self::InteractRadius => &Self::InteractRadius,
            Self::IsUnAttackable => &Self::IsUnAttackable,
            Self::MoveDest => &Self::MoveDest,
            Self::MoveSpeed => &Self::MoveSpeed,
            Self::NickName => &Self::NickName,
            Self::NpcStateInfo => &Self::NpcStateInfo,
            Self::NpcType => &Self::NpcType,
            Self::Orientation => &Self::Orientation,
            Self::RunSpeed => &Self::RunSpeed,
            Self::ShuffleSpeed => &Self::ShuffleSpeed,
            Self::SomaMultiplier => &Self::SomaMultiplier,
            Self::SpawnLeashRadius => &Self::SpawnLeashRadius,
            Self::SpeakResponse => &Self::SpeakResponse,
            Self::WalkSpeed => &Self::WalkSpeed,
            Self::Abilities => &Self::Abilities,
            Self::ActivateCustomization => &Self::ActivateCustomization,
            Self::Aggression => &Self::Aggression,
            Self::AiState => &Self::AiState,
            Self::AiTemplate => &Self::AiTemplate,
            Self::Alive => &Self::Alive,
            Self::AliveTime => &Self::AliveTime,
            Self::AttackedBy => &Self::AttackedBy,
            Self::AttackerGroup => &Self::AttackerGroup,
            Self::AttributeEnergy => &Self::AttributeEnergy,
            Self::AttributeEnergyRegen => &Self::AttributeEnergyRegen,
            Self::AttributeHastePhys => &Self::AttributeHastePhys,
            Self::AttributeHasteSpell => &Self::AttributeHasteSpell,
            Self::AttributeHealthRegen => &Self::AttributeHealthRegen,
            Self::AttributeMovement => &Self::AttributeMovement,
            Self::AutoGeneratedLootTable => &Self::AutoGeneratedLootTable,
            Self::AvatarStatus => &Self::AvatarStatus,
            Self::BagVolume0 => &Self::BagVolume0,
            Self::BaseDodgeChance => &Self::BaseDodgeChance,
            Self::BaseEvadeChance => &Self::BaseEvadeChance,
            Self::BaseParryChance => &Self::BaseParryChance,
            Self::BehaviorConfig => &Self::BehaviorConfig,
            Self::BlockedAbilityEffectTypes => &Self::BlockedAbilityEffectTypes,
            Self::BonusDmg => &Self::BonusDmg,
            Self::BonusHp => &Self::BonusHp,
            Self::CanBeHitByAoEThroughObstacles => &Self::CanBeHitByAoEThroughObstacles,
            Self::CanBeLooted => &Self::CanBeLooted,
            Self::CanBeNotifiedThroughObstacles => &Self::CanBeNotifiedThroughObstacles,
            Self::CanRotateOnClient => &Self::CanRotateOnClient,
            Self::CapturedBy => &Self::CapturedBy,
            Self::CarryBack => &Self::CarryBack,
            Self::CarryFront => &Self::CarryFront,
            Self::Chest => &Self::Chest,
            Self::ClientLoadingPriority => &Self::ClientLoadingPriority,
            Self::CombatDefb => &Self::CombatDefb,
            Self::CombatNotifyRadius => &Self::CombatNotifyRadius,
            Self::CombatStatus => &Self::CombatStatus,
            Self::CombatStyle => &Self::CombatStyle,
            Self::ConfigCategories => &Self::ConfigCategories,
            Self::CurrentAiNotifyType => &Self::CurrentAiNotifyType,
            Self::CurrentEmotion => &Self::CurrentEmotion,
            Self::CurrentForm => &Self::CurrentForm,
            Self::CurrentSkin => &Self::CurrentSkin,
            Self::CustomizationGender => &Self::CustomizationGender,
            Self::CustomizationHeight => &Self::CustomizationHeight,
            Self::DeathDurationMyLand => &Self::DeathDurationMyLand,
            Self::DefaultIdle => &Self::DefaultIdle,
            Self::DefaultItems => &Self::DefaultItems,
            Self::DefaultItemsContentGuid => &Self::DefaultItemsContentGuid,
            Self::DieWithoutOwner => &Self::DieWithoutOwner,
            Self::DirectorTags => &Self::DirectorTags,
            Self::DivertHp => &Self::DivertHp,
            Self::DonatorName => &Self::DonatorName,
            Self::EffectImmunityMainGroups => &Self::EffectImmunityMainGroups,
            Self::EffectImmunitySubGroups => &Self::EffectImmunitySubGroups,
            Self::EnableCustomization => &Self::EnableCustomization,
            Self::EncounterFormation => &Self::EncounterFormation,
            Self::EncounterId => &Self::EncounterId,
            Self::EncounterRole => &Self::EncounterRole,
            Self::EnforceAliveTime => &Self::EnforceAliveTime,
            Self::EvadeRange => &Self::EvadeRange,
            Self::ExtraV3Data => &Self::ExtraV3Data,
            Self::FaceTargetWhenClose => &Self::FaceTargetWhenClose,
            Self::Faction => &Self::Faction,
            Self::FragmentsRequiredOverride => &Self::FragmentsRequiredOverride,
            Self::FragmentTypeOverride => &Self::FragmentTypeOverride,
            Self::GeneralDifficulty => &Self::GeneralDifficulty,
            Self::GroupDifficulty => &Self::GroupDifficulty,
            Self::GroupDifficultyNew => &Self::GroupDifficultyNew,
            Self::HasAttributes => &Self::HasAttributes,
            Self::Head => &Self::Head,
            Self::HpCur => &Self::HpCur,
            Self::HpMax => &Self::HpMax,
            Self::HpMin => &Self::HpMin,
            Self::HpMod => &Self::HpMod,
            Self::IgnoreTags => &Self::IgnoreTags,
            Self::InMiniGame => &Self::InMiniGame,
            Self::InSleepState => &Self::InSleepState,
            Self::Intelligence => &Self::Intelligence,
            Self::InteractRange => &Self::InteractRange,
            Self::InterestPos => &Self::InterestPos,
            Self::IsInCombat => &Self::IsInCombat,
            Self::IsInFormation => &Self::IsInFormation,
            Self::IsLooted => &Self::IsLooted,
            Self::IsOnGround => &Self::IsOnGround,
            Self::IsSellingCashItems => &Self::IsSellingCashItems,
            Self::IsShardObject => &Self::IsShardObject,
            Self::IsVisible => &Self::IsVisible,
            Self::LastAttackPosition => &Self::LastAttackPosition,
            Self::Lifetime => &Self::Lifetime,
            Self::LootAlways => &Self::LootAlways,
            Self::LootChances => &Self::LootChances,
            Self::LootExacts => &Self::LootExacts,
            Self::LootItems => &Self::LootItems,
            Self::LootPartition1 => &Self::LootPartition1,
            Self::LootPartition2 => &Self::LootPartition2,
            Self::LootPartition3 => &Self::LootPartition3,
            Self::LootPartition4 => &Self::LootPartition4,
            Self::LootPartition5 => &Self::LootPartition5,
            Self::LootPartition6 => &Self::LootPartition6,
            Self::LootTable => &Self::LootTable,
            Self::LuaAssignedString => &Self::LuaAssignedString,
            Self::LuaScriptCombat => &Self::LuaScriptCombat,
            Self::ModifyVisionRangeByLevel => &Self::ModifyVisionRangeByLevel,
            Self::Mover => &Self::Mover,
            Self::OffsetData => &Self::OffsetData,
            Self::PosDebug => &Self::PosDebug,
            Self::PostSpawnStateDuration => &Self::PostSpawnStateDuration,
            Self::Quest1 => &Self::Quest1,
            Self::Quest2 => &Self::Quest2,
            Self::QuestOwner => &Self::QuestOwner,
            Self::Quests => &Self::Quests,
            Self::RangedAttackStrategy => &Self::RangedAttackStrategy,
            Self::ReactionPlan => &Self::ReactionPlan,
            Self::RecipieDrop => &Self::RecipieDrop,
            Self::RelativePosToCarrier => &Self::RelativePosToCarrier,
            Self::SayData => &Self::SayData,
            Self::SayIndex => &Self::SayIndex,
            Self::ScriptClass => &Self::ScriptClass,
            Self::ScriptConfig => &Self::ScriptConfig,
            Self::SeekHelpBelowHp => &Self::SeekHelpBelowHp,
            Self::SeekHelpExecutionRadius => &Self::SeekHelpExecutionRadius,
            Self::SeekHelpFromNpcTypes => &Self::SeekHelpFromNpcTypes,
            Self::SeekHelpWithinRadius => &Self::SeekHelpWithinRadius,
            Self::SellCategories => &Self::SellCategories,
            Self::SellExacts => &Self::SellExacts,
            Self::SellItems => &Self::SellItems,
            Self::SellSkuItems => &Self::SellSkuItems,
            Self::Size => &Self::Size,
            Self::SoundTag => &Self::SoundTag,
            Self::SpawnerAvatarGuid => &Self::SpawnerAvatarGuid,
            Self::SpawnerAvatarId => &Self::SpawnerAvatarId,
            Self::SpawningOscillation => &Self::SpawningOscillation,
            Self::SpawningTime => &Self::SpawningTime,
            Self::SpawnLeashAnchor => &Self::SpawnLeashAnchor,
            Self::StatAnyDmgReduction => &Self::StatAnyDmgReduction,
            Self::StatAoEMaxSubTargets => &Self::StatAoEMaxSubTargets,
            Self::StatAoESubTargetsDamageMod => &Self::StatAoESubTargetsDamageMod,
            Self::StatArmorReduction => &Self::StatArmorReduction,
            Self::StatAttackPower => &Self::StatAttackPower,
            Self::StatBaseDps => &Self::StatBaseDps,
            Self::StatBendChance => &Self::StatBendChance,
            Self::StatBlockChance => &Self::StatBlockChance,
            Self::StatBlockedDamageMod => &Self::StatBlockedDamageMod,
            Self::StatCritChance => &Self::StatCritChance,
            Self::StatCriticalChanceReduction => &Self::StatCriticalChanceReduction,
            Self::StatCriticalDamageMod => &Self::StatCriticalDamageMod,
            Self::StatDegenerateLevel => &Self::StatDegenerateLevel,
            Self::State => &Self::State,
            Self::StatEnergyCurrent => &Self::StatEnergyCurrent,
            Self::StatEnergyCurrentH1 => &Self::StatEnergyCurrentH1,
            Self::StatEnergyCurrentH2 => &Self::StatEnergyCurrentH2,
            Self::StatEnergyCurrentH3 => &Self::StatEnergyCurrentH3,
            Self::StatEnergyCurrentS1 => &Self::StatEnergyCurrentS1,
            Self::StatEnergyCurrentS2 => &Self::StatEnergyCurrentS2,
            Self::StatEnergyCurrentS3 => &Self::StatEnergyCurrentS3,
            Self::StatEnergyMax => &Self::StatEnergyMax,
            Self::StatFinalDamageMod => &Self::StatFinalDamageMod,
            Self::StatFinalHealingMod => &Self::StatFinalHealingMod,
            Self::StatHasteClassSkills => &Self::StatHasteClassSkills,
            Self::StatHastePhysNormal => &Self::StatHastePhysNormal,
            Self::StatHealingReceivedMod => &Self::StatHealingReceivedMod,
            Self::StatHealth => &Self::StatHealth,
            Self::StatHeavyEnergyPerHit => &Self::StatHeavyEnergyPerHit,
            Self::StatHitChance => &Self::StatHitChance,
            Self::StatReflectChance => &Self::StatReflectChance,
            Self::StatSpecialEnergyPerHit => &Self::StatSpecialEnergyPerHit,
            Self::StatStamina => &Self::StatStamina,
            Self::StatStealthLevel => &Self::StatStealthLevel,
            Self::StatWeaponDps => &Self::StatWeaponDps,
            Self::Target => &Self::Target,
            Self::Teamwork => &Self::Teamwork,
            Self::TeleportPos => &Self::TeleportPos,
            Self::TrophyMax => &Self::TrophyMax,
            Self::UniversalAwarenessRange => &Self::UniversalAwarenessRange,
            Self::UseUnifiedVision => &Self::UseUnifiedVision,
            Self::VisibleItemInfo => &Self::VisibleItemInfo,
            Self::VisionAngle => &Self::VisionAngle,
            Self::VisionRange => &Self::VisionRange,
            Self::Weapon => &Self::Weapon,
            Self::WeaponDrawnByDefault => &Self::WeaponDrawnByDefault,
            Self::WillSearchForEnemy => &Self::WillSearchForEnemy,
        }
    }
}
impl AttributeInfo for NpcOtherland {
    fn class(&self) -> Class {
        <Self as Attribute>::class()
    }
    fn id(&self) -> u16 {
        match self {
            Self::Action0 => 1179u16,
            Self::Action0Duration => 1180u16,
            Self::Action0Option => 1154u16,
            Self::AlwaysVisibleToPlayers => 3493u16,
            Self::AutoReviveDelay => 10525u16,
            Self::AutoReviveTime => 10465u16,
            Self::AwareRange => 8244u16,
            Self::BeaconRadius => 10936u16,
            Self::CollisionExtent => 1181u16,
            Self::ContentClass => 1178u16,
            Self::CycleQuestBase => 11071u16,
            Self::DefaultWeapon => 7211u16,
            Self::DespawnDelay => 9635u16,
            Self::Dialogs => 8831u16,
            Self::DisplayName => 6597u16,
            Self::EnableInGame => 6823u16,
            Self::FreedomProperties => 11195u16,
            Self::Freq => 1193u16,
            Self::GenerateInterestList => 1182u16,
            Self::HiddenFromClients => 1183u16,
            Self::HiddenFromPlayers => 1144u16,
            Self::HideAfterInteraction => 9051u16,
            Self::Icon => 4351u16,
            Self::InstanceTags => 1155u16,
            Self::InstanceZoneKey => 5560u16,
            Self::InteractionDuration => 11141u16,
            Self::InteractionRadius => 7472u16,
            Self::InteractionResetTimer => 9053u16,
            Self::IsNonSpawnedAvatar => 1077u16,
            Self::IsSelfRevivable => 7156u16,
            Self::LastInteractionTime => 9052u16,
            Self::LuaScript => 7779u16,
            Self::Lvl => 6180u16,
            Self::MaterialOverride => 4730u16,
            Self::Nodelink => 1149u16,
            Self::OriginalNodeName => 1079u16,
            Self::OriginalZoneName => 1080u16,
            Self::PartyGuid => 1184u16,
            Self::PathfindSafeSpawn => 1136u16,
            Self::Pos => 1185u16,
            Self::Power => 1192u16,
            Self::Priority => 1186u16,
            Self::QuestFlags => 9933u16,
            Self::ReadableName => 3677u16,
            Self::RespawnDelay => 1076u16,
            Self::RespawnRegionName => 10783u16,
            Self::RespawnRegionNameOverride => 10842u16,
            Self::Rot => 1165u16,
            Self::SelfRadius => 1187u16,
            Self::SpawnMethod => 6098u16,
            Self::SpawnPosition => 7834u16,
            Self::SpawnRotation => 8187u16,
            Self::Tags => 1188u16,
            Self::TeamId => 1189u16,
            Self::Ue3ClassId => 1168u16,
            Self::Ue3EdVisual => 9809u16,
            Self::VisibleOnQuestAvailable => 8590u16,
            Self::VisibleOnQuestComplete => 8587u16,
            Self::VisibleOnQuestFinished => 8588u16,
            Self::VisibleOnQuestInProgress => 8589u16,
            Self::WorldZoneObjectIndex => 1078u16,
            Self::Zone => 1191u16,
            Self::ZoneGuid => 1102u16,
            Self::BitsMultiplier => 11302u16,
            Self::Defb => 1161u16,
            Self::DropLevelVariance => 9712u16,
            Self::EvadeRadius => 6877u16,
            Self::ExperienceMultiplier => 11304u16,
            Self::FragmentsMultiplier => 11301u16,
            Self::InstanceGroup => 8042u16,
            Self::InstanceGuid => 1171u16,
            Self::InteractRadius => 4180u16,
            Self::IsUnAttackable => 4934u16,
            Self::MoveDest => 1172u16,
            Self::MoveSpeed => 1173u16,
            Self::NickName => 1174u16,
            Self::NpcStateInfo => 7923u16,
            Self::NpcType => 1175u16,
            Self::Orientation => 1176u16,
            Self::RunSpeed => 1153u16,
            Self::ShuffleSpeed => 1145u16,
            Self::SomaMultiplier => 11303u16,
            Self::SpawnLeashRadius => 5302u16,
            Self::SpeakResponse => 1177u16,
            Self::WalkSpeed => 1146u16,
            Self::Abilities => 8913u16,
            Self::ActivateCustomization => 8059u16,
            Self::Aggression => 5421u16,
            Self::AiState => 10173u16,
            Self::AiTemplate => 8818u16,
            Self::Alive => 1150u16,
            Self::AliveTime => 1132u16,
            Self::AttackedBy => 1159u16,
            Self::AttackerGroup => 4195u16,
            Self::AttributeEnergy => 6296u16,
            Self::AttributeEnergyRegen => 6295u16,
            Self::AttributeHastePhys => 6284u16,
            Self::AttributeHasteSpell => 6283u16,
            Self::AttributeHealthRegen => 6297u16,
            Self::AttributeMovement => 5411u16,
            Self::AutoGeneratedLootTable => 9362u16,
            Self::AvatarStatus => 1158u16,
            Self::BagVolume0 => 1131u16,
            Self::BaseDodgeChance => 6884u16,
            Self::BaseEvadeChance => 6888u16,
            Self::BaseParryChance => 6889u16,
            Self::BehaviorConfig => 1135u16,
            Self::BlockedAbilityEffectTypes => 1101u16,
            Self::BonusDmg => 11568u16,
            Self::BonusHp => 11567u16,
            Self::CanBeHitByAoEThroughObstacles => 10378u16,
            Self::CanBeLooted => 5856u16,
            Self::CanBeNotifiedThroughObstacles => 10374u16,
            Self::CanRotateOnClient => 10167u16,
            Self::CapturedBy => 4834u16,
            Self::CarryBack => 1130u16,
            Self::CarryFront => 1129u16,
            Self::Chest => 1128u16,
            Self::ClientLoadingPriority => 11288u16,
            Self::CombatDefb => 9919u16,
            Self::CombatNotifyRadius => 9211u16,
            Self::CombatStatus => 1160u16,
            Self::CombatStyle => 1095u16,
            Self::ConfigCategories => 12296u16,
            Self::CurrentAiNotifyType => 4305u16,
            Self::CurrentEmotion => 1110u16,
            Self::CurrentForm => 1151u16,
            Self::CurrentSkin => 1152u16,
            Self::CustomizationGender => 7756u16,
            Self::CustomizationHeight => 7755u16,
            Self::DeathDurationMyLand => 6543u16,
            Self::DefaultIdle => 1117u16,
            Self::DefaultItems => 8102u16,
            Self::DefaultItemsContentGuid => 8051u16,
            Self::DieWithoutOwner => 10924u16,
            Self::DirectorTags => 8065u16,
            Self::DivertHp => 5493u16,
            Self::DonatorName => 10913u16,
            Self::EffectImmunityMainGroups => 11088u16,
            Self::EffectImmunitySubGroups => 11087u16,
            Self::EnableCustomization => 8055u16,
            Self::EncounterFormation => 4838u16,
            Self::EncounterId => 4816u16,
            Self::EncounterRole => 4827u16,
            Self::EnforceAliveTime => 10920u16,
            Self::EvadeRange => 1113u16,
            Self::ExtraV3Data => 1121u16,
            Self::FaceTargetWhenClose => 10163u16,
            Self::Faction => 9205u16,
            Self::FragmentsRequiredOverride => 5999u16,
            Self::FragmentTypeOverride => 6000u16,
            Self::GeneralDifficulty => 9505u16,
            Self::GroupDifficulty => 9497u16,
            Self::GroupDifficultyNew => 11569u16,
            Self::HasAttributes => 6298u16,
            Self::Head => 1127u16,
            Self::HpCur => 1164u16,
            Self::HpMax => 1147u16,
            Self::HpMin => 1112u16,
            Self::HpMod => 12142u16,
            Self::IgnoreTags => 4211u16,
            Self::InMiniGame => 4199u16,
            Self::InSleepState => 6092u16,
            Self::Intelligence => 5420u16,
            Self::InteractRange => 1115u16,
            Self::InterestPos => 1157u16,
            Self::IsInCombat => 1086u16,
            Self::IsInFormation => 5944u16,
            Self::IsLooted => 4655u16,
            Self::IsOnGround => 8811u16,
            Self::IsSellingCashItems => 11221u16,
            Self::IsShardObject => 5917u16,
            Self::IsVisible => 8791u16,
            Self::LastAttackPosition => 1109u16,
            Self::Lifetime => 1140u16,
            Self::LootAlways => 1107u16,
            Self::LootChances => 1104u16,
            Self::LootExacts => 1106u16,
            Self::LootItems => 1105u16,
            Self::LootPartition1 => 4301u16,
            Self::LootPartition2 => 4311u16,
            Self::LootPartition3 => 4397u16,
            Self::LootPartition4 => 4396u16,
            Self::LootPartition5 => 4395u16,
            Self::LootPartition6 => 4394u16,
            Self::LootTable => 1108u16,
            Self::LuaAssignedString => 11020u16,
            Self::LuaScriptCombat => 9861u16,
            Self::ModifyVisionRangeByLevel => 11294u16,
            Self::Mover => 3199u16,
            Self::OffsetData => 1096u16,
            Self::PosDebug => 5504u16,
            Self::PostSpawnStateDuration => 10115u16,
            Self::Quest1 => 1123u16,
            Self::Quest2 => 1120u16,
            Self::QuestOwner => 1111u16,
            Self::Quests => 1097u16,
            Self::RangedAttackStrategy => 11337u16,
            Self::ReactionPlan => 1124u16,
            Self::RecipieDrop => 11783u16,
            Self::RelativePosToCarrier => 3198u16,
            Self::SayData => 1133u16,
            Self::SayIndex => 1134u16,
            Self::ScriptClass => 4820u16,
            Self::ScriptConfig => 5828u16,
            Self::SeekHelpBelowHp => 6769u16,
            Self::SeekHelpExecutionRadius => 8806u16,
            Self::SeekHelpFromNpcTypes => 6797u16,
            Self::SeekHelpWithinRadius => 6768u16,
            Self::SellCategories => 11341u16,
            Self::SellExacts => 1125u16,
            Self::SellItems => 1126u16,
            Self::SellSkuItems => 10178u16,
            Self::Size => 1100u16,
            Self::SoundTag => 4913u16,
            Self::SpawnerAvatarGuid => 5921u16,
            Self::SpawnerAvatarId => 1139u16,
            Self::SpawningOscillation => 1137u16,
            Self::SpawningTime => 1138u16,
            Self::SpawnLeashAnchor => 6024u16,
            Self::StatAnyDmgReduction => 10063u16,
            Self::StatAoEMaxSubTargets => 10026u16,
            Self::StatAoESubTargetsDamageMod => 10025u16,
            Self::StatArmorReduction => 9590u16,
            Self::StatAttackPower => 9565u16,
            Self::StatBaseDps => 9514u16,
            Self::StatBendChance => 9510u16,
            Self::StatBlockChance => 6898u16,
            Self::StatBlockedDamageMod => 9594u16,
            Self::StatCritChance => 9569u16,
            Self::StatCriticalChanceReduction => 9573u16,
            Self::StatCriticalDamageMod => 9595u16,
            Self::StatDegenerateLevel => 10043u16,
            Self::State => 9865u16,
            Self::StatEnergyCurrent => 9576u16,
            Self::StatEnergyCurrentH1 => 6778u16,
            Self::StatEnergyCurrentH2 => 11022u16,
            Self::StatEnergyCurrentH3 => 11240u16,
            Self::StatEnergyCurrentS1 => 6777u16,
            Self::StatEnergyCurrentS2 => 11023u16,
            Self::StatEnergyCurrentS3 => 11239u16,
            Self::StatEnergyMax => 9575u16,
            Self::StatFinalDamageMod => 11211u16,
            Self::StatFinalHealingMod => 11212u16,
            Self::StatHasteClassSkills => 11246u16,
            Self::StatHastePhysNormal => 9574u16,
            Self::StatHealingReceivedMod => 11391u16,
            Self::StatHealth => 9533u16,
            Self::StatHeavyEnergyPerHit => 7043u16,
            Self::StatHitChance => 9512u16,
            Self::StatReflectChance => 9509u16,
            Self::StatSpecialEnergyPerHit => 7042u16,
            Self::StatStamina => 9605u16,
            Self::StatStealthLevel => 7132u16,
            Self::StatWeaponDps => 9513u16,
            Self::Target => 1167u16,
            Self::Teamwork => 5419u16,
            Self::TeleportPos => 1103u16,
            Self::TrophyMax => 3135u16,
            Self::UniversalAwarenessRange => 6792u16,
            Self::UseUnifiedVision => 11293u16,
            Self::VisibleItemInfo => 1075u16,
            Self::VisionAngle => 6788u16,
            Self::VisionRange => 1114u16,
            Self::Weapon => 1169u16,
            Self::WeaponDrawnByDefault => 9346u16,
            Self::WillSearchForEnemy => 9923u16,
        }
    }
    fn name(&self) -> &'static str {
        match self {
            Self::Action0 => "action0",
            Self::Action0Duration => "action0Duration",
            Self::Action0Option => "action0Option",
            Self::AlwaysVisibleToPlayers => "alwaysVisibleToPlayers",
            Self::AutoReviveDelay => "autoReviveDelay",
            Self::AutoReviveTime => "autoReviveTime",
            Self::AwareRange => "AwareRange",
            Self::BeaconRadius => "BeaconRadius",
            Self::CollisionExtent => "collisionExtent",
            Self::ContentClass => "ContentClass",
            Self::CycleQuestBase => "CycleQuestBase",
            Self::DefaultWeapon => "defaultWeapon",
            Self::DespawnDelay => "despawnDelay",
            Self::Dialogs => "Dialogs",
            Self::DisplayName => "DisplayName",
            Self::EnableInGame => "EnableInGame",
            Self::FreedomProperties => "FreedomProperties",
            Self::Freq => "Freq",
            Self::GenerateInterestList => "generateInterestList",
            Self::HiddenFromClients => "hiddenFromClients",
            Self::HiddenFromPlayers => "hiddenFromPlayers",
            Self::HideAfterInteraction => "HideAfterInteraction",
            Self::Icon => "Icon",
            Self::InstanceTags => "instanceTags",
            Self::InstanceZoneKey => "instanceZoneKey",
            Self::InteractionDuration => "InteractionDuration",
            Self::InteractionRadius => "InteractionRadius",
            Self::InteractionResetTimer => "InteractionResetTimer",
            Self::IsNonSpawnedAvatar => "isNonSpawnedAvatar",
            Self::IsSelfRevivable => "isSelfRevivable",
            Self::LastInteractionTime => "LastInteractionTime",
            Self::LuaScript => "LuaScript",
            Self::Lvl => "lvl",
            Self::MaterialOverride => "MaterialOverride",
            Self::Nodelink => "nodelink",
            Self::OriginalNodeName => "originalNodeName",
            Self::OriginalZoneName => "originalZoneName",
            Self::PartyGuid => "partyGUID",
            Self::PathfindSafeSpawn => "pathfindSafeSpawn",
            Self::Pos => "pos",
            Self::Power => "Power",
            Self::Priority => "priority",
            Self::QuestFlags => "QuestFlags",
            Self::ReadableName => "ReadableName",
            Self::RespawnDelay => "respawnDelay",
            Self::RespawnRegionName => "RespawnRegionName",
            Self::RespawnRegionNameOverride => "RespawnRegionNameOverride",
            Self::Rot => "rot",
            Self::SelfRadius => "selfRadius",
            Self::SpawnMethod => "spawnMethod",
            Self::SpawnPosition => "spawnPosition",
            Self::SpawnRotation => "spawnRotation",
            Self::Tags => "tags",
            Self::TeamId => "teamID",
            Self::Ue3ClassId => "UE3ClassID",
            Self::Ue3EdVisual => "UE3EdVisual",
            Self::VisibleOnQuestAvailable => "VisibleOnQuestAvailable",
            Self::VisibleOnQuestComplete => "VisibleOnQuestComplete",
            Self::VisibleOnQuestFinished => "VisibleOnQuestFinished",
            Self::VisibleOnQuestInProgress => "VisibleOnQuestInProgress",
            Self::WorldZoneObjectIndex => "WorldZoneObjectIndex",
            Self::Zone => "zone",
            Self::ZoneGuid => "ZoneGuid",
            Self::BitsMultiplier => "BitsMultiplier",
            Self::Defb => "defb",
            Self::DropLevelVariance => "dropLevelVariance",
            Self::EvadeRadius => "evadeRadius",
            Self::ExperienceMultiplier => "ExperienceMultiplier",
            Self::FragmentsMultiplier => "FragmentsMultiplier",
            Self::InstanceGroup => "instanceGroup",
            Self::InstanceGuid => "instanceGUID",
            Self::InteractRadius => "interactRadius",
            Self::IsUnAttackable => "isUnAttackable",
            Self::MoveDest => "moveDest",
            Self::MoveSpeed => "moveSpeed",
            Self::NickName => "nickName",
            Self::NpcStateInfo => "npcStateInfo",
            Self::NpcType => "npcType",
            Self::Orientation => "orientation",
            Self::RunSpeed => "runSpeed",
            Self::ShuffleSpeed => "shuffleSpeed",
            Self::SomaMultiplier => "SOMAMultiplier",
            Self::SpawnLeashRadius => "spawnLeashRadius",
            Self::SpeakResponse => "speakResponse",
            Self::WalkSpeed => "walkSpeed",
            Self::Abilities => "abilities",
            Self::ActivateCustomization => "activateCustomization",
            Self::Aggression => "Aggression",
            Self::AiState => "aiState",
            Self::AiTemplate => "AITemplate",
            Self::Alive => "alive",
            Self::AliveTime => "aliveTime",
            Self::AttackedBy => "attackedBy",
            Self::AttackerGroup => "attackerGroup",
            Self::AttributeEnergy => "attributeEnergy",
            Self::AttributeEnergyRegen => "attributeEnergyRegen",
            Self::AttributeHastePhys => "attributeHastePhys",
            Self::AttributeHasteSpell => "attributeHasteSpell",
            Self::AttributeHealthRegen => "attributeHealthRegen",
            Self::AttributeMovement => "attributeMovement",
            Self::AutoGeneratedLootTable => "autoGeneratedLootTable",
            Self::AvatarStatus => "avatarStatus",
            Self::BagVolume0 => "bagVolume0",
            Self::BaseDodgeChance => "baseDodgeChance",
            Self::BaseEvadeChance => "baseEvadeChance",
            Self::BaseParryChance => "baseParryChance",
            Self::BehaviorConfig => "behaviorConfig",
            Self::BlockedAbilityEffectTypes => "blockedAbilityEffectTypes",
            Self::BonusDmg => "BonusDmg",
            Self::BonusHp => "BonusHP",
            Self::CanBeHitByAoEThroughObstacles => "canBeHitByAoEThroughObstacles",
            Self::CanBeLooted => "canBeLooted",
            Self::CanBeNotifiedThroughObstacles => "canBeNotifiedThroughObstacles",
            Self::CanRotateOnClient => "canRotateOnClient",
            Self::CapturedBy => "capturedBy",
            Self::CarryBack => "carryBack",
            Self::CarryFront => "carryFront",
            Self::Chest => "chest",
            Self::ClientLoadingPriority => "clientLoadingPriority",
            Self::CombatDefb => "combatDefb",
            Self::CombatNotifyRadius => "combatNotifyRadius",
            Self::CombatStatus => "combatStatus",
            Self::CombatStyle => "combatStyle",
            Self::ConfigCategories => "ConfigCategories",
            Self::CurrentAiNotifyType => "currentAINotifyType",
            Self::CurrentEmotion => "currentEmotion",
            Self::CurrentForm => "currentForm",
            Self::CurrentSkin => "currentSkin",
            Self::CustomizationGender => "customizationGender",
            Self::CustomizationHeight => "customizationHeight",
            Self::DeathDurationMyLand => "deathDurationMyLand",
            Self::DefaultIdle => "defaultIdle",
            Self::DefaultItems => "defaultItems",
            Self::DefaultItemsContentGuid => "defaultItemsContentGuid",
            Self::DieWithoutOwner => "dieWithoutOwner",
            Self::DirectorTags => "directorTags",
            Self::DivertHp => "DivertHp",
            Self::DonatorName => "donatorName",
            Self::EffectImmunityMainGroups => "EffectImmunityMainGroups",
            Self::EffectImmunitySubGroups => "EffectImmunitySubGroups",
            Self::EnableCustomization => "enableCustomization",
            Self::EncounterFormation => "encounterFormation",
            Self::EncounterId => "encounterID",
            Self::EncounterRole => "encounterRole",
            Self::EnforceAliveTime => "enforceAliveTime",
            Self::EvadeRange => "evadeRange",
            Self::ExtraV3Data => "extraV3Data",
            Self::FaceTargetWhenClose => "faceTargetWhenClose",
            Self::Faction => "Faction",
            Self::FragmentsRequiredOverride => "fragmentsRequiredOverride",
            Self::FragmentTypeOverride => "fragmentTypeOverride",
            Self::GeneralDifficulty => "generalDifficulty",
            Self::GroupDifficulty => "groupDifficulty",
            Self::GroupDifficultyNew => "groupDifficultyNew",
            Self::HasAttributes => "hasAttributes",
            Self::Head => "head",
            Self::HpCur => "hpCur",
            Self::HpMax => "hpMax",
            Self::HpMin => "hpMin",
            Self::HpMod => "HpMod",
            Self::IgnoreTags => "IgnoreTags",
            Self::InMiniGame => "inMiniGame",
            Self::InSleepState => "inSleepState",
            Self::Intelligence => "Intelligence",
            Self::InteractRange => "interactRange",
            Self::InterestPos => "interestPos",
            Self::IsInCombat => "isInCombat",
            Self::IsInFormation => "isInFormation",
            Self::IsLooted => "isLooted",
            Self::IsOnGround => "isOnGround",
            Self::IsSellingCashItems => "isSellingCashItems",
            Self::IsShardObject => "isShardObject",
            Self::IsVisible => "isVisible",
            Self::LastAttackPosition => "lastAttackPosition",
            Self::Lifetime => "lifetime",
            Self::LootAlways => "lootAlways",
            Self::LootChances => "lootChances",
            Self::LootExacts => "lootExacts",
            Self::LootItems => "lootItems",
            Self::LootPartition1 => "LootPartition1",
            Self::LootPartition2 => "LootPartition2",
            Self::LootPartition3 => "LootPartition3",
            Self::LootPartition4 => "LootPartition4",
            Self::LootPartition5 => "LootPartition5",
            Self::LootPartition6 => "LootPartition6",
            Self::LootTable => "lootTable",
            Self::LuaAssignedString => "LuaAssignedString",
            Self::LuaScriptCombat => "LuaScriptCombat",
            Self::ModifyVisionRangeByLevel => "modifyVisionRangeByLevel",
            Self::Mover => "mover",
            Self::OffsetData => "offsetData",
            Self::PosDebug => "posDebug",
            Self::PostSpawnStateDuration => "postSpawnStateDuration",
            Self::Quest1 => "quest1",
            Self::Quest2 => "quest2",
            Self::QuestOwner => "questOwner",
            Self::Quests => "quests",
            Self::RangedAttackStrategy => "RangedAttackStrategy",
            Self::ReactionPlan => "reactionPlan",
            Self::RecipieDrop => "RecipieDrop",
            Self::RelativePosToCarrier => "relativePosToCarrier",
            Self::SayData => "sayData",
            Self::SayIndex => "sayIndex",
            Self::ScriptClass => "scriptClass",
            Self::ScriptConfig => "scriptConfig",
            Self::SeekHelpBelowHp => "SeekHelpBelowHP",
            Self::SeekHelpExecutionRadius => "SeekHelpExecutionRadius",
            Self::SeekHelpFromNpcTypes => "SeekHelpFromNPCTypes",
            Self::SeekHelpWithinRadius => "SeekHelpWithinRadius",
            Self::SellCategories => "sellCategories",
            Self::SellExacts => "sellExacts",
            Self::SellItems => "sellItems",
            Self::SellSkuItems => "sellSKUItems",
            Self::Size => "Size",
            Self::SoundTag => "soundTag",
            Self::SpawnerAvatarGuid => "spawnerAvatarGuid",
            Self::SpawnerAvatarId => "spawnerAvatarID",
            Self::SpawningOscillation => "spawningOscillation",
            Self::SpawningTime => "spawningTime",
            Self::SpawnLeashAnchor => "spawnLeashAnchor",
            Self::StatAnyDmgReduction => "statAnyDmgReduction",
            Self::StatAoEMaxSubTargets => "statAoE_MaxSubTargets",
            Self::StatAoESubTargetsDamageMod => "statAoE_SubTargetsDamageMod",
            Self::StatArmorReduction => "statArmorReduction",
            Self::StatAttackPower => "statAttackPower",
            Self::StatBaseDps => "statBaseDPS",
            Self::StatBendChance => "statBendChance",
            Self::StatBlockChance => "statBlockChance",
            Self::StatBlockedDamageMod => "statBlockedDamageMod",
            Self::StatCritChance => "statCritChance",
            Self::StatCriticalChanceReduction => "statCriticalChanceReduction",
            Self::StatCriticalDamageMod => "statCriticalDamageMod",
            Self::StatDegenerateLevel => "statDegenerate_Level",
            Self::State => "State",
            Self::StatEnergyCurrent => "statEnergyCurrent",
            Self::StatEnergyCurrentH1 => "statEnergyCurrentH1",
            Self::StatEnergyCurrentH2 => "statEnergyCurrentH2",
            Self::StatEnergyCurrentH3 => "statEnergyCurrentH3",
            Self::StatEnergyCurrentS1 => "statEnergyCurrentS1",
            Self::StatEnergyCurrentS2 => "statEnergyCurrentS2",
            Self::StatEnergyCurrentS3 => "statEnergyCurrentS3",
            Self::StatEnergyMax => "statEnergyMax",
            Self::StatFinalDamageMod => "statFinalDamageMod",
            Self::StatFinalHealingMod => "statFinalHealingMod",
            Self::StatHasteClassSkills => "statHasteClassSkills",
            Self::StatHastePhysNormal => "statHastePhysNormal",
            Self::StatHealingReceivedMod => "statHealingReceivedMod",
            Self::StatHealth => "statHealth",
            Self::StatHeavyEnergyPerHit => "statHeavyEnergyPerHit",
            Self::StatHitChance => "statHitChance",
            Self::StatReflectChance => "statReflectChance",
            Self::StatSpecialEnergyPerHit => "statSpecialEnergyPerHit",
            Self::StatStamina => "statStamina",
            Self::StatStealthLevel => "statStealth_Level",
            Self::StatWeaponDps => "statWeaponDPS",
            Self::Target => "target",
            Self::Teamwork => "Teamwork",
            Self::TeleportPos => "teleportPos",
            Self::TrophyMax => "trophyMax",
            Self::UniversalAwarenessRange => "universalAwarenessRange",
            Self::UseUnifiedVision => "useUnifiedVision",
            Self::VisibleItemInfo => "visibleItemInfo",
            Self::VisionAngle => "visionAngle",
            Self::VisionRange => "visionRange",
            Self::Weapon => "weapon",
            Self::WeaponDrawnByDefault => "weaponDrawnByDefault",
            Self::WillSearchForEnemy => "willSearchForEnemy",
        }
    }
    fn datatype(&self) -> ParamType {
        match self {
            Self::Icon => ParamType::String,
            Self::Ue3ClassId => ParamType::String,
            Self::InteractRadius => ParamType::Float,
            Self::Abilities => ParamType::ContentRefList,
            Self::ActivateCustomization => ParamType::Bool,
            Self::Aggression => ParamType::Int,
            Self::AiState => ParamType::Int,
            Self::AiTemplate => ParamType::ContentRef,
            Self::Alive => ParamType::Bool,
            Self::AliveTime => ParamType::Float,
            Self::AttackedBy => ParamType::AvatarId,
            Self::AttackerGroup => ParamType::Guid,
            Self::AttributeEnergy => ParamType::Float,
            Self::AttributeEnergyRegen => ParamType::Float,
            Self::AttributeHastePhys => ParamType::Float,
            Self::AttributeHasteSpell => ParamType::Float,
            Self::AttributeHealthRegen => ParamType::Float,
            Self::AttributeMovement => ParamType::Float,
            Self::AutoGeneratedLootTable => ParamType::JsonValue,
            Self::AvatarStatus => ParamType::String,
            Self::BagVolume0 => ParamType::Int,
            Self::BaseDodgeChance => ParamType::Float,
            Self::BaseEvadeChance => ParamType::Float,
            Self::BaseParryChance => ParamType::Float,
            Self::BehaviorConfig => ParamType::JsonValue,
            Self::BlockedAbilityEffectTypes => ParamType::Int,
            Self::BonusDmg => ParamType::Float,
            Self::BonusHp => ParamType::Float,
            Self::CanBeHitByAoEThroughObstacles => ParamType::Bool,
            Self::CanBeLooted => ParamType::Bool,
            Self::CanBeNotifiedThroughObstacles => ParamType::Bool,
            Self::CanRotateOnClient => ParamType::Bool,
            Self::CapturedBy => ParamType::AvatarId,
            Self::CarryBack => ParamType::GuidPair,
            Self::CarryFront => ParamType::GuidPair,
            Self::Chest => ParamType::GuidPair,
            Self::ClientLoadingPriority => ParamType::Int,
            Self::CombatDefb => ParamType::String,
            Self::CombatNotifyRadius => ParamType::Float,
            Self::CombatStatus => ParamType::String,
            Self::CombatStyle => ParamType::Int,
            Self::ConfigCategories => ParamType::JsonValue,
            Self::CurrentAiNotifyType => ParamType::Int,
            Self::CurrentEmotion => ParamType::Int,
            Self::CurrentForm => ParamType::String,
            Self::CurrentSkin => ParamType::String,
            Self::CustomizationGender => ParamType::Float,
            Self::CustomizationHeight => ParamType::Float,
            Self::DeathDurationMyLand => ParamType::Float,
            Self::DefaultIdle => ParamType::String,
            Self::DefaultItems => ParamType::ContentRefList,
            Self::DefaultItemsContentGuid => ParamType::VectorInt,
            Self::DieWithoutOwner => ParamType::Bool,
            Self::DirectorTags => ParamType::String,
            Self::DivertHp => ParamType::Guid,
            Self::DonatorName => ParamType::String,
            Self::EffectImmunityMainGroups => ParamType::VectorInt,
            Self::EffectImmunitySubGroups => ParamType::VectorInt,
            Self::EnableCustomization => ParamType::Bool,
            Self::EncounterFormation => ParamType::String,
            Self::EncounterId => ParamType::String,
            Self::EncounterRole => ParamType::String,
            Self::EnforceAliveTime => ParamType::Bool,
            Self::EvadeRange => ParamType::Float,
            Self::ExtraV3Data => ParamType::Vector3,
            Self::FaceTargetWhenClose => ParamType::Bool,
            Self::Faction => ParamType::ContentRefList,
            Self::FragmentsRequiredOverride => ParamType::Int,
            Self::FragmentTypeOverride => ParamType::ContentRef,
            Self::GeneralDifficulty => ParamType::Int,
            Self::GroupDifficulty => ParamType::Int,
            Self::GroupDifficultyNew => ParamType::Int,
            Self::HasAttributes => ParamType::Bool,
            Self::Head => ParamType::GuidPair,
            Self::HpCur => ParamType::Int,
            Self::HpMax => ParamType::Int,
            Self::HpMin => ParamType::Int,
            Self::HpMod => ParamType::Float,
            Self::IgnoreTags => ParamType::String,
            Self::InMiniGame => ParamType::Bool,
            Self::InSleepState => ParamType::Bool,
            Self::Intelligence => ParamType::Int,
            Self::InteractRange => ParamType::Float,
            Self::InterestPos => ParamType::Vector3,
            Self::IsInCombat => ParamType::Bool,
            Self::IsInFormation => ParamType::Bool,
            Self::IsLooted => ParamType::Bool,
            Self::IsOnGround => ParamType::Bool,
            Self::IsSellingCashItems => ParamType::Bool,
            Self::IsShardObject => ParamType::Bool,
            Self::IsVisible => ParamType::Bool,
            Self::LastAttackPosition => ParamType::Vector3,
            Self::Lifetime => ParamType::Float,
            Self::LootAlways => ParamType::ContentRefList,
            Self::LootChances => ParamType::String,
            Self::LootExacts => ParamType::ContentRefList,
            Self::LootItems => ParamType::ClassRefPowerRangeList,
            Self::LootPartition1 => ParamType::JsonValue,
            Self::LootPartition2 => ParamType::JsonValue,
            Self::LootPartition3 => ParamType::JsonValue,
            Self::LootPartition4 => ParamType::JsonValue,
            Self::LootPartition5 => ParamType::JsonValue,
            Self::LootPartition6 => ParamType::JsonValue,
            Self::LootTable => ParamType::JsonValue,
            Self::LuaAssignedString => ParamType::String,
            Self::LuaScriptCombat => ParamType::String,
            Self::ModifyVisionRangeByLevel => ParamType::Bool,
            Self::Mover => ParamType::AvatarId,
            Self::OffsetData => ParamType::Vector3,
            Self::PosDebug => ParamType::Vector3,
            Self::PostSpawnStateDuration => ParamType::Float,
            Self::Quest1 => ParamType::ContentRef,
            Self::Quest2 => ParamType::ContentRef,
            Self::QuestOwner => ParamType::AvatarId,
            Self::Quests => ParamType::Int,
            Self::RangedAttackStrategy => ParamType::Int,
            Self::ReactionPlan => ParamType::String,
            Self::RecipieDrop => ParamType::ContentRefList,
            Self::RelativePosToCarrier => ParamType::Vector3,
            Self::SayData => ParamType::JsonValue,
            Self::SayIndex => ParamType::Int,
            Self::ScriptClass => ParamType::String,
            Self::ScriptConfig => ParamType::JsonValue,
            Self::SeekHelpBelowHp => ParamType::Float,
            Self::SeekHelpExecutionRadius => ParamType::Float,
            Self::SeekHelpFromNpcTypes => ParamType::ContentRefList,
            Self::SeekHelpWithinRadius => ParamType::Float,
            Self::SellCategories => ParamType::JsonValue,
            Self::SellExacts => ParamType::ContentRefList,
            Self::SellItems => ParamType::ClassRefPowerRangeList,
            Self::SellSkuItems => ParamType::String,
            Self::Size => ParamType::Float,
            Self::SoundTag => ParamType::StringFloatPair,
            Self::SpawnerAvatarGuid => ParamType::Guid,
            Self::SpawnerAvatarId => ParamType::AvatarId,
            Self::SpawningOscillation => ParamType::Float,
            Self::SpawningTime => ParamType::Float,
            Self::SpawnLeashAnchor => ParamType::Vector3,
            Self::StatAnyDmgReduction => ParamType::Float,
            Self::StatAoEMaxSubTargets => ParamType::Float,
            Self::StatAoESubTargetsDamageMod => ParamType::Float,
            Self::StatArmorReduction => ParamType::Float,
            Self::StatAttackPower => ParamType::Float,
            Self::StatBaseDps => ParamType::Float,
            Self::StatBendChance => ParamType::Float,
            Self::StatBlockChance => ParamType::Float,
            Self::StatBlockedDamageMod => ParamType::Float,
            Self::StatCritChance => ParamType::Float,
            Self::StatCriticalChanceReduction => ParamType::Float,
            Self::StatCriticalDamageMod => ParamType::Float,
            Self::StatDegenerateLevel => ParamType::Float,
            Self::State => ParamType::Int,
            Self::StatEnergyCurrent => ParamType::Float,
            Self::StatEnergyCurrentH1 => ParamType::Float,
            Self::StatEnergyCurrentH2 => ParamType::Float,
            Self::StatEnergyCurrentH3 => ParamType::Float,
            Self::StatEnergyCurrentS1 => ParamType::Float,
            Self::StatEnergyCurrentS2 => ParamType::Float,
            Self::StatEnergyCurrentS3 => ParamType::Float,
            Self::StatEnergyMax => ParamType::Float,
            Self::StatFinalDamageMod => ParamType::Float,
            Self::StatFinalHealingMod => ParamType::Float,
            Self::StatHasteClassSkills => ParamType::Float,
            Self::StatHastePhysNormal => ParamType::Float,
            Self::StatHealingReceivedMod => ParamType::Float,
            Self::StatHealth => ParamType::Float,
            Self::StatHeavyEnergyPerHit => ParamType::Float,
            Self::StatHitChance => ParamType::Float,
            Self::StatReflectChance => ParamType::Float,
            Self::StatSpecialEnergyPerHit => ParamType::Float,
            Self::StatStamina => ParamType::Float,
            Self::StatStealthLevel => ParamType::Float,
            Self::StatWeaponDps => ParamType::Float,
            Self::Target => ParamType::AvatarId,
            Self::Teamwork => ParamType::Int,
            Self::TeleportPos => ParamType::Vector3,
            Self::TrophyMax => ParamType::Int,
            Self::UniversalAwarenessRange => ParamType::Float,
            Self::UseUnifiedVision => ParamType::Bool,
            Self::VisibleItemInfo => ParamType::VectorInt,
            Self::VisionAngle => ParamType::Float,
            Self::VisionRange => ParamType::Float,
            Self::Weapon => ParamType::GuidPair,
            Self::WeaponDrawnByDefault => ParamType::Bool,
            Self::WillSearchForEnemy => ParamType::Bool,
            Self::Action0 => ParamType::StringFloatPair,
            Self::Action0Duration => ParamType::Float,
            Self::Action0Option => ParamType::Int,
            Self::AlwaysVisibleToPlayers => ParamType::Bool,
            Self::AutoReviveDelay => ParamType::Float,
            Self::AutoReviveTime => ParamType::Int64,
            Self::AwareRange => ParamType::Float,
            Self::BeaconRadius => ParamType::Int,
            Self::CollisionExtent => ParamType::Vector3,
            Self::ContentClass => ParamType::String,
            Self::CycleQuestBase => ParamType::Int,
            Self::DefaultWeapon => ParamType::ContentRefList,
            Self::DespawnDelay => ParamType::Float,
            Self::Dialogs => ParamType::VectorInt,
            Self::DisplayName => ParamType::LocalizedString,
            Self::EnableInGame => ParamType::Bool,
            Self::FreedomProperties => ParamType::VectorInt,
            Self::Freq => ParamType::Int,
            Self::GenerateInterestList => ParamType::Bool,
            Self::HiddenFromClients => ParamType::Bool,
            Self::HiddenFromPlayers => ParamType::Bool,
            Self::HideAfterInteraction => ParamType::Bool,
            Self::InstanceTags => ParamType::String,
            Self::InstanceZoneKey => ParamType::String,
            Self::InteractionDuration => ParamType::Float,
            Self::InteractionRadius => ParamType::Float,
            Self::InteractionResetTimer => ParamType::Int,
            Self::IsNonSpawnedAvatar => ParamType::Bool,
            Self::IsSelfRevivable => ParamType::Bool,
            Self::LastInteractionTime => ParamType::Int64,
            Self::LuaScript => ParamType::String,
            Self::Lvl => ParamType::Int,
            Self::MaterialOverride => ParamType::Int,
            Self::Nodelink => ParamType::String,
            Self::OriginalNodeName => ParamType::String,
            Self::OriginalZoneName => ParamType::String,
            Self::PartyGuid => ParamType::Guid,
            Self::PathfindSafeSpawn => ParamType::Bool,
            Self::Pos => ParamType::Vector3,
            Self::Power => ParamType::Int,
            Self::Priority => ParamType::Float,
            Self::QuestFlags => ParamType::VectorInt,
            Self::ReadableName => ParamType::String,
            Self::RespawnDelay => ParamType::Float,
            Self::RespawnRegionName => ParamType::String,
            Self::RespawnRegionNameOverride => ParamType::String,
            Self::Rot => ParamType::Vector3,
            Self::SelfRadius => ParamType::Float,
            Self::SpawnMethod => ParamType::String,
            Self::SpawnPosition => ParamType::Vector3,
            Self::SpawnRotation => ParamType::Vector3,
            Self::Tags => ParamType::String,
            Self::TeamId => ParamType::Int,
            Self::Ue3EdVisual => ParamType::String,
            Self::VisibleOnQuestAvailable => ParamType::VectorInt,
            Self::VisibleOnQuestComplete => ParamType::VectorInt,
            Self::VisibleOnQuestFinished => ParamType::VectorInt,
            Self::VisibleOnQuestInProgress => ParamType::VectorInt,
            Self::WorldZoneObjectIndex => ParamType::Int,
            Self::Zone => ParamType::String,
            Self::ZoneGuid => ParamType::Guid,
            Self::BitsMultiplier => ParamType::Float,
            Self::Defb => ParamType::String,
            Self::DropLevelVariance => ParamType::Int,
            Self::EvadeRadius => ParamType::Float,
            Self::ExperienceMultiplier => ParamType::Float,
            Self::FragmentsMultiplier => ParamType::Float,
            Self::InstanceGroup => ParamType::InstanceGroup,
            Self::InstanceGuid => ParamType::Guid,
            Self::IsUnAttackable => ParamType::Bool,
            Self::MoveDest => ParamType::Vector3,
            Self::MoveSpeed => ParamType::Float,
            Self::NickName => ParamType::String,
            Self::NpcStateInfo => ParamType::String,
            Self::NpcType => ParamType::String,
            Self::Orientation => ParamType::Vector3,
            Self::RunSpeed => ParamType::Float,
            Self::ShuffleSpeed => ParamType::Float,
            Self::SomaMultiplier => ParamType::Float,
            Self::SpawnLeashRadius => ParamType::Float,
            Self::SpeakResponse => ParamType::String,
            Self::WalkSpeed => ParamType::Float,
        }
    }
    fn default(&self) -> &'static Value {
        static ICON: Lazy<Value> = Lazy::new(|| Value::String(
            "UI_Common.Textures.PlaceHolderIcon".to_string(),
        ));
        static UE_3_CLASS_ID: Lazy<Value> = Lazy::new(|| Value::String(
            "Otherland.OLAvatarNPC".to_string(),
        ));
        static INTERACT_RADIUS: Value = Value::Float(-1f32);
        static ABILITIES: Lazy<Value> = Lazy::new(|| Value::ContentRefList(
            ContentRefList::default(),
        ));
        static ACTIVATE_CUSTOMIZATION: Value = Value::Bool(false);
        static AGGRESSION: Value = Value::Int(1i32);
        static AI_STATE: Value = Value::Int(0i32);
        static AI_TEMPLATE: Lazy<Value> = Lazy::new(|| Value::ContentRef(None));
        static ALIVE: Value = Value::Bool(true);
        static ALIVE_TIME: Value = Value::Float(0f32);
        static ATTACKED_BY: Value = Value::AvatarId(AvatarId::from_u64(0u64));
        static ATTACKER_GROUP: Value = Value::Guid(
            Uuid::from_bytes([
                0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8,
                0u8, 0u8,
            ]),
        );
        static ATTRIBUTE_ENERGY: Value = Value::Float(0f32);
        static ATTRIBUTE_ENERGY_REGEN: Value = Value::Float(0f32);
        static ATTRIBUTE_HASTE_PHYS: Value = Value::Float(0f32);
        static ATTRIBUTE_HASTE_SPELL: Value = Value::Float(0f32);
        static ATTRIBUTE_HEALTH_REGEN: Value = Value::Float(0f32);
        static ATTRIBUTE_MOVEMENT: Value = Value::Float(32f32);
        static AUTO_GENERATED_LOOT_TABLE: Lazy<Value> = Lazy::new(|| Value::JsonValue(
            serde_json::from_str("{}").unwrap(),
        ));
        static AVATAR_STATUS: Lazy<Value> = Lazy::new(|| Value::String(
            String::default(),
        ));
        static BAG_VOLUME_0: Value = Value::Int(32i32);
        static BASE_DODGE_CHANCE: Value = Value::Float(4f32);
        static BASE_EVADE_CHANCE: Value = Value::Float(3f32);
        static BASE_PARRY_CHANCE: Value = Value::Float(3f32);
        static BEHAVIOR_CONFIG: Lazy<Value> = Lazy::new(|| Value::JsonValue(
            JsonValue::default(),
        ));
        static BLOCKED_ABILITY_EFFECT_TYPES: Value = Value::Int(0i32);
        static BONUS_DMG: Value = Value::Float(0f32);
        static BONUS_HP: Value = Value::Float(0f32);
        static CAN_BE_HIT_BY_AO_E_THROUGH_OBSTACLES: Value = Value::Bool(false);
        static CAN_BE_LOOTED: Value = Value::Bool(false);
        static CAN_BE_NOTIFIED_THROUGH_OBSTACLES: Value = Value::Bool(false);
        static CAN_ROTATE_ON_CLIENT: Value = Value::Bool(true);
        static CAPTURED_BY: Value = Value::AvatarId(AvatarId::from_u64(0u64));
        static CARRY_BACK: Value = Value::GuidPair((UUID_NIL, UUID_NIL));
        static CARRY_FRONT: Value = Value::GuidPair((UUID_NIL, UUID_NIL));
        static CHEST: Value = Value::GuidPair((UUID_NIL, UUID_NIL));
        static CLIENT_LOADING_PRIORITY: Value = Value::Int(0i32);
        static COMBAT_DEFB: Lazy<Value> = Lazy::new(|| Value::String(String::default()));
        static COMBAT_NOTIFY_RADIUS: Value = Value::Float(100f32);
        static COMBAT_STATUS: Lazy<Value> = Lazy::new(|| Value::String(
            String::default(),
        ));
        static COMBAT_STYLE: Value = Value::Int(0i32);
        static CONFIG_CATEGORIES: Lazy<Value> = Lazy::new(|| Value::JsonValue(
            JsonValue::default(),
        ));
        static CURRENT_AI_NOTIFY_TYPE: Value = Value::Int(0i32);
        static CURRENT_EMOTION: Value = Value::Int(0i32);
        static CURRENT_FORM: Lazy<Value> = Lazy::new(|| Value::String(
            String::default(),
        ));
        static CURRENT_SKIN: Lazy<Value> = Lazy::new(|| Value::String(
            String::default(),
        ));
        static CUSTOMIZATION_GENDER: Value = Value::Float(0f32);
        static CUSTOMIZATION_HEIGHT: Value = Value::Float(0.5f32);
        static DEATH_DURATION_MY_LAND: Value = Value::Float(60f32);
        static DEFAULT_IDLE: Lazy<Value> = Lazy::new(|| Value::String(
            "idle01".to_string(),
        ));
        static DEFAULT_ITEMS: Lazy<Value> = Lazy::new(|| Value::ContentRefList(
            ContentRefList::default(),
        ));
        static DEFAULT_ITEMS_CONTENT_GUID: Lazy<Value> = Lazy::new(|| Value::VectorInt(
            vec![],
        ));
        static DIE_WITHOUT_OWNER: Value = Value::Bool(false);
        static DIRECTOR_TAGS: Lazy<Value> = Lazy::new(|| Value::String(
            String::default(),
        ));
        static DIVERT_HP: Value = Value::Guid(
            Uuid::from_bytes([
                0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8,
                0u8, 0u8,
            ]),
        );
        static DONATOR_NAME: Lazy<Value> = Lazy::new(|| Value::String(
            String::default(),
        ));
        static EFFECT_IMMUNITY_MAIN_GROUPS: Lazy<Value> = Lazy::new(|| Value::VectorInt(
            vec![],
        ));
        static EFFECT_IMMUNITY_SUB_GROUPS: Lazy<Value> = Lazy::new(|| Value::VectorInt(
            vec![],
        ));
        static ENABLE_CUSTOMIZATION: Value = Value::Bool(false);
        static ENCOUNTER_FORMATION: Lazy<Value> = Lazy::new(|| Value::String(
            "None".to_string(),
        ));
        static ENCOUNTER_ID: Lazy<Value> = Lazy::new(|| Value::String(
            String::default(),
        ));
        static ENCOUNTER_ROLE: Lazy<Value> = Lazy::new(|| Value::String(
            String::default(),
        ));
        static ENFORCE_ALIVE_TIME: Value = Value::Bool(false);
        static EVADE_RANGE: Value = Value::Float(1500f32);
        static EXTRA_V_3_DATA: Value = Value::Vector3(Vec3::new(0f32, 0f32, 0f32));
        static FACE_TARGET_WHEN_CLOSE: Value = Value::Bool(true);
        static FACTION: Lazy<Value> = Lazy::new(|| Value::ContentRefList(
            "[151:76768078-b016-468f-94fe-d9b0e0aa763b]".parse().unwrap_or_default(),
        ));
        static FRAGMENTS_REQUIRED_OVERRIDE: Value = Value::Int(0i32);
        static FRAGMENT_TYPE_OVERRIDE: Lazy<Value> = Lazy::new(|| Value::ContentRef(
            None,
        ));
        static GENERAL_DIFFICULTY: Value = Value::Int(1i32);
        static GROUP_DIFFICULTY: Value = Value::Int(0i32);
        static GROUP_DIFFICULTY_NEW: Value = Value::Int(0i32);
        static HAS_ATTRIBUTES: Value = Value::Bool(true);
        static HEAD: Value = Value::GuidPair((UUID_NIL, UUID_NIL));
        static HP_CUR: Value = Value::Int(2000i32);
        static HP_MAX: Value = Value::Int(2000i32);
        static HP_MIN: Value = Value::Int(0i32);
        static HP_MOD: Value = Value::Float(1f32);
        static IGNORE_TAGS: Lazy<Value> = Lazy::new(|| Value::String(String::default()));
        static IN_MINI_GAME: Value = Value::Bool(false);
        static IN_SLEEP_STATE: Value = Value::Bool(false);
        static INTELLIGENCE: Value = Value::Int(1i32);
        static INTERACT_RANGE: Value = Value::Float(9f32);
        static INTEREST_POS: Value = Value::Vector3(Vec3::new(0f32, 0f32, 0f32));
        static IS_IN_COMBAT: Value = Value::Bool(false);
        static IS_IN_FORMATION: Value = Value::Bool(true);
        static IS_LOOTED: Value = Value::Bool(false);
        static IS_ON_GROUND: Value = Value::Bool(true);
        static IS_SELLING_CASH_ITEMS: Value = Value::Bool(false);
        static IS_SHARD_OBJECT: Value = Value::Bool(false);
        static IS_VISIBLE: Value = Value::Bool(true);
        static LAST_ATTACK_POSITION: Value = Value::Vector3(Vec3::new(0f32, 0f32, 0f32));
        static LIFETIME: Value = Value::Float(0f32);
        static LOOT_ALWAYS: Lazy<Value> = Lazy::new(|| Value::ContentRefList(
            "[37:011b2372-d312-46c1-8e1b-a844f98be4d1][37:13e492e8-ff11-44bf-b1fc-8baec40407fc]"
                .parse()
                .unwrap_or_default(),
        ));
        static LOOT_CHANCES: Lazy<Value> = Lazy::new(|| Value::String(
            String::default(),
        ));
        static LOOT_EXACTS: Lazy<Value> = Lazy::new(|| Value::ContentRefList(
            ContentRefList::default(),
        ));
        static LOOT_ITEMS: Lazy<Value> = Lazy::new(|| Value::ClassRefPowerRangeList(
            String::default(),
        ));
        static LOOT_PARTITION_1: Lazy<Value> = Lazy::new(|| Value::JsonValue(
            serde_json::from_str(
                    "{\"countMin\":1.0000000,\"countMax\":1.0000000,\"QuestKey\":\"\",\"reference\":\"\",\"itemWeightList\":[{\"itemContentTemplate\":\"ednaModuleTrophy\",\"weight\":1}]}",
                )
                .unwrap(),
        ));
        static LOOT_PARTITION_2: Lazy<Value> = Lazy::new(|| Value::JsonValue(
            serde_json::from_str(
                    "{\"countMin\":1.0000000,\"countMax\":1.0000000,\"QuestKey\":\"\",\"reference\":\"\",\"itemWeightList\":[{\"itemContentTemplate\":\"ednaModuleMesh\",\"weight\":1}]}",
                )
                .unwrap(),
        ));
        static LOOT_PARTITION_3: Lazy<Value> = Lazy::new(|| Value::JsonValue(
            serde_json::from_str(
                    "{\"countMin\":1.0000000,\"countMax\":1.0000000,\"QuestKey\":\"\",\"reference\":\"\"}",
                )
                .unwrap(),
        ));
        static LOOT_PARTITION_4: Lazy<Value> = Lazy::new(|| Value::JsonValue(
            serde_json::from_str(
                    "{\"countMin\":0.00000000,\"countMax\":0.00000000,\"QuestKey\":\"\",\"reference\":\"\",\"itemWeightList\":[]}",
                )
                .unwrap(),
        ));
        static LOOT_PARTITION_5: Lazy<Value> = Lazy::new(|| Value::JsonValue(
            serde_json::from_str(
                    "{\"countMin\":0.00000000,\"countMax\":0.00000000,\"QuestKey\":\"\",\"reference\":\"\",\"itemWeightList\":[]}",
                )
                .unwrap(),
        ));
        static LOOT_PARTITION_6: Lazy<Value> = Lazy::new(|| Value::JsonValue(
            serde_json::from_str(
                    "{\"countMin\":0.00000000,\"countMax\":0.00000000,\"QuestKey\":\"\",\"reference\":\"\",\"itemWeightList\":[]}",
                )
                .unwrap(),
        ));
        static LOOT_TABLE: Lazy<Value> = Lazy::new(|| Value::JsonValue(
            serde_json::from_str("{}").unwrap(),
        ));
        static LUA_ASSIGNED_STRING: Lazy<Value> = Lazy::new(|| Value::String(
            String::default(),
        ));
        static LUA_SCRIPT_COMBAT: Lazy<Value> = Lazy::new(|| Value::String(
            String::default(),
        ));
        static MODIFY_VISION_RANGE_BY_LEVEL: Value = Value::Bool(true);
        static MOVER: Value = Value::AvatarId(AvatarId::from_u64(0u64));
        static OFFSET_DATA: Value = Value::Vector3(Vec3::new(0f32, 0f32, 0f32));
        static POS_DEBUG: Value = Value::Vector3(Vec3::new(0f32, 0f32, 0f32));
        static POST_SPAWN_STATE_DURATION: Value = Value::Float(0f32);
        static QUEST_1: Lazy<Value> = Lazy::new(|| Value::ContentRef(None));
        static QUEST_2: Lazy<Value> = Lazy::new(|| Value::ContentRef(None));
        static QUEST_OWNER: Value = Value::AvatarId(AvatarId::from_u64(0u64));
        static QUESTS: Value = Value::Int(0i32);
        static RANGED_ATTACK_STRATEGY: Value = Value::Int(0i32);
        static REACTION_PLAN: Lazy<Value> = Lazy::new(|| Value::String(
            "Civilian".to_string(),
        ));
        static RECIPIE_DROP: Lazy<Value> = Lazy::new(|| Value::ContentRefList(
            ContentRefList::default(),
        ));
        static RELATIVE_POS_TO_CARRIER: Value = Value::Vector3(
            Vec3::new(0f32, 0f32, 0f32),
        );
        static SAY_DATA: Lazy<Value> = Lazy::new(|| Value::JsonValue(
            JsonValue::default(),
        ));
        static SAY_INDEX: Value = Value::Int(1i32);
        static SCRIPT_CLASS: Lazy<Value> = Lazy::new(|| Value::String(
            String::default(),
        ));
        static SCRIPT_CONFIG: Lazy<Value> = Lazy::new(|| Value::JsonValue(
            JsonValue::default(),
        ));
        static SEEK_HELP_BELOW_HP: Value = Value::Float(0f32);
        static SEEK_HELP_EXECUTION_RADIUS: Value = Value::Float(0f32);
        static SEEK_HELP_FROM_NPC_TYPES: Lazy<Value> = Lazy::new(|| Value::ContentRefList(
            ContentRefList::default(),
        ));
        static SEEK_HELP_WITHIN_RADIUS: Value = Value::Float(0f32);
        static SELL_CATEGORIES: Lazy<Value> = Lazy::new(|| Value::JsonValue(
            JsonValue::default(),
        ));
        static SELL_EXACTS: Lazy<Value> = Lazy::new(|| Value::ContentRefList(
            ContentRefList::default(),
        ));
        static SELL_ITEMS: Lazy<Value> = Lazy::new(|| Value::ClassRefPowerRangeList(
            String::default(),
        ));
        static SELL_SKU_ITEMS: Lazy<Value> = Lazy::new(|| Value::String(
            String::default(),
        ));
        static SIZE: Value = Value::Float(1f32);
        static SOUND_TAG: Lazy<Value> = Lazy::new(|| Value::StringFloatPair((
            String::default(),
            0.0,
        )));
        static SPAWNER_AVATAR_GUID: Value = Value::Guid(
            Uuid::from_bytes([
                0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8,
                0u8, 0u8,
            ]),
        );
        static SPAWNER_AVATAR_ID: Value = Value::AvatarId(AvatarId::from_u64(0u64));
        static SPAWNING_OSCILLATION: Value = Value::Float(0f32);
        static SPAWNING_TIME: Value = Value::Float(1f32);
        static SPAWN_LEASH_ANCHOR: Value = Value::Vector3(Vec3::new(0f32, 0f32, 0f32));
        static STAT_ANY_DMG_REDUCTION: Value = Value::Float(0f32);
        static STAT_AO_E_MAX_SUB_TARGETS: Value = Value::Float(0f32);
        static STAT_AO_E_SUB_TARGETS_DAMAGE_MOD: Value = Value::Float(0f32);
        static STAT_ARMOR_REDUCTION: Value = Value::Float(0f32);
        static STAT_ATTACK_POWER: Value = Value::Float(0f32);
        static STAT_BASE_DPS: Value = Value::Float(0f32);
        static STAT_BEND_CHANCE: Value = Value::Float(0f32);
        static STAT_BLOCK_CHANCE: Value = Value::Float(0f32);
        static STAT_BLOCKED_DAMAGE_MOD: Value = Value::Float(0f32);
        static STAT_CRIT_CHANCE: Value = Value::Float(0f32);
        static STAT_CRITICAL_CHANCE_REDUCTION: Value = Value::Float(0f32);
        static STAT_CRITICAL_DAMAGE_MOD: Value = Value::Float(0f32);
        static STAT_DEGENERATE_LEVEL: Value = Value::Float(0f32);
        static STATE: Value = Value::Int(0i32);
        static STAT_ENERGY_CURRENT: Value = Value::Float(0f32);
        static STAT_ENERGY_CURRENT_H_1: Value = Value::Float(0f32);
        static STAT_ENERGY_CURRENT_H_2: Value = Value::Float(0f32);
        static STAT_ENERGY_CURRENT_H_3: Value = Value::Float(0f32);
        static STAT_ENERGY_CURRENT_S_1: Value = Value::Float(0f32);
        static STAT_ENERGY_CURRENT_S_2: Value = Value::Float(0f32);
        static STAT_ENERGY_CURRENT_S_3: Value = Value::Float(0f32);
        static STAT_ENERGY_MAX: Value = Value::Float(100f32);
        static STAT_FINAL_DAMAGE_MOD: Value = Value::Float(0f32);
        static STAT_FINAL_HEALING_MOD: Value = Value::Float(0f32);
        static STAT_HASTE_CLASS_SKILLS: Value = Value::Float(0f32);
        static STAT_HASTE_PHYS_NORMAL: Value = Value::Float(0f32);
        static STAT_HEALING_RECEIVED_MOD: Value = Value::Float(0f32);
        static STAT_HEALTH: Value = Value::Float(0f32);
        static STAT_HEAVY_ENERGY_PER_HIT: Value = Value::Float(0f32);
        static STAT_HIT_CHANCE: Value = Value::Float(0f32);
        static STAT_REFLECT_CHANCE: Value = Value::Float(0f32);
        static STAT_SPECIAL_ENERGY_PER_HIT: Value = Value::Float(0f32);
        static STAT_STAMINA: Value = Value::Float(0f32);
        static STAT_STEALTH_LEVEL: Value = Value::Float(0f32);
        static STAT_WEAPON_DPS: Value = Value::Float(0f32);
        static TARGET: Value = Value::AvatarId(AvatarId::from_u64(0u64));
        static TEAMWORK: Value = Value::Int(1i32);
        static TELEPORT_POS: Value = Value::Vector3(Vec3::new(0f32, 0f32, 0f32));
        static TROPHY_MAX: Value = Value::Int(2i32);
        static UNIVERSAL_AWARENESS_RANGE: Value = Value::Float(60f32);
        static USE_UNIFIED_VISION: Value = Value::Bool(false);
        static VISIBLE_ITEM_INFO: Lazy<Value> = Lazy::new(|| Value::VectorInt(vec![]));
        static VISION_ANGLE: Value = Value::Float(45f32);
        static VISION_RANGE: Value = Value::Float(350f32);
        static WEAPON: Value = Value::GuidPair((UUID_NIL, UUID_NIL));
        static WEAPON_DRAWN_BY_DEFAULT: Value = Value::Bool(true);
        static WILL_SEARCH_FOR_ENEMY: Value = Value::Bool(true);
        static ACTION_0: Lazy<Value> = Lazy::new(|| Value::StringFloatPair((
            String::default(),
            0.0,
        )));
        static ACTION_0_DURATION: Value = Value::Float(0f32);
        static ACTION_0_OPTION: Value = Value::Int(0i32);
        static ALWAYS_VISIBLE_TO_PLAYERS: Value = Value::Bool(false);
        static AUTO_REVIVE_DELAY: Value = Value::Float(0f32);
        static AUTO_REVIVE_TIME: Value = Value::Int64(-1i64);
        static AWARE_RANGE: Value = Value::Float(2500f32);
        static BEACON_RADIUS: Value = Value::Int(0i32);
        static COLLISION_EXTENT: Value = Value::Vector3(Vec3::new(21f32, 21f32, 44f32));
        static CONTENT_CLASS: Lazy<Value> = Lazy::new(|| Value::String(
            String::default(),
        ));
        static CYCLE_QUEST_BASE: Value = Value::Int(1i32);
        static DEFAULT_WEAPON: Lazy<Value> = Lazy::new(|| Value::ContentRefList(
            ContentRefList::default(),
        ));
        static DESPAWN_DELAY: Value = Value::Float(30f32);
        static DIALOGS: Lazy<Value> = Lazy::new(|| Value::VectorInt(vec![]));
        static DISPLAY_NAME: Value = Value::LocalizedString(
            Uuid::from_bytes([
                0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8,
                0u8, 0u8,
            ]),
        );
        static ENABLE_IN_GAME: Value = Value::Bool(true);
        static FREEDOM_PROPERTIES: Lazy<Value> = Lazy::new(|| Value::VectorInt(vec![]));
        static FREQ: Value = Value::Int(0i32);
        static GENERATE_INTEREST_LIST: Value = Value::Bool(true);
        static HIDDEN_FROM_CLIENTS: Value = Value::Bool(false);
        static HIDDEN_FROM_PLAYERS: Value = Value::Bool(false);
        static HIDE_AFTER_INTERACTION: Value = Value::Bool(false);
        static INSTANCE_TAGS: Lazy<Value> = Lazy::new(|| Value::String(
            String::default(),
        ));
        static INSTANCE_ZONE_KEY: Lazy<Value> = Lazy::new(|| Value::String(
            String::default(),
        ));
        static INTERACTION_DURATION: Value = Value::Float(5f32);
        static INTERACTION_RADIUS: Value = Value::Float(150f32);
        static INTERACTION_RESET_TIMER: Value = Value::Int(1i32);
        static IS_NON_SPAWNED_AVATAR: Value = Value::Bool(true);
        static IS_SELF_REVIVABLE: Value = Value::Bool(false);
        static LAST_INTERACTION_TIME: Value = Value::Int64(0i64);
        static LUA_SCRIPT: Lazy<Value> = Lazy::new(|| Value::String(String::default()));
        static LVL: Value = Value::Int(1i32);
        static MATERIAL_OVERRIDE: Value = Value::Int(0i32);
        static NODELINK: Lazy<Value> = Lazy::new(|| Value::String(String::default()));
        static ORIGINAL_NODE_NAME: Lazy<Value> = Lazy::new(|| Value::String(
            String::default(),
        ));
        static ORIGINAL_ZONE_NAME: Lazy<Value> = Lazy::new(|| Value::String(
            String::default(),
        ));
        static PARTY_GUID: Value = Value::Guid(
            Uuid::from_bytes([
                0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8,
                0u8, 0u8,
            ]),
        );
        static PATHFIND_SAFE_SPAWN: Value = Value::Bool(true);
        static POS: Value = Value::Vector3(Vec3::new(0f32, 0f32, 0f32));
        static POWER: Value = Value::Int(0i32);
        static PRIORITY: Value = Value::Float(1f32);
        static QUEST_FLAGS: Lazy<Value> = Lazy::new(|| Value::VectorInt(vec![]));
        static READABLE_NAME: Lazy<Value> = Lazy::new(|| Value::String(
            String::default(),
        ));
        static RESPAWN_DELAY: Value = Value::Float(30f32);
        static RESPAWN_REGION_NAME: Lazy<Value> = Lazy::new(|| Value::String(
            String::default(),
        ));
        static RESPAWN_REGION_NAME_OVERRIDE: Lazy<Value> = Lazy::new(|| Value::String(
            String::default(),
        ));
        static ROT: Value = Value::Vector3(Vec3::new(0f32, 0f32, 0f32));
        static SELF_RADIUS: Value = Value::Float(20f32);
        static SPAWN_METHOD: Lazy<Value> = Lazy::new(|| Value::String(
            "normal".to_string(),
        ));
        static SPAWN_POSITION: Value = Value::Vector3(Vec3::new(0f32, 0f32, 0f32));
        static SPAWN_ROTATION: Value = Value::Vector3(Vec3::new(0f32, 0f32, 0f32));
        static TAGS: Lazy<Value> = Lazy::new(|| Value::String(String::default()));
        static TEAM_ID: Value = Value::Int(0i32);
        static UE_3_ED_VISUAL: Lazy<Value> = Lazy::new(|| Value::String(
            String::default(),
        ));
        static VISIBLE_ON_QUEST_AVAILABLE: Lazy<Value> = Lazy::new(|| Value::VectorInt(
            vec![],
        ));
        static VISIBLE_ON_QUEST_COMPLETE: Lazy<Value> = Lazy::new(|| Value::VectorInt(
            vec![],
        ));
        static VISIBLE_ON_QUEST_FINISHED: Lazy<Value> = Lazy::new(|| Value::VectorInt(
            vec![],
        ));
        static VISIBLE_ON_QUEST_IN_PROGRESS: Lazy<Value> = Lazy::new(|| Value::VectorInt(
            vec![],
        ));
        static WORLD_ZONE_OBJECT_INDEX: Value = Value::Int(0i32);
        static ZONE: Lazy<Value> = Lazy::new(|| Value::String(String::default()));
        static ZONE_GUID: Value = Value::Guid(
            Uuid::from_bytes([
                0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8,
                0u8, 0u8,
            ]),
        );
        static BITS_MULTIPLIER: Value = Value::Float(1f32);
        static DEFB: Lazy<Value> = Lazy::new(|| Value::String("BaseNPC".to_string()));
        static DROP_LEVEL_VARIANCE: Value = Value::Int(0i32);
        static EVADE_RADIUS: Value = Value::Float(4000f32);
        static EXPERIENCE_MULTIPLIER: Value = Value::Float(1f32);
        static FRAGMENTS_MULTIPLIER: Value = Value::Float(1f32);
        static INSTANCE_GROUP: Lazy<Value> = Lazy::new(|| Value::InstanceGroup(
            String::default(),
        ));
        static INSTANCE_GUID: Value = Value::Guid(
            Uuid::from_bytes([
                0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8,
                0u8, 0u8,
            ]),
        );
        static IS_UN_ATTACKABLE: Value = Value::Bool(false);
        static MOVE_DEST: Value = Value::Vector3(Vec3::new(0f32, 0f32, 0f32));
        static MOVE_SPEED: Value = Value::Float(150f32);
        static NICK_NAME: Lazy<Value> = Lazy::new(|| Value::String(
            "\u{7f}\u{7f}\u{7f}\u{7f}".to_string(),
        ));
        static NPC_STATE_INFO: Lazy<Value> = Lazy::new(|| Value::String(
            String::default(),
        ));
        static NPC_TYPE: Lazy<Value> = Lazy::new(|| Value::String("Vendor".to_string()));
        static ORIENTATION: Value = Value::Vector3(Vec3::new(0f32, 0f32, 0f32));
        static RUN_SPEED: Value = Value::Float(337f32);
        static SHUFFLE_SPEED: Value = Value::Float(45f32);
        static SOMA_MULTIPLIER: Value = Value::Float(1f32);
        static SPAWN_LEASH_RADIUS: Value = Value::Float(2500f32);
        static SPEAK_RESPONSE: Lazy<Value> = Lazy::new(|| Value::String(
            "Hi there".to_string(),
        ));
        static WALK_SPEED: Value = Value::Float(80f32);
        match self {
            Self::Icon => &ICON,
            Self::Ue3ClassId => &UE_3_CLASS_ID,
            Self::InteractRadius => &INTERACT_RADIUS,
            Self::Abilities => &ABILITIES,
            Self::ActivateCustomization => &ACTIVATE_CUSTOMIZATION,
            Self::Aggression => &AGGRESSION,
            Self::AiState => &AI_STATE,
            Self::AiTemplate => &AI_TEMPLATE,
            Self::Alive => &ALIVE,
            Self::AliveTime => &ALIVE_TIME,
            Self::AttackedBy => &ATTACKED_BY,
            Self::AttackerGroup => &ATTACKER_GROUP,
            Self::AttributeEnergy => &ATTRIBUTE_ENERGY,
            Self::AttributeEnergyRegen => &ATTRIBUTE_ENERGY_REGEN,
            Self::AttributeHastePhys => &ATTRIBUTE_HASTE_PHYS,
            Self::AttributeHasteSpell => &ATTRIBUTE_HASTE_SPELL,
            Self::AttributeHealthRegen => &ATTRIBUTE_HEALTH_REGEN,
            Self::AttributeMovement => &ATTRIBUTE_MOVEMENT,
            Self::AutoGeneratedLootTable => &AUTO_GENERATED_LOOT_TABLE,
            Self::AvatarStatus => &AVATAR_STATUS,
            Self::BagVolume0 => &BAG_VOLUME_0,
            Self::BaseDodgeChance => &BASE_DODGE_CHANCE,
            Self::BaseEvadeChance => &BASE_EVADE_CHANCE,
            Self::BaseParryChance => &BASE_PARRY_CHANCE,
            Self::BehaviorConfig => &BEHAVIOR_CONFIG,
            Self::BlockedAbilityEffectTypes => &BLOCKED_ABILITY_EFFECT_TYPES,
            Self::BonusDmg => &BONUS_DMG,
            Self::BonusHp => &BONUS_HP,
            Self::CanBeHitByAoEThroughObstacles => &CAN_BE_HIT_BY_AO_E_THROUGH_OBSTACLES,
            Self::CanBeLooted => &CAN_BE_LOOTED,
            Self::CanBeNotifiedThroughObstacles => &CAN_BE_NOTIFIED_THROUGH_OBSTACLES,
            Self::CanRotateOnClient => &CAN_ROTATE_ON_CLIENT,
            Self::CapturedBy => &CAPTURED_BY,
            Self::CarryBack => &CARRY_BACK,
            Self::CarryFront => &CARRY_FRONT,
            Self::Chest => &CHEST,
            Self::ClientLoadingPriority => &CLIENT_LOADING_PRIORITY,
            Self::CombatDefb => &COMBAT_DEFB,
            Self::CombatNotifyRadius => &COMBAT_NOTIFY_RADIUS,
            Self::CombatStatus => &COMBAT_STATUS,
            Self::CombatStyle => &COMBAT_STYLE,
            Self::ConfigCategories => &CONFIG_CATEGORIES,
            Self::CurrentAiNotifyType => &CURRENT_AI_NOTIFY_TYPE,
            Self::CurrentEmotion => &CURRENT_EMOTION,
            Self::CurrentForm => &CURRENT_FORM,
            Self::CurrentSkin => &CURRENT_SKIN,
            Self::CustomizationGender => &CUSTOMIZATION_GENDER,
            Self::CustomizationHeight => &CUSTOMIZATION_HEIGHT,
            Self::DeathDurationMyLand => &DEATH_DURATION_MY_LAND,
            Self::DefaultIdle => &DEFAULT_IDLE,
            Self::DefaultItems => &DEFAULT_ITEMS,
            Self::DefaultItemsContentGuid => &DEFAULT_ITEMS_CONTENT_GUID,
            Self::DieWithoutOwner => &DIE_WITHOUT_OWNER,
            Self::DirectorTags => &DIRECTOR_TAGS,
            Self::DivertHp => &DIVERT_HP,
            Self::DonatorName => &DONATOR_NAME,
            Self::EffectImmunityMainGroups => &EFFECT_IMMUNITY_MAIN_GROUPS,
            Self::EffectImmunitySubGroups => &EFFECT_IMMUNITY_SUB_GROUPS,
            Self::EnableCustomization => &ENABLE_CUSTOMIZATION,
            Self::EncounterFormation => &ENCOUNTER_FORMATION,
            Self::EncounterId => &ENCOUNTER_ID,
            Self::EncounterRole => &ENCOUNTER_ROLE,
            Self::EnforceAliveTime => &ENFORCE_ALIVE_TIME,
            Self::EvadeRange => &EVADE_RANGE,
            Self::ExtraV3Data => &EXTRA_V_3_DATA,
            Self::FaceTargetWhenClose => &FACE_TARGET_WHEN_CLOSE,
            Self::Faction => &FACTION,
            Self::FragmentsRequiredOverride => &FRAGMENTS_REQUIRED_OVERRIDE,
            Self::FragmentTypeOverride => &FRAGMENT_TYPE_OVERRIDE,
            Self::GeneralDifficulty => &GENERAL_DIFFICULTY,
            Self::GroupDifficulty => &GROUP_DIFFICULTY,
            Self::GroupDifficultyNew => &GROUP_DIFFICULTY_NEW,
            Self::HasAttributes => &HAS_ATTRIBUTES,
            Self::Head => &HEAD,
            Self::HpCur => &HP_CUR,
            Self::HpMax => &HP_MAX,
            Self::HpMin => &HP_MIN,
            Self::HpMod => &HP_MOD,
            Self::IgnoreTags => &IGNORE_TAGS,
            Self::InMiniGame => &IN_MINI_GAME,
            Self::InSleepState => &IN_SLEEP_STATE,
            Self::Intelligence => &INTELLIGENCE,
            Self::InteractRange => &INTERACT_RANGE,
            Self::InterestPos => &INTEREST_POS,
            Self::IsInCombat => &IS_IN_COMBAT,
            Self::IsInFormation => &IS_IN_FORMATION,
            Self::IsLooted => &IS_LOOTED,
            Self::IsOnGround => &IS_ON_GROUND,
            Self::IsSellingCashItems => &IS_SELLING_CASH_ITEMS,
            Self::IsShardObject => &IS_SHARD_OBJECT,
            Self::IsVisible => &IS_VISIBLE,
            Self::LastAttackPosition => &LAST_ATTACK_POSITION,
            Self::Lifetime => &LIFETIME,
            Self::LootAlways => &LOOT_ALWAYS,
            Self::LootChances => &LOOT_CHANCES,
            Self::LootExacts => &LOOT_EXACTS,
            Self::LootItems => &LOOT_ITEMS,
            Self::LootPartition1 => &LOOT_PARTITION_1,
            Self::LootPartition2 => &LOOT_PARTITION_2,
            Self::LootPartition3 => &LOOT_PARTITION_3,
            Self::LootPartition4 => &LOOT_PARTITION_4,
            Self::LootPartition5 => &LOOT_PARTITION_5,
            Self::LootPartition6 => &LOOT_PARTITION_6,
            Self::LootTable => &LOOT_TABLE,
            Self::LuaAssignedString => &LUA_ASSIGNED_STRING,
            Self::LuaScriptCombat => &LUA_SCRIPT_COMBAT,
            Self::ModifyVisionRangeByLevel => &MODIFY_VISION_RANGE_BY_LEVEL,
            Self::Mover => &MOVER,
            Self::OffsetData => &OFFSET_DATA,
            Self::PosDebug => &POS_DEBUG,
            Self::PostSpawnStateDuration => &POST_SPAWN_STATE_DURATION,
            Self::Quest1 => &QUEST_1,
            Self::Quest2 => &QUEST_2,
            Self::QuestOwner => &QUEST_OWNER,
            Self::Quests => &QUESTS,
            Self::RangedAttackStrategy => &RANGED_ATTACK_STRATEGY,
            Self::ReactionPlan => &REACTION_PLAN,
            Self::RecipieDrop => &RECIPIE_DROP,
            Self::RelativePosToCarrier => &RELATIVE_POS_TO_CARRIER,
            Self::SayData => &SAY_DATA,
            Self::SayIndex => &SAY_INDEX,
            Self::ScriptClass => &SCRIPT_CLASS,
            Self::ScriptConfig => &SCRIPT_CONFIG,
            Self::SeekHelpBelowHp => &SEEK_HELP_BELOW_HP,
            Self::SeekHelpExecutionRadius => &SEEK_HELP_EXECUTION_RADIUS,
            Self::SeekHelpFromNpcTypes => &SEEK_HELP_FROM_NPC_TYPES,
            Self::SeekHelpWithinRadius => &SEEK_HELP_WITHIN_RADIUS,
            Self::SellCategories => &SELL_CATEGORIES,
            Self::SellExacts => &SELL_EXACTS,
            Self::SellItems => &SELL_ITEMS,
            Self::SellSkuItems => &SELL_SKU_ITEMS,
            Self::Size => &SIZE,
            Self::SoundTag => &SOUND_TAG,
            Self::SpawnerAvatarGuid => &SPAWNER_AVATAR_GUID,
            Self::SpawnerAvatarId => &SPAWNER_AVATAR_ID,
            Self::SpawningOscillation => &SPAWNING_OSCILLATION,
            Self::SpawningTime => &SPAWNING_TIME,
            Self::SpawnLeashAnchor => &SPAWN_LEASH_ANCHOR,
            Self::StatAnyDmgReduction => &STAT_ANY_DMG_REDUCTION,
            Self::StatAoEMaxSubTargets => &STAT_AO_E_MAX_SUB_TARGETS,
            Self::StatAoESubTargetsDamageMod => &STAT_AO_E_SUB_TARGETS_DAMAGE_MOD,
            Self::StatArmorReduction => &STAT_ARMOR_REDUCTION,
            Self::StatAttackPower => &STAT_ATTACK_POWER,
            Self::StatBaseDps => &STAT_BASE_DPS,
            Self::StatBendChance => &STAT_BEND_CHANCE,
            Self::StatBlockChance => &STAT_BLOCK_CHANCE,
            Self::StatBlockedDamageMod => &STAT_BLOCKED_DAMAGE_MOD,
            Self::StatCritChance => &STAT_CRIT_CHANCE,
            Self::StatCriticalChanceReduction => &STAT_CRITICAL_CHANCE_REDUCTION,
            Self::StatCriticalDamageMod => &STAT_CRITICAL_DAMAGE_MOD,
            Self::StatDegenerateLevel => &STAT_DEGENERATE_LEVEL,
            Self::State => &STATE,
            Self::StatEnergyCurrent => &STAT_ENERGY_CURRENT,
            Self::StatEnergyCurrentH1 => &STAT_ENERGY_CURRENT_H_1,
            Self::StatEnergyCurrentH2 => &STAT_ENERGY_CURRENT_H_2,
            Self::StatEnergyCurrentH3 => &STAT_ENERGY_CURRENT_H_3,
            Self::StatEnergyCurrentS1 => &STAT_ENERGY_CURRENT_S_1,
            Self::StatEnergyCurrentS2 => &STAT_ENERGY_CURRENT_S_2,
            Self::StatEnergyCurrentS3 => &STAT_ENERGY_CURRENT_S_3,
            Self::StatEnergyMax => &STAT_ENERGY_MAX,
            Self::StatFinalDamageMod => &STAT_FINAL_DAMAGE_MOD,
            Self::StatFinalHealingMod => &STAT_FINAL_HEALING_MOD,
            Self::StatHasteClassSkills => &STAT_HASTE_CLASS_SKILLS,
            Self::StatHastePhysNormal => &STAT_HASTE_PHYS_NORMAL,
            Self::StatHealingReceivedMod => &STAT_HEALING_RECEIVED_MOD,
            Self::StatHealth => &STAT_HEALTH,
            Self::StatHeavyEnergyPerHit => &STAT_HEAVY_ENERGY_PER_HIT,
            Self::StatHitChance => &STAT_HIT_CHANCE,
            Self::StatReflectChance => &STAT_REFLECT_CHANCE,
            Self::StatSpecialEnergyPerHit => &STAT_SPECIAL_ENERGY_PER_HIT,
            Self::StatStamina => &STAT_STAMINA,
            Self::StatStealthLevel => &STAT_STEALTH_LEVEL,
            Self::StatWeaponDps => &STAT_WEAPON_DPS,
            Self::Target => &TARGET,
            Self::Teamwork => &TEAMWORK,
            Self::TeleportPos => &TELEPORT_POS,
            Self::TrophyMax => &TROPHY_MAX,
            Self::UniversalAwarenessRange => &UNIVERSAL_AWARENESS_RANGE,
            Self::UseUnifiedVision => &USE_UNIFIED_VISION,
            Self::VisibleItemInfo => &VISIBLE_ITEM_INFO,
            Self::VisionAngle => &VISION_ANGLE,
            Self::VisionRange => &VISION_RANGE,
            Self::Weapon => &WEAPON,
            Self::WeaponDrawnByDefault => &WEAPON_DRAWN_BY_DEFAULT,
            Self::WillSearchForEnemy => &WILL_SEARCH_FOR_ENEMY,
            Self::Action0 => &ACTION_0,
            Self::Action0Duration => &ACTION_0_DURATION,
            Self::Action0Option => &ACTION_0_OPTION,
            Self::AlwaysVisibleToPlayers => &ALWAYS_VISIBLE_TO_PLAYERS,
            Self::AutoReviveDelay => &AUTO_REVIVE_DELAY,
            Self::AutoReviveTime => &AUTO_REVIVE_TIME,
            Self::AwareRange => &AWARE_RANGE,
            Self::BeaconRadius => &BEACON_RADIUS,
            Self::CollisionExtent => &COLLISION_EXTENT,
            Self::ContentClass => &CONTENT_CLASS,
            Self::CycleQuestBase => &CYCLE_QUEST_BASE,
            Self::DefaultWeapon => &DEFAULT_WEAPON,
            Self::DespawnDelay => &DESPAWN_DELAY,
            Self::Dialogs => &DIALOGS,
            Self::DisplayName => &DISPLAY_NAME,
            Self::EnableInGame => &ENABLE_IN_GAME,
            Self::FreedomProperties => &FREEDOM_PROPERTIES,
            Self::Freq => &FREQ,
            Self::GenerateInterestList => &GENERATE_INTEREST_LIST,
            Self::HiddenFromClients => &HIDDEN_FROM_CLIENTS,
            Self::HiddenFromPlayers => &HIDDEN_FROM_PLAYERS,
            Self::HideAfterInteraction => &HIDE_AFTER_INTERACTION,
            Self::InstanceTags => &INSTANCE_TAGS,
            Self::InstanceZoneKey => &INSTANCE_ZONE_KEY,
            Self::InteractionDuration => &INTERACTION_DURATION,
            Self::InteractionRadius => &INTERACTION_RADIUS,
            Self::InteractionResetTimer => &INTERACTION_RESET_TIMER,
            Self::IsNonSpawnedAvatar => &IS_NON_SPAWNED_AVATAR,
            Self::IsSelfRevivable => &IS_SELF_REVIVABLE,
            Self::LastInteractionTime => &LAST_INTERACTION_TIME,
            Self::LuaScript => &LUA_SCRIPT,
            Self::Lvl => &LVL,
            Self::MaterialOverride => &MATERIAL_OVERRIDE,
            Self::Nodelink => &NODELINK,
            Self::OriginalNodeName => &ORIGINAL_NODE_NAME,
            Self::OriginalZoneName => &ORIGINAL_ZONE_NAME,
            Self::PartyGuid => &PARTY_GUID,
            Self::PathfindSafeSpawn => &PATHFIND_SAFE_SPAWN,
            Self::Pos => &POS,
            Self::Power => &POWER,
            Self::Priority => &PRIORITY,
            Self::QuestFlags => &QUEST_FLAGS,
            Self::ReadableName => &READABLE_NAME,
            Self::RespawnDelay => &RESPAWN_DELAY,
            Self::RespawnRegionName => &RESPAWN_REGION_NAME,
            Self::RespawnRegionNameOverride => &RESPAWN_REGION_NAME_OVERRIDE,
            Self::Rot => &ROT,
            Self::SelfRadius => &SELF_RADIUS,
            Self::SpawnMethod => &SPAWN_METHOD,
            Self::SpawnPosition => &SPAWN_POSITION,
            Self::SpawnRotation => &SPAWN_ROTATION,
            Self::Tags => &TAGS,
            Self::TeamId => &TEAM_ID,
            Self::Ue3EdVisual => &UE_3_ED_VISUAL,
            Self::VisibleOnQuestAvailable => &VISIBLE_ON_QUEST_AVAILABLE,
            Self::VisibleOnQuestComplete => &VISIBLE_ON_QUEST_COMPLETE,
            Self::VisibleOnQuestFinished => &VISIBLE_ON_QUEST_FINISHED,
            Self::VisibleOnQuestInProgress => &VISIBLE_ON_QUEST_IN_PROGRESS,
            Self::WorldZoneObjectIndex => &WORLD_ZONE_OBJECT_INDEX,
            Self::Zone => &ZONE,
            Self::ZoneGuid => &ZONE_GUID,
            Self::BitsMultiplier => &BITS_MULTIPLIER,
            Self::Defb => &DEFB,
            Self::DropLevelVariance => &DROP_LEVEL_VARIANCE,
            Self::EvadeRadius => &EVADE_RADIUS,
            Self::ExperienceMultiplier => &EXPERIENCE_MULTIPLIER,
            Self::FragmentsMultiplier => &FRAGMENTS_MULTIPLIER,
            Self::InstanceGroup => &INSTANCE_GROUP,
            Self::InstanceGuid => &INSTANCE_GUID,
            Self::IsUnAttackable => &IS_UN_ATTACKABLE,
            Self::MoveDest => &MOVE_DEST,
            Self::MoveSpeed => &MOVE_SPEED,
            Self::NickName => &NICK_NAME,
            Self::NpcStateInfo => &NPC_STATE_INFO,
            Self::NpcType => &NPC_TYPE,
            Self::Orientation => &ORIENTATION,
            Self::RunSpeed => &RUN_SPEED,
            Self::ShuffleSpeed => &SHUFFLE_SPEED,
            Self::SomaMultiplier => &SOMA_MULTIPLIER,
            Self::SpawnLeashRadius => &SPAWN_LEASH_RADIUS,
            Self::SpeakResponse => &SPEAK_RESPONSE,
            Self::WalkSpeed => &WALK_SPEED,
        }
    }
    fn flags(&self) -> &[ParamFlag] {
        match self {
            Self::Icon => {
                &[ParamFlag::NodeOwn, ParamFlag::Persistent, ParamFlag::Content]
            }
            Self::Ue3ClassId => &[ParamFlag::Persistent, ParamFlag::Content],
            Self::InteractRadius => &[ParamFlag::NodeOwn, ParamFlag::Content],
            Self::Abilities => {
                &[
                    ParamFlag::NodeOwn,
                    ParamFlag::Persistent,
                    ParamFlag::Content,
                    ParamFlag::PerInstanceSetting,
                ]
            }
            Self::ActivateCustomization => {
                &[ParamFlag::NodeOwn, ParamFlag::Persistent, ParamFlag::Content]
            }
            Self::Aggression => {
                &[
                    ParamFlag::NodeOwn,
                    ParamFlag::Persistent,
                    ParamFlag::Content,
                    ParamFlag::PerInstanceSetting,
                ]
            }
            Self::AiState => {
                &[ParamFlag::NodeOwn, ParamFlag::ClientUnknown, ParamFlag::Persistent]
            }
            Self::AiTemplate => {
                &[
                    ParamFlag::Persistent,
                    ParamFlag::Content,
                    ParamFlag::PerInstanceSetting,
                ]
            }
            Self::Alive => &[ParamFlag::NodeOwn],
            Self::AliveTime => {
                &[
                    ParamFlag::NodeOwn,
                    ParamFlag::ClientUnknown,
                    ParamFlag::Persistent,
                    ParamFlag::Content,
                    ParamFlag::PerInstanceSetting,
                ]
            }
            Self::AttackedBy => &[ParamFlag::NodeOwn],
            Self::AttackerGroup => &[ParamFlag::NodeOwn],
            Self::AttributeEnergy => {
                &[
                    ParamFlag::NodeOwn,
                    ParamFlag::Persistent,
                    ParamFlag::ExcludeFromClient,
                ]
            }
            Self::AttributeEnergyRegen => {
                &[
                    ParamFlag::NodeOwn,
                    ParamFlag::ClientUnknown,
                    ParamFlag::Persistent,
                    ParamFlag::ExcludeFromClient,
                ]
            }
            Self::AttributeHastePhys => {
                &[
                    ParamFlag::NodeOwn,
                    ParamFlag::ClientUnknown,
                    ParamFlag::Persistent,
                    ParamFlag::ExcludeFromClient,
                ]
            }
            Self::AttributeHasteSpell => {
                &[ParamFlag::NodeOwn, ParamFlag::ClientUnknown, ParamFlag::Persistent]
            }
            Self::AttributeHealthRegen => {
                &[
                    ParamFlag::NodeOwn,
                    ParamFlag::ClientUnknown,
                    ParamFlag::Persistent,
                    ParamFlag::ExcludeFromClient,
                ]
            }
            Self::AttributeMovement => {
                &[
                    ParamFlag::NodeOwn,
                    ParamFlag::Persistent,
                    ParamFlag::Content,
                    ParamFlag::ExcludeFromClient,
                ]
            }
            Self::AutoGeneratedLootTable => {
                &[
                    ParamFlag::Persistent,
                    ParamFlag::Content,
                    ParamFlag::PerInstanceSetting,
                ]
            }
            Self::AvatarStatus => &[ParamFlag::NodeOwn, ParamFlag::DupeSetOk],
            Self::BagVolume0 => {
                &[
                    ParamFlag::NodeOwn,
                    ParamFlag::ServerOwn,
                    ParamFlag::ClientUnknown,
                    ParamFlag::Persistent,
                    ParamFlag::Deprecated,
                ]
            }
            Self::BaseDodgeChance => {
                &[
                    ParamFlag::NodeOwn,
                    ParamFlag::ClientUnknown,
                    ParamFlag::Persistent,
                    ParamFlag::Content,
                ]
            }
            Self::BaseEvadeChance => {
                &[
                    ParamFlag::NodeOwn,
                    ParamFlag::ClientUnknown,
                    ParamFlag::Persistent,
                    ParamFlag::Content,
                ]
            }
            Self::BaseParryChance => {
                &[
                    ParamFlag::NodeOwn,
                    ParamFlag::ClientUnknown,
                    ParamFlag::Persistent,
                    ParamFlag::Content,
                ]
            }
            Self::BehaviorConfig => {
                &[
                    ParamFlag::NodeOwn,
                    ParamFlag::ClientUnknown,
                    ParamFlag::Persistent,
                    ParamFlag::Content,
                    ParamFlag::PerInstanceSetting,
                ]
            }
            Self::BlockedAbilityEffectTypes => {
                &[ParamFlag::NodeOwn, ParamFlag::ClientUnknown]
            }
            Self::BonusDmg => {
                &[ParamFlag::NodeOwn, ParamFlag::ClientUnknown, ParamFlag::Persistent]
            }
            Self::BonusHp => {
                &[ParamFlag::NodeOwn, ParamFlag::ClientUnknown, ParamFlag::Persistent]
            }
            Self::CanBeHitByAoEThroughObstacles => {
                &[
                    ParamFlag::Persistent,
                    ParamFlag::Content,
                    ParamFlag::PerInstanceSetting,
                ]
            }
            Self::CanBeLooted => {
                &[ParamFlag::NodeOwn, ParamFlag::ServerOwn, ParamFlag::Persistent]
            }
            Self::CanBeNotifiedThroughObstacles => {
                &[
                    ParamFlag::Persistent,
                    ParamFlag::Content,
                    ParamFlag::PerInstanceSetting,
                ]
            }
            Self::CanRotateOnClient => {
                &[
                    ParamFlag::NodeOwn,
                    ParamFlag::Persistent,
                    ParamFlag::Content,
                    ParamFlag::PerInstanceSetting,
                ]
            }
            Self::CapturedBy => &[ParamFlag::NodeOwn, ParamFlag::ClientUnknown],
            Self::CarryBack => {
                &[
                    ParamFlag::NodeOwn,
                    ParamFlag::ServerOwn,
                    ParamFlag::Persistent,
                    ParamFlag::EquipSlot,
                    ParamFlag::Deprecated,
                ]
            }
            Self::CarryFront => {
                &[
                    ParamFlag::NodeOwn,
                    ParamFlag::ServerOwn,
                    ParamFlag::Persistent,
                    ParamFlag::EquipSlot,
                    ParamFlag::Deprecated,
                ]
            }
            Self::Chest => {
                &[
                    ParamFlag::NodeOwn,
                    ParamFlag::ServerOwn,
                    ParamFlag::ClientUnknown,
                    ParamFlag::Persistent,
                    ParamFlag::EquipSlot,
                    ParamFlag::Deprecated,
                ]
            }
            Self::ClientLoadingPriority => {
                &[
                    ParamFlag::Persistent,
                    ParamFlag::Content,
                    ParamFlag::PerInstanceSetting,
                ]
            }
            Self::CombatDefb => {
                &[
                    ParamFlag::NodeOwn,
                    ParamFlag::Persistent,
                    ParamFlag::Content,
                    ParamFlag::PerInstanceSetting,
                ]
            }
            Self::CombatNotifyRadius => {
                &[ParamFlag::Content, ParamFlag::PerInstanceSetting]
            }
            Self::CombatStatus => &[ParamFlag::NodeOwn, ParamFlag::DupeSetOk],
            Self::CombatStyle => {
                &[
                    ParamFlag::NodeOwn,
                    ParamFlag::Persistent,
                    ParamFlag::Content,
                    ParamFlag::PerInstanceSetting,
                ]
            }
            Self::ConfigCategories => {
                &[
                    ParamFlag::ServerOwn,
                    ParamFlag::Persistent,
                    ParamFlag::Content,
                    ParamFlag::PerInstanceSetting,
                ]
            }
            Self::CurrentAiNotifyType => &[ParamFlag::NodeOwn],
            Self::CurrentEmotion => {
                &[ParamFlag::NodeOwn, ParamFlag::Content, ParamFlag::PerInstanceSetting]
            }
            Self::CurrentForm => &[ParamFlag::NodeOwn],
            Self::CurrentSkin => &[ParamFlag::NodeOwn],
            Self::CustomizationGender => &[ParamFlag::NodeOwn, ParamFlag::Persistent],
            Self::CustomizationHeight => &[ParamFlag::NodeOwn, ParamFlag::Persistent],
            Self::DeathDurationMyLand => {
                &[ParamFlag::ClientUnknown, ParamFlag::Persistent, ParamFlag::Content]
            }
            Self::DefaultIdle => {
                &[ParamFlag::NodeOwn, ParamFlag::Persistent, ParamFlag::Content]
            }
            Self::DefaultItems => {
                &[ParamFlag::NodeOwn, ParamFlag::Persistent, ParamFlag::Content]
            }
            Self::DefaultItemsContentGuid => {
                &[ParamFlag::NodeOwn, ParamFlag::Persistent, ParamFlag::Deprecated]
            }
            Self::DieWithoutOwner => {
                &[ParamFlag::NodeOwn, ParamFlag::Persistent, ParamFlag::Content]
            }
            Self::DirectorTags => {
                &[
                    ParamFlag::NodeOwn,
                    ParamFlag::Persistent,
                    ParamFlag::Content,
                    ParamFlag::PerInstanceSetting,
                ]
            }
            Self::DivertHp => {
                &[
                    ParamFlag::ClientUnknown,
                    ParamFlag::Persistent,
                    ParamFlag::PerInstanceSetting,
                ]
            }
            Self::DonatorName => {
                &[ParamFlag::NodeOwn, ParamFlag::ServerOwn, ParamFlag::Persistent]
            }
            Self::EffectImmunityMainGroups => {
                &[
                    ParamFlag::Persistent,
                    ParamFlag::Content,
                    ParamFlag::PerInstanceSetting,
                ]
            }
            Self::EffectImmunitySubGroups => {
                &[
                    ParamFlag::Persistent,
                    ParamFlag::Content,
                    ParamFlag::PerInstanceSetting,
                ]
            }
            Self::EnableCustomization => {
                &[ParamFlag::NodeOwn, ParamFlag::Persistent, ParamFlag::Content]
            }
            Self::EncounterFormation => {
                &[
                    ParamFlag::NodeOwn,
                    ParamFlag::ClientUnknown,
                    ParamFlag::Persistent,
                    ParamFlag::Content,
                    ParamFlag::PerInstanceSetting,
                ]
            }
            Self::EncounterId => {
                &[
                    ParamFlag::NodeOwn,
                    ParamFlag::Persistent,
                    ParamFlag::Content,
                    ParamFlag::PerInstanceSetting,
                ]
            }
            Self::EncounterRole => {
                &[
                    ParamFlag::NodeOwn,
                    ParamFlag::Persistent,
                    ParamFlag::Content,
                    ParamFlag::PerInstanceSetting,
                ]
            }
            Self::EnforceAliveTime => {
                &[
                    ParamFlag::NodeOwn,
                    ParamFlag::Persistent,
                    ParamFlag::Content,
                    ParamFlag::PerInstanceSetting,
                ]
            }
            Self::EvadeRange => {
                &[
                    ParamFlag::ClientUnknown,
                    ParamFlag::Persistent,
                    ParamFlag::Content,
                    ParamFlag::PerInstanceSetting,
                ]
            }
            Self::ExtraV3Data => {
                &[
                    ParamFlag::NodeOwn,
                    ParamFlag::Persistent,
                    ParamFlag::Content,
                    ParamFlag::PerInstanceSetting,
                ]
            }
            Self::FaceTargetWhenClose => {
                &[
                    ParamFlag::NodeOwn,
                    ParamFlag::Persistent,
                    ParamFlag::Content,
                    ParamFlag::PerInstanceSetting,
                ]
            }
            Self::Faction => {
                &[
                    ParamFlag::Persistent,
                    ParamFlag::Content,
                    ParamFlag::PerInstanceSetting,
                ]
            }
            Self::FragmentsRequiredOverride => {
                &[ParamFlag::ClientUnknown, ParamFlag::Persistent, ParamFlag::Content]
            }
            Self::FragmentTypeOverride => {
                &[ParamFlag::ClientUnknown, ParamFlag::Persistent, ParamFlag::Content]
            }
            Self::GeneralDifficulty => {
                &[
                    ParamFlag::NodeOwn,
                    ParamFlag::Persistent,
                    ParamFlag::Content,
                    ParamFlag::PerInstanceSetting,
                ]
            }
            Self::GroupDifficulty => {
                &[
                    ParamFlag::NodeOwn,
                    ParamFlag::Persistent,
                    ParamFlag::Content,
                    ParamFlag::PerInstanceSetting,
                ]
            }
            Self::GroupDifficultyNew => {
                &[
                    ParamFlag::NodeOwn,
                    ParamFlag::Persistent,
                    ParamFlag::Content,
                    ParamFlag::PerInstanceSetting,
                ]
            }
            Self::HasAttributes => {
                &[
                    ParamFlag::ClientUnknown,
                    ParamFlag::Persistent,
                    ParamFlag::ExcludeFromClient,
                ]
            }
            Self::Head => {
                &[
                    ParamFlag::NodeOwn,
                    ParamFlag::ServerOwn,
                    ParamFlag::ClientUnknown,
                    ParamFlag::Persistent,
                    ParamFlag::EquipSlot,
                    ParamFlag::Deprecated,
                ]
            }
            Self::HpCur => &[ParamFlag::NodeOwn, ParamFlag::Persistent],
            Self::HpMax => {
                &[
                    ParamFlag::NodeOwn,
                    ParamFlag::Persistent,
                    ParamFlag::Content,
                    ParamFlag::PerInstanceSetting,
                ]
            }
            Self::HpMin => {
                &[
                    ParamFlag::NodeOwn,
                    ParamFlag::Persistent,
                    ParamFlag::Content,
                    ParamFlag::PerInstanceSetting,
                ]
            }
            Self::HpMod => {
                &[
                    ParamFlag::NodeOwn,
                    ParamFlag::Persistent,
                    ParamFlag::Content,
                    ParamFlag::PerInstanceSetting,
                ]
            }
            Self::IgnoreTags => {
                &[
                    ParamFlag::NodeOwn,
                    ParamFlag::ServerOwn,
                    ParamFlag::Persistent,
                    ParamFlag::Content,
                ]
            }
            Self::InMiniGame => &[ParamFlag::NodeOwn, ParamFlag::Persistent],
            Self::InSleepState => {
                &[ParamFlag::NodeOwn, ParamFlag::ClientUnknown, ParamFlag::Persistent]
            }
            Self::Intelligence => {
                &[
                    ParamFlag::NodeOwn,
                    ParamFlag::Persistent,
                    ParamFlag::Content,
                    ParamFlag::PerInstanceSetting,
                ]
            }
            Self::InteractRange => {
                &[
                    ParamFlag::NodeOwn,
                    ParamFlag::ServerOwn,
                    ParamFlag::Persistent,
                    ParamFlag::Content,
                ]
            }
            Self::InterestPos => &[ParamFlag::NodeOwn, ParamFlag::Persistent],
            Self::IsInCombat => &[ParamFlag::NodeOwn],
            Self::IsInFormation => &[ParamFlag::ClientUnknown, ParamFlag::Persistent],
            Self::IsLooted => &[ParamFlag::NodeOwn],
            Self::IsOnGround => {
                &[ParamFlag::NodeOwn, ParamFlag::Persistent, ParamFlag::Content]
            }
            Self::IsSellingCashItems => {
                &[
                    ParamFlag::Persistent,
                    ParamFlag::Content,
                    ParamFlag::PerInstanceSetting,
                ]
            }
            Self::IsShardObject => {
                &[
                    ParamFlag::NodeOwn,
                    ParamFlag::ClientUnknown,
                    ParamFlag::Persistent,
                    ParamFlag::Content,
                ]
            }
            Self::IsVisible => {
                &[ParamFlag::NodeOwn, ParamFlag::Persistent, ParamFlag::Content]
            }
            Self::LastAttackPosition => &[ParamFlag::NodeOwn, ParamFlag::ClientUnknown],
            Self::Lifetime => &[ParamFlag::NodeOwn],
            Self::LootAlways => &[ParamFlag::ClientUnknown, ParamFlag::Persistent],
            Self::LootChances => &[ParamFlag::ClientUnknown, ParamFlag::Persistent],
            Self::LootExacts => &[ParamFlag::ClientUnknown, ParamFlag::Persistent],
            Self::LootItems => &[ParamFlag::ClientUnknown, ParamFlag::Persistent],
            Self::LootPartition1 => &[ParamFlag::ClientUnknown, ParamFlag::Persistent],
            Self::LootPartition2 => &[ParamFlag::ClientUnknown, ParamFlag::Persistent],
            Self::LootPartition3 => &[ParamFlag::ClientUnknown, ParamFlag::Persistent],
            Self::LootPartition4 => &[ParamFlag::ClientUnknown, ParamFlag::Persistent],
            Self::LootPartition5 => &[ParamFlag::ClientUnknown, ParamFlag::Persistent],
            Self::LootPartition6 => &[ParamFlag::ClientUnknown, ParamFlag::Persistent],
            Self::LootTable => {
                &[
                    ParamFlag::ClientUnknown,
                    ParamFlag::Persistent,
                    ParamFlag::Content,
                    ParamFlag::PerInstanceSetting,
                ]
            }
            Self::LuaAssignedString => &[ParamFlag::NodeOwn, ParamFlag::Persistent],
            Self::LuaScriptCombat => {
                &[
                    ParamFlag::Persistent,
                    ParamFlag::Content,
                    ParamFlag::PerInstanceSetting,
                ]
            }
            Self::ModifyVisionRangeByLevel => {
                &[ParamFlag::Persistent, ParamFlag::Content]
            }
            Self::Mover => {
                &[ParamFlag::NodeOwn, ParamFlag::ServerOwn, ParamFlag::Persistent]
            }
            Self::OffsetData => {
                &[
                    ParamFlag::NodeOwn,
                    ParamFlag::ClientUnknown,
                    ParamFlag::Persistent,
                    ParamFlag::Content,
                    ParamFlag::PerInstanceSetting,
                ]
            }
            Self::PosDebug => {
                &[
                    ParamFlag::NodeOwn,
                    ParamFlag::ServerOwn,
                    ParamFlag::ClientUnknown,
                    ParamFlag::Persistent,
                    ParamFlag::PerInstanceSetting,
                    ParamFlag::Deprecated,
                ]
            }
            Self::PostSpawnStateDuration => {
                &[
                    ParamFlag::Persistent,
                    ParamFlag::Content,
                    ParamFlag::PerInstanceSetting,
                ]
            }
            Self::Quest1 => &[ParamFlag::NodeOwn, ParamFlag::Persistent],
            Self::Quest2 => &[ParamFlag::NodeOwn, ParamFlag::Persistent],
            Self::QuestOwner => &[ParamFlag::NodeOwn],
            Self::Quests => &[ParamFlag::NodeOwn, ParamFlag::Persistent],
            Self::RangedAttackStrategy => {
                &[
                    ParamFlag::Persistent,
                    ParamFlag::Content,
                    ParamFlag::PerInstanceSetting,
                ]
            }
            Self::ReactionPlan => {
                &[
                    ParamFlag::NodeOwn,
                    ParamFlag::Persistent,
                    ParamFlag::Content,
                    ParamFlag::PerInstanceSetting,
                ]
            }
            Self::RecipieDrop => {
                &[
                    ParamFlag::Persistent,
                    ParamFlag::Content,
                    ParamFlag::PerInstanceSetting,
                ]
            }
            Self::RelativePosToCarrier => {
                &[ParamFlag::NodeOwn, ParamFlag::ServerOwn, ParamFlag::Persistent]
            }
            Self::SayData => {
                &[
                    ParamFlag::NodeOwn,
                    ParamFlag::ClientUnknown,
                    ParamFlag::Persistent,
                    ParamFlag::Content,
                ]
            }
            Self::SayIndex => {
                &[ParamFlag::NodeOwn, ParamFlag::ClientUnknown, ParamFlag::Content]
            }
            Self::ScriptClass => {
                &[
                    ParamFlag::ClientUnknown,
                    ParamFlag::ExcludeFromClient,
                    ParamFlag::Deprecated,
                ]
            }
            Self::ScriptConfig => {
                &[
                    ParamFlag::ClientUnknown,
                    ParamFlag::ExcludeFromClient,
                    ParamFlag::Deprecated,
                ]
            }
            Self::SeekHelpBelowHp => {
                &[
                    ParamFlag::NodeOwn,
                    ParamFlag::ClientUnknown,
                    ParamFlag::Persistent,
                    ParamFlag::Content,
                    ParamFlag::PerInstanceSetting,
                ]
            }
            Self::SeekHelpExecutionRadius => {
                &[
                    ParamFlag::NodeOwn,
                    ParamFlag::Persistent,
                    ParamFlag::Content,
                    ParamFlag::PerInstanceSetting,
                ]
            }
            Self::SeekHelpFromNpcTypes => {
                &[
                    ParamFlag::NodeOwn,
                    ParamFlag::ClientUnknown,
                    ParamFlag::Persistent,
                    ParamFlag::Content,
                ]
            }
            Self::SeekHelpWithinRadius => {
                &[
                    ParamFlag::NodeOwn,
                    ParamFlag::ClientUnknown,
                    ParamFlag::Persistent,
                    ParamFlag::Content,
                    ParamFlag::PerInstanceSetting,
                ]
            }
            Self::SellCategories => {
                &[
                    ParamFlag::ServerOwn,
                    ParamFlag::Persistent,
                    ParamFlag::Content,
                    ParamFlag::PerInstanceSetting,
                ]
            }
            Self::SellExacts => {
                &[
                    ParamFlag::Persistent,
                    ParamFlag::Content,
                    ParamFlag::PerInstanceSetting,
                ]
            }
            Self::SellItems => {
                &[ParamFlag::ClientUnknown, ParamFlag::Persistent, ParamFlag::Content]
            }
            Self::SellSkuItems => {
                &[
                    ParamFlag::Persistent,
                    ParamFlag::Content,
                    ParamFlag::PerInstanceSetting,
                ]
            }
            Self::Size => {
                &[
                    ParamFlag::NodeOwn,
                    ParamFlag::ServerOwn,
                    ParamFlag::Persistent,
                    ParamFlag::Content,
                    ParamFlag::PerInstanceSetting,
                ]
            }
            Self::SoundTag => &[ParamFlag::NodeOwn],
            Self::SpawnerAvatarGuid => {
                &[ParamFlag::NodeOwn, ParamFlag::ClientUnknown, ParamFlag::Persistent]
            }
            Self::SpawnerAvatarId => &[ParamFlag::NodeOwn, ParamFlag::Persistent],
            Self::SpawningOscillation => &[ParamFlag::Persistent, ParamFlag::Content],
            Self::SpawningTime => {
                &[
                    ParamFlag::NodeOwn,
                    ParamFlag::ClientUnknown,
                    ParamFlag::Persistent,
                    ParamFlag::Content,
                    ParamFlag::Deprecated,
                ]
            }
            Self::SpawnLeashAnchor => {
                &[ParamFlag::NodeOwn, ParamFlag::ClientUnknown, ParamFlag::Persistent]
            }
            Self::StatAnyDmgReduction => {
                &[
                    ParamFlag::NodeOwn,
                    ParamFlag::Persistent,
                    ParamFlag::ExcludeFromClient,
                ]
            }
            Self::StatAoEMaxSubTargets => {
                &[
                    ParamFlag::NodeOwn,
                    ParamFlag::ClientUnknown,
                    ParamFlag::Persistent,
                    ParamFlag::ExcludeFromClient,
                ]
            }
            Self::StatAoESubTargetsDamageMod => {
                &[
                    ParamFlag::NodeOwn,
                    ParamFlag::ClientUnknown,
                    ParamFlag::Persistent,
                    ParamFlag::ExcludeFromClient,
                ]
            }
            Self::StatArmorReduction => {
                &[
                    ParamFlag::NodeOwn,
                    ParamFlag::Persistent,
                    ParamFlag::ExcludeFromClient,
                ]
            }
            Self::StatAttackPower => {
                &[
                    ParamFlag::NodeOwn,
                    ParamFlag::Persistent,
                    ParamFlag::ExcludeFromClient,
                ]
            }
            Self::StatBaseDps => {
                &[
                    ParamFlag::NodeOwn,
                    ParamFlag::ClientUnknown,
                    ParamFlag::Persistent,
                    ParamFlag::ExcludeFromClient,
                ]
            }
            Self::StatBendChance => {
                &[
                    ParamFlag::NodeOwn,
                    ParamFlag::ClientUnknown,
                    ParamFlag::Persistent,
                    ParamFlag::ExcludeFromClient,
                ]
            }
            Self::StatBlockChance => {
                &[
                    ParamFlag::NodeOwn,
                    ParamFlag::ClientUnknown,
                    ParamFlag::Persistent,
                    ParamFlag::ExcludeFromClient,
                ]
            }
            Self::StatBlockedDamageMod => {
                &[
                    ParamFlag::NodeOwn,
                    ParamFlag::Persistent,
                    ParamFlag::ExcludeFromClient,
                ]
            }
            Self::StatCritChance => {
                &[
                    ParamFlag::NodeOwn,
                    ParamFlag::Persistent,
                    ParamFlag::ExcludeFromClient,
                ]
            }
            Self::StatCriticalChanceReduction => {
                &[
                    ParamFlag::NodeOwn,
                    ParamFlag::Persistent,
                    ParamFlag::ExcludeFromClient,
                ]
            }
            Self::StatCriticalDamageMod => {
                &[
                    ParamFlag::NodeOwn,
                    ParamFlag::Persistent,
                    ParamFlag::ExcludeFromClient,
                ]
            }
            Self::StatDegenerateLevel => {
                &[
                    ParamFlag::NodeOwn,
                    ParamFlag::Persistent,
                    ParamFlag::ExcludeFromClient,
                ]
            }
            Self::State => &[ParamFlag::NodeOwn],
            Self::StatEnergyCurrent => {
                &[
                    ParamFlag::NodeOwn,
                    ParamFlag::Persistent,
                    ParamFlag::ExcludeFromClient,
                ]
            }
            Self::StatEnergyCurrentH1 => {
                &[
                    ParamFlag::NodeOwn,
                    ParamFlag::Persistent,
                    ParamFlag::ExcludeFromClient,
                ]
            }
            Self::StatEnergyCurrentH2 => {
                &[
                    ParamFlag::NodeOwn,
                    ParamFlag::Persistent,
                    ParamFlag::ExcludeFromClient,
                ]
            }
            Self::StatEnergyCurrentH3 => {
                &[
                    ParamFlag::NodeOwn,
                    ParamFlag::Persistent,
                    ParamFlag::ExcludeFromClient,
                ]
            }
            Self::StatEnergyCurrentS1 => {
                &[
                    ParamFlag::NodeOwn,
                    ParamFlag::Persistent,
                    ParamFlag::ExcludeFromClient,
                ]
            }
            Self::StatEnergyCurrentS2 => {
                &[
                    ParamFlag::NodeOwn,
                    ParamFlag::Persistent,
                    ParamFlag::ExcludeFromClient,
                ]
            }
            Self::StatEnergyCurrentS3 => {
                &[
                    ParamFlag::NodeOwn,
                    ParamFlag::Persistent,
                    ParamFlag::ExcludeFromClient,
                ]
            }
            Self::StatEnergyMax => {
                &[
                    ParamFlag::NodeOwn,
                    ParamFlag::Persistent,
                    ParamFlag::ExcludeFromClient,
                ]
            }
            Self::StatFinalDamageMod => {
                &[
                    ParamFlag::NodeOwn,
                    ParamFlag::Persistent,
                    ParamFlag::ExcludeFromClient,
                ]
            }
            Self::StatFinalHealingMod => {
                &[
                    ParamFlag::NodeOwn,
                    ParamFlag::Persistent,
                    ParamFlag::ExcludeFromClient,
                ]
            }
            Self::StatHasteClassSkills => {
                &[
                    ParamFlag::NodeOwn,
                    ParamFlag::Persistent,
                    ParamFlag::ExcludeFromClient,
                ]
            }
            Self::StatHastePhysNormal => &[ParamFlag::NodeOwn, ParamFlag::Persistent],
            Self::StatHealingReceivedMod => {
                &[
                    ParamFlag::NodeOwn,
                    ParamFlag::Persistent,
                    ParamFlag::ExcludeFromClient,
                ]
            }
            Self::StatHealth => {
                &[
                    ParamFlag::NodeOwn,
                    ParamFlag::Persistent,
                    ParamFlag::ExcludeFromClient,
                ]
            }
            Self::StatHeavyEnergyPerHit => {
                &[
                    ParamFlag::NodeOwn,
                    ParamFlag::Persistent,
                    ParamFlag::ExcludeFromClient,
                ]
            }
            Self::StatHitChance => {
                &[
                    ParamFlag::NodeOwn,
                    ParamFlag::ClientUnknown,
                    ParamFlag::Persistent,
                    ParamFlag::ExcludeFromClient,
                ]
            }
            Self::StatReflectChance => {
                &[
                    ParamFlag::NodeOwn,
                    ParamFlag::ClientUnknown,
                    ParamFlag::Persistent,
                    ParamFlag::ExcludeFromClient,
                ]
            }
            Self::StatSpecialEnergyPerHit => {
                &[
                    ParamFlag::NodeOwn,
                    ParamFlag::ClientUnknown,
                    ParamFlag::Persistent,
                    ParamFlag::ExcludeFromClient,
                ]
            }
            Self::StatStamina => {
                &[
                    ParamFlag::NodeOwn,
                    ParamFlag::Persistent,
                    ParamFlag::ExcludeFromClient,
                ]
            }
            Self::StatStealthLevel => {
                &[
                    ParamFlag::NodeOwn,
                    ParamFlag::ClientUnknown,
                    ParamFlag::Persistent,
                    ParamFlag::ExcludeFromClient,
                ]
            }
            Self::StatWeaponDps => {
                &[
                    ParamFlag::NodeOwn,
                    ParamFlag::ClientUnknown,
                    ParamFlag::Persistent,
                    ParamFlag::ExcludeFromClient,
                ]
            }
            Self::Target => &[ParamFlag::NodeOwn],
            Self::Teamwork => {
                &[
                    ParamFlag::NodeOwn,
                    ParamFlag::Persistent,
                    ParamFlag::Content,
                    ParamFlag::PerInstanceSetting,
                ]
            }
            Self::TeleportPos => {
                &[ParamFlag::NodeOwn, ParamFlag::ServerOwn, ParamFlag::Persistent]
            }
            Self::TrophyMax => {
                &[
                    ParamFlag::NodeOwn,
                    ParamFlag::ClientUnknown,
                    ParamFlag::Persistent,
                    ParamFlag::Content,
                    ParamFlag::Deprecated,
                ]
            }
            Self::UniversalAwarenessRange => {
                &[
                    ParamFlag::NodeOwn,
                    ParamFlag::ClientUnknown,
                    ParamFlag::Persistent,
                    ParamFlag::Content,
                    ParamFlag::PerInstanceSetting,
                ]
            }
            Self::UseUnifiedVision => {
                &[
                    ParamFlag::Persistent,
                    ParamFlag::Content,
                    ParamFlag::PerInstanceSetting,
                ]
            }
            Self::VisibleItemInfo => &[ParamFlag::NodeOwn, ParamFlag::Persistent],
            Self::VisionAngle => {
                &[
                    ParamFlag::NodeOwn,
                    ParamFlag::ClientUnknown,
                    ParamFlag::Persistent,
                    ParamFlag::Content,
                    ParamFlag::PerInstanceSetting,
                ]
            }
            Self::VisionRange => {
                &[
                    ParamFlag::NodeOwn,
                    ParamFlag::ClientUnknown,
                    ParamFlag::Persistent,
                    ParamFlag::Content,
                    ParamFlag::PerInstanceSetting,
                ]
            }
            Self::Weapon => {
                &[
                    ParamFlag::NodeOwn,
                    ParamFlag::ServerOwn,
                    ParamFlag::Persistent,
                    ParamFlag::EquipSlot,
                ]
            }
            Self::WeaponDrawnByDefault => {
                &[
                    ParamFlag::Persistent,
                    ParamFlag::Content,
                    ParamFlag::PerInstanceSetting,
                ]
            }
            Self::WillSearchForEnemy => {
                &[
                    ParamFlag::Persistent,
                    ParamFlag::Content,
                    ParamFlag::PerInstanceSetting,
                    ParamFlag::Deprecated,
                ]
            }
            Self::Action0 => &[ParamFlag::NodeOwn],
            Self::Action0Duration => &[ParamFlag::NodeOwn],
            Self::Action0Option => &[ParamFlag::NodeOwn],
            Self::AlwaysVisibleToPlayers => {
                &[ParamFlag::ClientUnknown, ParamFlag::Persistent]
            }
            Self::AutoReviveDelay => {
                &[
                    ParamFlag::NodeOwn,
                    ParamFlag::Persistent,
                    ParamFlag::Content,
                    ParamFlag::PerInstanceSetting,
                ]
            }
            Self::AutoReviveTime => &[ParamFlag::NodeOwn, ParamFlag::Persistent],
            Self::AwareRange => {
                &[
                    ParamFlag::NodeOwn,
                    ParamFlag::Persistent,
                    ParamFlag::Content,
                    ParamFlag::PerInstanceSetting,
                ]
            }
            Self::BeaconRadius => {
                &[
                    ParamFlag::Persistent,
                    ParamFlag::Content,
                    ParamFlag::PerInstanceSetting,
                ]
            }
            Self::CollisionExtent => {
                &[
                    ParamFlag::NodeOwn,
                    ParamFlag::ServerOwn,
                    ParamFlag::Persistent,
                    ParamFlag::Content,
                ]
            }
            Self::ContentClass => {
                &[ParamFlag::NodeOwn, ParamFlag::Persistent, ParamFlag::Content]
            }
            Self::CycleQuestBase => {
                &[
                    ParamFlag::Persistent,
                    ParamFlag::Content,
                    ParamFlag::PerInstanceSetting,
                ]
            }
            Self::DefaultWeapon => {
                &[
                    ParamFlag::Persistent,
                    ParamFlag::Content,
                    ParamFlag::PerInstanceSetting,
                ]
            }
            Self::DespawnDelay => {
                &[
                    ParamFlag::NodeOwn,
                    ParamFlag::Persistent,
                    ParamFlag::Content,
                    ParamFlag::PerInstanceSetting,
                ]
            }
            Self::Dialogs => {
                &[
                    ParamFlag::NodeOwn,
                    ParamFlag::Persistent,
                    ParamFlag::Content,
                    ParamFlag::PerInstanceSetting,
                ]
            }
            Self::DisplayName => {
                &[
                    ParamFlag::Persistent,
                    ParamFlag::Content,
                    ParamFlag::PerInstanceSetting,
                ]
            }
            Self::EnableInGame => {
                &[
                    ParamFlag::Persistent,
                    ParamFlag::Content,
                    ParamFlag::PerInstanceSetting,
                ]
            }
            Self::FreedomProperties => &[ParamFlag::NodeOwn, ParamFlag::Persistent],
            Self::Freq => &[ParamFlag::Persistent, ParamFlag::Content],
            Self::GenerateInterestList => {
                &[ParamFlag::NodeOwn, ParamFlag::ClientUnknown, ParamFlag::Persistent]
            }
            Self::HiddenFromClients => {
                &[
                    ParamFlag::NodeOwn,
                    ParamFlag::ClientUnknown,
                    ParamFlag::Persistent,
                    ParamFlag::Content,
                ]
            }
            Self::HiddenFromPlayers => {
                &[
                    ParamFlag::NodeOwn,
                    ParamFlag::Persistent,
                    ParamFlag::Content,
                    ParamFlag::PerInstanceSetting,
                ]
            }
            Self::HideAfterInteraction => {
                &[
                    ParamFlag::Persistent,
                    ParamFlag::Content,
                    ParamFlag::PerInstanceSetting,
                ]
            }
            Self::InstanceTags => {
                &[
                    ParamFlag::NodeOwn,
                    ParamFlag::Persistent,
                    ParamFlag::Content,
                    ParamFlag::PerInstanceSetting,
                ]
            }
            Self::InstanceZoneKey => &[ParamFlag::NodeOwn, ParamFlag::Persistent],
            Self::InteractionDuration => {
                &[
                    ParamFlag::Persistent,
                    ParamFlag::Content,
                    ParamFlag::PerInstanceSetting,
                ]
            }
            Self::InteractionRadius => {
                &[
                    ParamFlag::Persistent,
                    ParamFlag::Content,
                    ParamFlag::PerInstanceSetting,
                ]
            }
            Self::InteractionResetTimer => {
                &[
                    ParamFlag::Persistent,
                    ParamFlag::Content,
                    ParamFlag::PerInstanceSetting,
                ]
            }
            Self::IsNonSpawnedAvatar => {
                &[
                    ParamFlag::NodeOwn,
                    ParamFlag::ServerOwn,
                    ParamFlag::Persistent,
                    ParamFlag::Content,
                ]
            }
            Self::IsSelfRevivable => {
                &[
                    ParamFlag::NodeOwn,
                    ParamFlag::ServerOwn,
                    ParamFlag::Persistent,
                    ParamFlag::Content,
                ]
            }
            Self::LastInteractionTime => &[ParamFlag::NodeOwn],
            Self::LuaScript => {
                &[
                    ParamFlag::NodeOwn,
                    ParamFlag::Persistent,
                    ParamFlag::Content,
                    ParamFlag::PerInstanceSetting,
                ]
            }
            Self::Lvl => {
                &[
                    ParamFlag::NodeOwn,
                    ParamFlag::Persistent,
                    ParamFlag::Content,
                    ParamFlag::PerInstanceSetting,
                ]
            }
            Self::MaterialOverride => {
                &[
                    ParamFlag::NodeOwn,
                    ParamFlag::ServerOwn,
                    ParamFlag::Persistent,
                    ParamFlag::Content,
                ]
            }
            Self::Nodelink => {
                &[
                    ParamFlag::NodeOwn,
                    ParamFlag::Persistent,
                    ParamFlag::Content,
                    ParamFlag::PerInstanceSetting,
                ]
            }
            Self::OriginalNodeName => &[ParamFlag::NodeOwn, ParamFlag::Persistent],
            Self::OriginalZoneName => &[ParamFlag::NodeOwn, ParamFlag::Persistent],
            Self::PartyGuid => &[ParamFlag::NodeOwn, ParamFlag::Persistent],
            Self::PathfindSafeSpawn => {
                &[
                    ParamFlag::Persistent,
                    ParamFlag::Content,
                    ParamFlag::PerInstanceSetting,
                ]
            }
            Self::Pos => {
                &[
                    ParamFlag::ServerOwn,
                    ParamFlag::ClientUnknown,
                    ParamFlag::Persistent,
                    ParamFlag::PerInstanceSetting,
                ]
            }
            Self::Power => {
                &[ParamFlag::Persistent, ParamFlag::Content, ParamFlag::Deprecated]
            }
            Self::Priority => {
                &[
                    ParamFlag::NodeOwn,
                    ParamFlag::ServerOwn,
                    ParamFlag::Persistent,
                    ParamFlag::Content,
                ]
            }
            Self::QuestFlags => {
                &[
                    ParamFlag::NodeOwn,
                    ParamFlag::Persistent,
                    ParamFlag::Content,
                    ParamFlag::PerInstanceSetting,
                ]
            }
            Self::ReadableName => &[ParamFlag::Persistent, ParamFlag::PerInstanceSetting],
            Self::RespawnDelay => {
                &[
                    ParamFlag::NodeOwn,
                    ParamFlag::ServerOwn,
                    ParamFlag::Persistent,
                    ParamFlag::Content,
                    ParamFlag::PerInstanceSetting,
                ]
            }
            Self::RespawnRegionName => {
                &[
                    ParamFlag::NodeOwn,
                    ParamFlag::ClientUnknown,
                    ParamFlag::ExcludeFromClient,
                ]
            }
            Self::RespawnRegionNameOverride => {
                &[
                    ParamFlag::ClientUnknown,
                    ParamFlag::Persistent,
                    ParamFlag::Content,
                    ParamFlag::PerInstanceSetting,
                    ParamFlag::ExcludeFromClient,
                ]
            }
            Self::Rot => {
                &[
                    ParamFlag::ServerOwn,
                    ParamFlag::ClientUnknown,
                    ParamFlag::Persistent,
                    ParamFlag::PerInstanceSetting,
                ]
            }
            Self::SelfRadius => {
                &[
                    ParamFlag::NodeOwn,
                    ParamFlag::ServerOwn,
                    ParamFlag::Persistent,
                    ParamFlag::Content,
                ]
            }
            Self::SpawnMethod => &[ParamFlag::NodeOwn, ParamFlag::Persistent],
            Self::SpawnPosition => {
                &[
                    ParamFlag::NodeOwn,
                    ParamFlag::Persistent,
                    ParamFlag::PerInstanceSetting,
                ]
            }
            Self::SpawnRotation => {
                &[
                    ParamFlag::NodeOwn,
                    ParamFlag::Persistent,
                    ParamFlag::PerInstanceSetting,
                ]
            }
            Self::Tags => {
                &[
                    ParamFlag::NodeOwn,
                    ParamFlag::ServerOwn,
                    ParamFlag::Persistent,
                    ParamFlag::Content,
                    ParamFlag::PerInstanceSetting,
                ]
            }
            Self::TeamId => {
                &[
                    ParamFlag::NodeOwn,
                    ParamFlag::Persistent,
                    ParamFlag::Content,
                    ParamFlag::PerInstanceSetting,
                ]
            }
            Self::Ue3EdVisual => &[ParamFlag::Content, ParamFlag::ExcludeFromClient],
            Self::VisibleOnQuestAvailable => {
                &[
                    ParamFlag::Persistent,
                    ParamFlag::Content,
                    ParamFlag::PerInstanceSetting,
                ]
            }
            Self::VisibleOnQuestComplete => {
                &[
                    ParamFlag::Persistent,
                    ParamFlag::Content,
                    ParamFlag::PerInstanceSetting,
                ]
            }
            Self::VisibleOnQuestFinished => {
                &[
                    ParamFlag::Persistent,
                    ParamFlag::Content,
                    ParamFlag::PerInstanceSetting,
                ]
            }
            Self::VisibleOnQuestInProgress => {
                &[
                    ParamFlag::Persistent,
                    ParamFlag::Content,
                    ParamFlag::PerInstanceSetting,
                ]
            }
            Self::WorldZoneObjectIndex => &[ParamFlag::NodeOwn, ParamFlag::Persistent],
            Self::Zone => {
                &[ParamFlag::NodeOwn, ParamFlag::ServerOwn, ParamFlag::Persistent]
            }
            Self::ZoneGuid => {
                &[ParamFlag::NodeOwn, ParamFlag::ServerOwn, ParamFlag::Persistent]
            }
            Self::BitsMultiplier => {
                &[
                    ParamFlag::NodeOwn,
                    ParamFlag::Persistent,
                    ParamFlag::Content,
                    ParamFlag::PerInstanceSetting,
                ]
            }
            Self::Defb => {
                &[
                    ParamFlag::NodeOwn,
                    ParamFlag::Persistent,
                    ParamFlag::Content,
                    ParamFlag::PerInstanceSetting,
                ]
            }
            Self::DropLevelVariance => {
                &[
                    ParamFlag::NodeOwn,
                    ParamFlag::Persistent,
                    ParamFlag::Content,
                    ParamFlag::PerInstanceSetting,
                ]
            }
            Self::EvadeRadius => {
                &[
                    ParamFlag::NodeOwn,
                    ParamFlag::Persistent,
                    ParamFlag::Content,
                    ParamFlag::PerInstanceSetting,
                ]
            }
            Self::ExperienceMultiplier => {
                &[
                    ParamFlag::NodeOwn,
                    ParamFlag::Persistent,
                    ParamFlag::Content,
                    ParamFlag::PerInstanceSetting,
                ]
            }
            Self::FragmentsMultiplier => {
                &[
                    ParamFlag::NodeOwn,
                    ParamFlag::Persistent,
                    ParamFlag::Content,
                    ParamFlag::PerInstanceSetting,
                ]
            }
            Self::InstanceGroup => {
                &[ParamFlag::Persistent, ParamFlag::PerInstanceSetting]
            }
            Self::InstanceGuid => &[ParamFlag::NodeOwn, ParamFlag::Persistent],
            Self::IsUnAttackable => {
                &[
                    ParamFlag::NodeOwn,
                    ParamFlag::Persistent,
                    ParamFlag::Content,
                    ParamFlag::PerInstanceSetting,
                ]
            }
            Self::MoveDest => {
                &[ParamFlag::ClientOwn, ParamFlag::NodeOwn, ParamFlag::Persistent]
            }
            Self::MoveSpeed => {
                &[
                    ParamFlag::ClientOwn,
                    ParamFlag::NodeOwn,
                    ParamFlag::Persistent,
                    ParamFlag::Content,
                    ParamFlag::PerInstanceSetting,
                ]
            }
            Self::NickName => &[ParamFlag::Persistent, ParamFlag::Content],
            Self::NpcStateInfo => &[ParamFlag::NodeOwn],
            Self::NpcType => &[ParamFlag::Persistent, ParamFlag::Content],
            Self::Orientation => &[ParamFlag::NodeOwn, ParamFlag::Persistent],
            Self::RunSpeed => {
                &[
                    ParamFlag::NodeOwn,
                    ParamFlag::Persistent,
                    ParamFlag::Content,
                    ParamFlag::PerInstanceSetting,
                ]
            }
            Self::ShuffleSpeed => {
                &[
                    ParamFlag::NodeOwn,
                    ParamFlag::Persistent,
                    ParamFlag::Content,
                    ParamFlag::PerInstanceSetting,
                ]
            }
            Self::SomaMultiplier => {
                &[
                    ParamFlag::NodeOwn,
                    ParamFlag::Persistent,
                    ParamFlag::Content,
                    ParamFlag::PerInstanceSetting,
                ]
            }
            Self::SpawnLeashRadius => {
                &[
                    ParamFlag::NodeOwn,
                    ParamFlag::Persistent,
                    ParamFlag::Content,
                    ParamFlag::PerInstanceSetting,
                ]
            }
            Self::SpeakResponse => {
                &[
                    ParamFlag::NodeOwn,
                    ParamFlag::Persistent,
                    ParamFlag::Content,
                    ParamFlag::Deprecated,
                ]
            }
            Self::WalkSpeed => {
                &[
                    ParamFlag::NodeOwn,
                    ParamFlag::Persistent,
                    ParamFlag::Content,
                    ParamFlag::PerInstanceSetting,
                ]
            }
        }
    }
}
impl FromStr for NpcOtherland {
    type Err = ParamError;
    fn from_str(s: &str) -> Result<Self, Self::Err> {
        NPC_OTHERLAND_ATTRIBUTES
            .get(s)
            .map(|v| *v)
            .ok_or(ParamError::UnknownAttributeName)
    }
}
impl TryFrom<u16> for NpcOtherland {
    type Error = ParamError;
    fn try_from(val: u16) -> Result<Self, Self::Error> {
        match val {
            1179u16 => Ok(Self::Action0),
            1180u16 => Ok(Self::Action0Duration),
            1154u16 => Ok(Self::Action0Option),
            3493u16 => Ok(Self::AlwaysVisibleToPlayers),
            10525u16 => Ok(Self::AutoReviveDelay),
            10465u16 => Ok(Self::AutoReviveTime),
            8244u16 => Ok(Self::AwareRange),
            10936u16 => Ok(Self::BeaconRadius),
            1181u16 => Ok(Self::CollisionExtent),
            1178u16 => Ok(Self::ContentClass),
            11071u16 => Ok(Self::CycleQuestBase),
            7211u16 => Ok(Self::DefaultWeapon),
            9635u16 => Ok(Self::DespawnDelay),
            8831u16 => Ok(Self::Dialogs),
            6597u16 => Ok(Self::DisplayName),
            6823u16 => Ok(Self::EnableInGame),
            11195u16 => Ok(Self::FreedomProperties),
            1193u16 => Ok(Self::Freq),
            1182u16 => Ok(Self::GenerateInterestList),
            1183u16 => Ok(Self::HiddenFromClients),
            1144u16 => Ok(Self::HiddenFromPlayers),
            9051u16 => Ok(Self::HideAfterInteraction),
            4351u16 => Ok(Self::Icon),
            1155u16 => Ok(Self::InstanceTags),
            5560u16 => Ok(Self::InstanceZoneKey),
            11141u16 => Ok(Self::InteractionDuration),
            7472u16 => Ok(Self::InteractionRadius),
            9053u16 => Ok(Self::InteractionResetTimer),
            1077u16 => Ok(Self::IsNonSpawnedAvatar),
            7156u16 => Ok(Self::IsSelfRevivable),
            9052u16 => Ok(Self::LastInteractionTime),
            7779u16 => Ok(Self::LuaScript),
            6180u16 => Ok(Self::Lvl),
            4730u16 => Ok(Self::MaterialOverride),
            1149u16 => Ok(Self::Nodelink),
            1079u16 => Ok(Self::OriginalNodeName),
            1080u16 => Ok(Self::OriginalZoneName),
            1184u16 => Ok(Self::PartyGuid),
            1136u16 => Ok(Self::PathfindSafeSpawn),
            1185u16 => Ok(Self::Pos),
            1192u16 => Ok(Self::Power),
            1186u16 => Ok(Self::Priority),
            9933u16 => Ok(Self::QuestFlags),
            3677u16 => Ok(Self::ReadableName),
            1076u16 => Ok(Self::RespawnDelay),
            10783u16 => Ok(Self::RespawnRegionName),
            10842u16 => Ok(Self::RespawnRegionNameOverride),
            1165u16 => Ok(Self::Rot),
            1187u16 => Ok(Self::SelfRadius),
            6098u16 => Ok(Self::SpawnMethod),
            7834u16 => Ok(Self::SpawnPosition),
            8187u16 => Ok(Self::SpawnRotation),
            1188u16 => Ok(Self::Tags),
            1189u16 => Ok(Self::TeamId),
            1168u16 => Ok(Self::Ue3ClassId),
            9809u16 => Ok(Self::Ue3EdVisual),
            8590u16 => Ok(Self::VisibleOnQuestAvailable),
            8587u16 => Ok(Self::VisibleOnQuestComplete),
            8588u16 => Ok(Self::VisibleOnQuestFinished),
            8589u16 => Ok(Self::VisibleOnQuestInProgress),
            1078u16 => Ok(Self::WorldZoneObjectIndex),
            1191u16 => Ok(Self::Zone),
            1102u16 => Ok(Self::ZoneGuid),
            11302u16 => Ok(Self::BitsMultiplier),
            1161u16 => Ok(Self::Defb),
            9712u16 => Ok(Self::DropLevelVariance),
            6877u16 => Ok(Self::EvadeRadius),
            11304u16 => Ok(Self::ExperienceMultiplier),
            11301u16 => Ok(Self::FragmentsMultiplier),
            8042u16 => Ok(Self::InstanceGroup),
            1171u16 => Ok(Self::InstanceGuid),
            4180u16 => Ok(Self::InteractRadius),
            4934u16 => Ok(Self::IsUnAttackable),
            1172u16 => Ok(Self::MoveDest),
            1173u16 => Ok(Self::MoveSpeed),
            1174u16 => Ok(Self::NickName),
            7923u16 => Ok(Self::NpcStateInfo),
            1175u16 => Ok(Self::NpcType),
            1176u16 => Ok(Self::Orientation),
            1153u16 => Ok(Self::RunSpeed),
            1145u16 => Ok(Self::ShuffleSpeed),
            11303u16 => Ok(Self::SomaMultiplier),
            5302u16 => Ok(Self::SpawnLeashRadius),
            1177u16 => Ok(Self::SpeakResponse),
            1146u16 => Ok(Self::WalkSpeed),
            8913u16 => Ok(Self::Abilities),
            8059u16 => Ok(Self::ActivateCustomization),
            5421u16 => Ok(Self::Aggression),
            10173u16 => Ok(Self::AiState),
            8818u16 => Ok(Self::AiTemplate),
            1150u16 => Ok(Self::Alive),
            1132u16 => Ok(Self::AliveTime),
            1159u16 => Ok(Self::AttackedBy),
            4195u16 => Ok(Self::AttackerGroup),
            6296u16 => Ok(Self::AttributeEnergy),
            6295u16 => Ok(Self::AttributeEnergyRegen),
            6284u16 => Ok(Self::AttributeHastePhys),
            6283u16 => Ok(Self::AttributeHasteSpell),
            6297u16 => Ok(Self::AttributeHealthRegen),
            5411u16 => Ok(Self::AttributeMovement),
            9362u16 => Ok(Self::AutoGeneratedLootTable),
            1158u16 => Ok(Self::AvatarStatus),
            1131u16 => Ok(Self::BagVolume0),
            6884u16 => Ok(Self::BaseDodgeChance),
            6888u16 => Ok(Self::BaseEvadeChance),
            6889u16 => Ok(Self::BaseParryChance),
            1135u16 => Ok(Self::BehaviorConfig),
            1101u16 => Ok(Self::BlockedAbilityEffectTypes),
            11568u16 => Ok(Self::BonusDmg),
            11567u16 => Ok(Self::BonusHp),
            10378u16 => Ok(Self::CanBeHitByAoEThroughObstacles),
            5856u16 => Ok(Self::CanBeLooted),
            10374u16 => Ok(Self::CanBeNotifiedThroughObstacles),
            10167u16 => Ok(Self::CanRotateOnClient),
            4834u16 => Ok(Self::CapturedBy),
            1130u16 => Ok(Self::CarryBack),
            1129u16 => Ok(Self::CarryFront),
            1128u16 => Ok(Self::Chest),
            11288u16 => Ok(Self::ClientLoadingPriority),
            9919u16 => Ok(Self::CombatDefb),
            9211u16 => Ok(Self::CombatNotifyRadius),
            1160u16 => Ok(Self::CombatStatus),
            1095u16 => Ok(Self::CombatStyle),
            12296u16 => Ok(Self::ConfigCategories),
            4305u16 => Ok(Self::CurrentAiNotifyType),
            1110u16 => Ok(Self::CurrentEmotion),
            1151u16 => Ok(Self::CurrentForm),
            1152u16 => Ok(Self::CurrentSkin),
            7756u16 => Ok(Self::CustomizationGender),
            7755u16 => Ok(Self::CustomizationHeight),
            6543u16 => Ok(Self::DeathDurationMyLand),
            1117u16 => Ok(Self::DefaultIdle),
            8102u16 => Ok(Self::DefaultItems),
            8051u16 => Ok(Self::DefaultItemsContentGuid),
            10924u16 => Ok(Self::DieWithoutOwner),
            8065u16 => Ok(Self::DirectorTags),
            5493u16 => Ok(Self::DivertHp),
            10913u16 => Ok(Self::DonatorName),
            11088u16 => Ok(Self::EffectImmunityMainGroups),
            11087u16 => Ok(Self::EffectImmunitySubGroups),
            8055u16 => Ok(Self::EnableCustomization),
            4838u16 => Ok(Self::EncounterFormation),
            4816u16 => Ok(Self::EncounterId),
            4827u16 => Ok(Self::EncounterRole),
            10920u16 => Ok(Self::EnforceAliveTime),
            1113u16 => Ok(Self::EvadeRange),
            1121u16 => Ok(Self::ExtraV3Data),
            10163u16 => Ok(Self::FaceTargetWhenClose),
            9205u16 => Ok(Self::Faction),
            5999u16 => Ok(Self::FragmentsRequiredOverride),
            6000u16 => Ok(Self::FragmentTypeOverride),
            9505u16 => Ok(Self::GeneralDifficulty),
            9497u16 => Ok(Self::GroupDifficulty),
            11569u16 => Ok(Self::GroupDifficultyNew),
            6298u16 => Ok(Self::HasAttributes),
            1127u16 => Ok(Self::Head),
            1164u16 => Ok(Self::HpCur),
            1147u16 => Ok(Self::HpMax),
            1112u16 => Ok(Self::HpMin),
            12142u16 => Ok(Self::HpMod),
            4211u16 => Ok(Self::IgnoreTags),
            4199u16 => Ok(Self::InMiniGame),
            6092u16 => Ok(Self::InSleepState),
            5420u16 => Ok(Self::Intelligence),
            1115u16 => Ok(Self::InteractRange),
            1157u16 => Ok(Self::InterestPos),
            1086u16 => Ok(Self::IsInCombat),
            5944u16 => Ok(Self::IsInFormation),
            4655u16 => Ok(Self::IsLooted),
            8811u16 => Ok(Self::IsOnGround),
            11221u16 => Ok(Self::IsSellingCashItems),
            5917u16 => Ok(Self::IsShardObject),
            8791u16 => Ok(Self::IsVisible),
            1109u16 => Ok(Self::LastAttackPosition),
            1140u16 => Ok(Self::Lifetime),
            1107u16 => Ok(Self::LootAlways),
            1104u16 => Ok(Self::LootChances),
            1106u16 => Ok(Self::LootExacts),
            1105u16 => Ok(Self::LootItems),
            4301u16 => Ok(Self::LootPartition1),
            4311u16 => Ok(Self::LootPartition2),
            4397u16 => Ok(Self::LootPartition3),
            4396u16 => Ok(Self::LootPartition4),
            4395u16 => Ok(Self::LootPartition5),
            4394u16 => Ok(Self::LootPartition6),
            1108u16 => Ok(Self::LootTable),
            11020u16 => Ok(Self::LuaAssignedString),
            9861u16 => Ok(Self::LuaScriptCombat),
            11294u16 => Ok(Self::ModifyVisionRangeByLevel),
            3199u16 => Ok(Self::Mover),
            1096u16 => Ok(Self::OffsetData),
            5504u16 => Ok(Self::PosDebug),
            10115u16 => Ok(Self::PostSpawnStateDuration),
            1123u16 => Ok(Self::Quest1),
            1120u16 => Ok(Self::Quest2),
            1111u16 => Ok(Self::QuestOwner),
            1097u16 => Ok(Self::Quests),
            11337u16 => Ok(Self::RangedAttackStrategy),
            1124u16 => Ok(Self::ReactionPlan),
            11783u16 => Ok(Self::RecipieDrop),
            3198u16 => Ok(Self::RelativePosToCarrier),
            1133u16 => Ok(Self::SayData),
            1134u16 => Ok(Self::SayIndex),
            4820u16 => Ok(Self::ScriptClass),
            5828u16 => Ok(Self::ScriptConfig),
            6769u16 => Ok(Self::SeekHelpBelowHp),
            8806u16 => Ok(Self::SeekHelpExecutionRadius),
            6797u16 => Ok(Self::SeekHelpFromNpcTypes),
            6768u16 => Ok(Self::SeekHelpWithinRadius),
            11341u16 => Ok(Self::SellCategories),
            1125u16 => Ok(Self::SellExacts),
            1126u16 => Ok(Self::SellItems),
            10178u16 => Ok(Self::SellSkuItems),
            1100u16 => Ok(Self::Size),
            4913u16 => Ok(Self::SoundTag),
            5921u16 => Ok(Self::SpawnerAvatarGuid),
            1139u16 => Ok(Self::SpawnerAvatarId),
            1137u16 => Ok(Self::SpawningOscillation),
            1138u16 => Ok(Self::SpawningTime),
            6024u16 => Ok(Self::SpawnLeashAnchor),
            10063u16 => Ok(Self::StatAnyDmgReduction),
            10026u16 => Ok(Self::StatAoEMaxSubTargets),
            10025u16 => Ok(Self::StatAoESubTargetsDamageMod),
            9590u16 => Ok(Self::StatArmorReduction),
            9565u16 => Ok(Self::StatAttackPower),
            9514u16 => Ok(Self::StatBaseDps),
            9510u16 => Ok(Self::StatBendChance),
            6898u16 => Ok(Self::StatBlockChance),
            9594u16 => Ok(Self::StatBlockedDamageMod),
            9569u16 => Ok(Self::StatCritChance),
            9573u16 => Ok(Self::StatCriticalChanceReduction),
            9595u16 => Ok(Self::StatCriticalDamageMod),
            10043u16 => Ok(Self::StatDegenerateLevel),
            9865u16 => Ok(Self::State),
            9576u16 => Ok(Self::StatEnergyCurrent),
            6778u16 => Ok(Self::StatEnergyCurrentH1),
            11022u16 => Ok(Self::StatEnergyCurrentH2),
            11240u16 => Ok(Self::StatEnergyCurrentH3),
            6777u16 => Ok(Self::StatEnergyCurrentS1),
            11023u16 => Ok(Self::StatEnergyCurrentS2),
            11239u16 => Ok(Self::StatEnergyCurrentS3),
            9575u16 => Ok(Self::StatEnergyMax),
            11211u16 => Ok(Self::StatFinalDamageMod),
            11212u16 => Ok(Self::StatFinalHealingMod),
            11246u16 => Ok(Self::StatHasteClassSkills),
            9574u16 => Ok(Self::StatHastePhysNormal),
            11391u16 => Ok(Self::StatHealingReceivedMod),
            9533u16 => Ok(Self::StatHealth),
            7043u16 => Ok(Self::StatHeavyEnergyPerHit),
            9512u16 => Ok(Self::StatHitChance),
            9509u16 => Ok(Self::StatReflectChance),
            7042u16 => Ok(Self::StatSpecialEnergyPerHit),
            9605u16 => Ok(Self::StatStamina),
            7132u16 => Ok(Self::StatStealthLevel),
            9513u16 => Ok(Self::StatWeaponDps),
            1167u16 => Ok(Self::Target),
            5419u16 => Ok(Self::Teamwork),
            1103u16 => Ok(Self::TeleportPos),
            3135u16 => Ok(Self::TrophyMax),
            6792u16 => Ok(Self::UniversalAwarenessRange),
            11293u16 => Ok(Self::UseUnifiedVision),
            1075u16 => Ok(Self::VisibleItemInfo),
            6788u16 => Ok(Self::VisionAngle),
            1114u16 => Ok(Self::VisionRange),
            1169u16 => Ok(Self::Weapon),
            9346u16 => Ok(Self::WeaponDrawnByDefault),
            9923u16 => Ok(Self::WillSearchForEnemy),
            _ => Err(ParamError::UnknownAttributeId),
        }
    }
}
